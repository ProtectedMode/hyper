var searchIndex = {};
searchIndex['hyper'] = {"items":[[0,"","hyper","# Hyper\nHyper is a fast, modern HTTP implementation written in and for Rust. It\nis a low-level typesafe abstraction over raw HTTP, providing an elegant\nlayer over \"stringly-typed\" HTTP."],[2,"HttpError","","A set of errors that can occur parsing HTTP streams."],[12,"HttpMethodError","","An invalid `Method`, such as `GE,T`.",0],[12,"HttpUriError","","An invalid `RequestUri`, such as `exam ple.domain`.",0],[12,"HttpVersionError","","An invalid `HttpVersion`, such as `HTP/1.1`",0],[12,"HttpHeaderError","","An invalid `Header`.",0],[12,"HttpStatusError","","An invalid `Status`, such as `1337 ELITE`.",0],[12,"HttpIoError","","An `IoError` that occured while trying to read or write to a network stream.",0],[0,"client","","HTTP Client"],[1,"Client","hyper::client","A Client to use additional features with Requests."],[1,"RequestBuilder","","Options for an individual Request."],[2,"Body","","The target enum for the IntoBody trait."],[12,"ChunkedBody","","A Reader does not necessarily know it's size, so it is chunked.",1],[12,"SizedBody","","For Readers that can know their size, like a `File`.",1],[12,"BufBody","","A String has a size, and uses Content-Length.",1],[2,"RedirectPolicy","","Behavior regarding how to handle redirects within a Client."],[12,"FollowNone","","Don't follow any redirects.",2],[12,"FollowAll","","Follow all redirects.",2],[12,"FollowIf","","Follow a redirect if the contained function returns true.",2],[0,"request","","Client Requests"],[1,"Request","hyper::client::request","A client request to a remote server."],[11,"url","","The target URI for this request.",3],[11,"version","","The HTTP version of this request.",3],[10,"headers","","Read the Request headers.",3],[10,"method","","Read the Request method.",3],[10,"new","","Create a new client request.",3],[10,"with_connector","","Create a new client request with a specific underlying NetworkStream.",3],[10,"start","","Consume a Fresh Request, writing the headers and method,\nreturning a Streaming Request.",3],[10,"headers_mut","","Get a mutable reference to the Request headers.",3],[10,"send","","Completes writing the request, and returns a response to read from.",3],[10,"write","","",3],[10,"flush","","",3],[0,"response","hyper::client","Client Responses"],[1,"Response","hyper::client::response","A response for a client request to a remote server."],[11,"status","","The status from the server.",4],[11,"headers","","The headers from the server.",4],[11,"version","","The HTTP version of this response from the server.",4],[10,"new","","Creates a new response from a server.",4],[10,"status_raw","","Get the raw status code and reason.",4],[10,"into_inner","","Consumes the Request to return the NetworkStream underneath.",4],[10,"read","","",4],[6,"IntoBody","hyper::client","A helper trait to allow overloading of the body parameter."],[9,"into_body","","Consumes self into an instance of `Body`.",5],[6,"IntoUrl","","A helper trait to convert common objects into a Url."],[9,"into_url","","Consumes the object, trying to return a Url.",6],[10,"new","","Create a new Client.",7],[10,"set_ssl_verifier","","Set the SSL verifier callback for use with OpenSSL.",7],[10,"with_connector","","Create a new client with a specific connector.",7],[10,"set_redirect_policy","","Set the RedirectPolicy.",7],[10,"get","","Execute a Get request.",7],[10,"head","","Execute a Head request.",7],[10,"post","","Execute a Post request.",7],[10,"put","","Execute a Put request.",7],[10,"delete","","Execute a Delete request.",7],[10,"request","","Build a new request using this Client.",7],[10,"body","","Set a request body to be sent.",8],[10,"headers","","Add additional headers to the request.",8],[10,"header","","Add an individual new header to the request.",8],[10,"send","","Execute this request and receive a Response back.",8],[10,"read","","",1],[10,"into_body","","",1],[10,"into_url","url","",9],[10,"clone","hyper::client","",2],[10,"default","","",2],[0,"method","hyper","The HTTP request method"],[2,"Method","hyper::method","The Request Method (VERB)"],[12,"Options","","OPTIONS",10],[12,"Get","","GET",10],[12,"Post","","POST",10],[12,"Put","","PUT",10],[12,"Delete","","DELETE",10],[12,"Head","","HEAD",10],[12,"Trace","","TRACE",10],[12,"Connect","","CONNECT",10],[12,"Patch","","PATCH",10],[12,"Extension","","Method extentions. An example would be `let m = Extension(\"FOO\".to_string())`.",10],[10,"fmt","","",10],[10,"hash","","",10],[10,"eq","","",10],[10,"ne","","",10],[10,"clone","","",10],[10,"safe","","Whether a method is considered \"safe\", meaning the request is\nessentially read-only.",10],[10,"idempotent","","Whether a method is considered \"idempotent\", meaning the request has\nthe same result is executed multiple times.",10],[10,"from_str","","",10],[10,"fmt","","",10],[0,"header","hyper","Headers container, and common header fields."],[1,"QualityItem","hyper::header","Represents an item with a quality value as defined in\n[RFC7231](https://tools.ietf.org/html/rfc7231#section-5.3.1)."],[11,"item","","The actual contents of the field.",11],[11,"quality","","The quality (client or server preference) for the value.",11],[1,"AccessControlAllowHeaders","","The `Access-Control-Allow-Headers` response header,\npart of [CORS](http://www.w3.org/TR/cors/)."],[1,"AccessControlAllowMethods","","The `Access-Control-Allow-Methods` response header,\npart of [CORS](http://www.w3.org/TR/cors/)."],[1,"AccessControlMaxAge","","The `Access-Control-Max-Age` response header,\npart of [CORS](http://www.w3.org/TR/cors/)."],[1,"AccessControlRequestHeaders","","The `Access-Control-Request-Headers` request header,\npart of [CORS](http://www.w3.org/TR/cors/)."],[1,"AccessControlRequestMethod","","The `Access-Control-Request-Method` request header,\npart of [CORS](http://www.w3.org/TR/cors/)."],[1,"Accept","","The `Accept` header."],[1,"AcceptEncoding","","The `Accept-Encoding` header"],[1,"Allow","","The `Allow` header.\nSee also https://tools.ietf.org/html/rfc7231#section-7.4.1"],[1,"Authorization","","The `Authorization` header field."],[1,"CacheControl","","The Cache-Control header."],[1,"Connection","","The `Connection` header."],[1,"ContentLength","","The `Content-Length` header."],[1,"ContentType","","The `Content-Type` header."],[1,"Cookies","","The `Cookie` header. Defined in [RFC6265](tools.ietf.org/html/rfc6265#section-5.4):"],[1,"Date","","The `Date` header field."],[1,"Etag","","The `Etag` header."],[11,"weak","","Weakness indicator for the tag",12],[11,"tag","","The opaque string in between the DQUOTEs",12],[1,"Expires","","The `Expires` header field."],[1,"Host","","The `Host` header."],[11,"hostname","","The hostname, such a example.domain.",13],[11,"port","","An optional port number.",13],[1,"IfModifiedSince","","The `If-Modified-Since` header field."],[1,"LastModified","","The `LastModified` header field."],[1,"Location","","The `Location` header."],[1,"Referer","","The `Referer` header."],[1,"Server","","The `Server` header field."],[1,"SetCookie","","The `Set-Cookie` header"],[1,"TransferEncoding","","The `Transfer-Encoding` header."],[1,"Upgrade","","The `Upgrade` header."],[1,"UserAgent","","The `User-Agent` header field."],[1,"Headers","","A map of header fields on requests and responses."],[1,"HeadersItems","","An `Iterator` over the fields in a `Headers` map."],[1,"HeaderView","","Returned with the `HeadersItems` iterator."],[1,"HeaderFormatter","","A wrapper around any Header with a Show impl that calls fmt_header."],[2,"Encoding","","A value to represent an encoding used in `Transfer-Encoding`\nor `Accept-Encoding` header."],[12,"Chunked","","The `chunked` encoding.",14],[12,"Gzip","","The `gzip` encoding.",14],[12,"Deflate","","The `deflate` encoding.",14],[12,"Compress","","The `compress` encoding.",14],[12,"Identity","","The `identity` encoding.",14],[12,"EncodingExt","","Some other encoding that is less common, can be any String.",14],[2,"AccessControlAllowOrigin","","The `Access-Control-Allow-Origin` response header,\npart of [CORS](http://www.w3.org/TR/cors/)."],[12,"AllowStar","","Allow all origins",15],[12,"AllowOrigin","","Allow one particular origin",15],[2,"Vary","","The `Allow` header.\nSee also https://tools.ietf.org/html/rfc7231#section-7.1.4"],[12,"Any","","This corresponds to '*'.",16],[12,"Headers","","The header field names which will influence the response representation.",16],[2,"ConnectionOption","","Values that can be in the `Connection` header."],[12,"KeepAlive","","The `keep-alive` connection value.",17],[12,"Close","","The `close` connection value.",17],[12,"ConnectionHeader","","Values in the Connection header that are supposed to be names of other Headers.",17],[3,"qitem","","Convinience function to wrap a value in a `QualityItem`\nSets `q` to the default 1.0"],[10,"fmt","","",18],[10,"eq","","",18],[10,"ne","","",18],[10,"clone","","",18],[10,"header_name","","",18],[10,"parse_header","","",18],[10,"fmt_header","","",18],[10,"fmt","","",19],[10,"eq","","",19],[10,"ne","","",19],[10,"clone","","",19],[10,"header_name","","",19],[10,"parse_header","","",19],[10,"fmt_header","","",19],[10,"fmt","","",15],[10,"eq","","",15],[10,"ne","","",15],[10,"clone","","",15],[10,"header_name","","",15],[10,"parse_header","","",15],[10,"fmt_header","","",15],[10,"fmt","","",20],[10,"eq","","",20],[10,"ne","","",20],[10,"clone","","",20],[10,"header_name","","",20],[10,"parse_header","","",20],[10,"fmt_header","","",20],[10,"fmt","","",21],[10,"eq","","",21],[10,"ne","","",21],[10,"clone","","",21],[10,"header_name","","",21],[10,"parse_header","","",21],[10,"fmt_header","","",21],[10,"fmt","","",22],[10,"eq","","",22],[10,"ne","","",22],[10,"clone","","",22],[10,"header_name","","",22],[10,"parse_header","","",22],[10,"fmt_header","","",22],[10,"fmt","","",18],[10,"eq","","",18],[10,"ne","","",18],[10,"clone","","",18],[10,"header_name","","",18],[10,"parse_header","","",18],[10,"fmt_header","","",18],[10,"fmt","","",19],[10,"eq","","",19],[10,"ne","","",19],[10,"clone","","",19],[10,"header_name","","",19],[10,"parse_header","","",19],[10,"fmt_header","","",19],[10,"fmt","","",15],[10,"eq","","",15],[10,"ne","","",15],[10,"clone","","",15],[10,"header_name","","",15],[10,"parse_header","","",15],[10,"fmt_header","","",15],[10,"fmt","","",20],[10,"eq","","",20],[10,"ne","","",20],[10,"clone","","",20],[10,"header_name","","",20],[10,"parse_header","","",20],[10,"fmt_header","","",20],[10,"fmt","","",21],[10,"eq","","",21],[10,"ne","","",21],[10,"clone","","",21],[10,"header_name","","",21],[10,"parse_header","","",21],[10,"fmt_header","","",21],[10,"fmt","","",22],[10,"eq","","",22],[10,"ne","","",22],[10,"clone","","",22],[10,"header_name","","",22],[10,"parse_header","","",22],[10,"fmt_header","","",22],[10,"fmt","","",23],[10,"eq","","",23],[10,"ne","","",23],[10,"clone","","",23],[10,"deref","","",23],[10,"deref_mut","","",23],[10,"header_name","","",23],[10,"parse_header","","",23],[10,"fmt_header","","",23],[10,"fmt","","",24],[10,"eq","","",24],[10,"ne","","",24],[10,"clone","","",24],[10,"deref","","",24],[10,"deref_mut","","",24],[10,"header_name","","",24],[10,"parse_header","","",24],[10,"fmt_header","","",24],[10,"fmt","","",24],[10,"fmt","","",25],[10,"eq","","",25],[10,"ne","","",25],[10,"clone","","",25],[10,"deref","","",25],[10,"deref_mut","","",25],[10,"header_name","","",25],[10,"parse_header","","",25],[10,"fmt_header","","",25],[10,"fmt","","",26],[10,"eq","","",26],[10,"ne","","",26],[10,"clone","","",26],[10,"deref","","",26],[10,"deref_mut","","",26],[10,"header_name","","",26],[10,"parse_header","","",26],[10,"fmt_header","","",26],[10,"scheme","collections::string","",27],[10,"fmt_scheme","","",27],[10,"fmt","hyper::header","",28],[10,"clone","","",28],[10,"eq","","",28],[10,"ne","","",28],[10,"deref","","",28],[10,"deref_mut","","",28],[10,"header_name","","",28],[10,"parse_header","","",28],[10,"fmt_header","","",28],[10,"fmt","","",29],[10,"eq","","",29],[10,"ne","","",29],[10,"clone","","",29],[10,"deref","","",29],[10,"deref_mut","","",29],[10,"header_name","","",29],[10,"parse_header","","",29],[10,"fmt_header","","",29],[10,"to_cookie_jar","","This method can be used to create CookieJar that can be used\nto manipulate cookies and create a corresponding `SetCookie` header afterwards.",29],[10,"from_cookie_jar","","Extracts all cookies from `CookieJar` and creates Cookie header.\nUseful for clients.",29],[10,"fmt","","",30],[10,"eq","","",30],[10,"ne","","",30],[10,"clone","","",30],[10,"deref","","",30],[10,"deref_mut","","",30],[10,"fmt","","",17],[10,"eq","","",17],[10,"ne","","",17],[10,"clone","","",17],[10,"from_str","","",17],[10,"fmt","","",17],[10,"header_name","","",30],[10,"parse_header","","",30],[10,"fmt_header","","",30],[10,"fmt","","",31],[10,"eq","","",31],[10,"ne","","",31],[10,"clone","","",31],[10,"deref","","",31],[10,"deref_mut","","",31],[10,"header_name","","",31],[10,"parse_header","","",31],[10,"fmt_header","","",31],[10,"fmt","","",32],[10,"eq","","",32],[10,"ne","","",32],[10,"clone","","",32],[10,"deref","","",32],[10,"deref_mut","","",32],[10,"header_name","","",32],[10,"parse_header","","",32],[10,"fmt_header","","",32],[10,"fmt","","",33],[10,"clone","","",33],[10,"eq","","",33],[10,"ne","","",33],[10,"deref","","",33],[10,"deref_mut","","",33],[10,"header_name","","",33],[10,"parse_header","","",33],[10,"fmt_header","","",33],[10,"from_str","","",33],[10,"fmt","","",12],[10,"eq","","",12],[10,"ne","","",12],[10,"clone","","",12],[10,"header_name","","",12],[10,"parse_header","","",12],[10,"fmt_header","","",12],[10,"fmt","","",34],[10,"clone","","",34],[10,"eq","","",34],[10,"ne","","",34],[10,"deref","","",34],[10,"deref_mut","","",34],[10,"header_name","","",34],[10,"parse_header","","",34],[10,"fmt_header","","",34],[10,"from_str","","",34],[10,"fmt","","",13],[10,"eq","","",13],[10,"ne","","",13],[10,"clone","","",13],[10,"header_name","","",13],[10,"parse_header","","",13],[10,"fmt_header","","",13],[10,"fmt","","",35],[10,"clone","","",35],[10,"eq","","",35],[10,"ne","","",35],[10,"deref","","",35],[10,"deref_mut","","",35],[10,"header_name","","",35],[10,"parse_header","","",35],[10,"fmt_header","","",35],[10,"from_str","","",35],[10,"fmt","","",36],[10,"clone","","",36],[10,"eq","","",36],[10,"ne","","",36],[10,"deref","","",36],[10,"deref_mut","","",36],[10,"header_name","","",36],[10,"parse_header","","",36],[10,"fmt_header","","",36],[10,"from_str","","",36],[10,"fmt","","",37],[10,"eq","","",37],[10,"ne","","",37],[10,"clone","","",37],[10,"deref","","",37],[10,"deref_mut","","",37],[10,"header_name","","",37],[10,"parse_header","","",37],[10,"fmt_header","","",37],[10,"fmt","","",38],[10,"eq","","",38],[10,"ne","","",38],[10,"clone","","",38],[10,"deref","","",38],[10,"deref_mut","","",38],[10,"header_name","","",38],[10,"parse_header","","",38],[10,"fmt_header","","",38],[10,"fmt","","",39],[10,"eq","","",39],[10,"ne","","",39],[10,"clone","","",39],[10,"deref","","",39],[10,"deref_mut","","",39],[10,"header_name","","",39],[10,"parse_header","","",39],[10,"fmt_header","","",39],[10,"fmt","","",39],[10,"fmt","","",40],[10,"eq","","",40],[10,"ne","","",40],[10,"clone","","",40],[10,"deref","","",40],[10,"deref_mut","","",40],[10,"header_name","","",40],[10,"parse_header","","",40],[10,"fmt_header","","",40],[10,"from_cookie_jar","","Use this to create SetCookie header from CookieJar using\ncalculated delta.",40],[10,"apply_to_cookie_jar","","Use this on client to apply changes from SetCookie to CookieJar.\nNote that this will `panic!` if `CookieJar` is not root.",40],[10,"fmt","","",41],[10,"eq","","",41],[10,"ne","","",41],[10,"clone","","",41],[10,"deref","","",41],[10,"deref_mut","","",41],[10,"header_name","","",41],[10,"parse_header","","",41],[10,"fmt_header","","",41],[10,"fmt","","",42],[10,"eq","","",42],[10,"ne","","",42],[10,"clone","","",42],[10,"deref","","",42],[10,"deref_mut","","",42],[10,"header_name","","",42],[10,"parse_header","","",42],[10,"fmt_header","","",42],[10,"fmt","","",43],[10,"eq","","",43],[10,"ne","","",43],[10,"clone","","",43],[10,"deref","","",43],[10,"deref_mut","","",43],[10,"header_name","","",43],[10,"parse_header","","",43],[10,"fmt_header","","",43],[10,"fmt","","",16],[10,"eq","","",16],[10,"ne","","",16],[10,"clone","","",16],[10,"header_name","","",16],[10,"parse_header","","",16],[10,"fmt_header","","",16],[10,"fmt","","",18],[10,"eq","","",18],[10,"ne","","",18],[10,"clone","","",18],[10,"header_name","","",18],[10,"parse_header","","",18],[10,"fmt_header","","",18],[10,"fmt","","",19],[10,"eq","","",19],[10,"ne","","",19],[10,"clone","","",19],[10,"header_name","","",19],[10,"parse_header","","",19],[10,"fmt_header","","",19],[10,"fmt","","",15],[10,"eq","","",15],[10,"ne","","",15],[10,"clone","","",15],[10,"header_name","","",15],[10,"parse_header","","",15],[10,"fmt_header","","",15],[10,"fmt","","",20],[10,"eq","","",20],[10,"ne","","",20],[10,"clone","","",20],[10,"header_name","","",20],[10,"parse_header","","",20],[10,"fmt_header","","",20],[10,"fmt","","",21],[10,"eq","","",21],[10,"ne","","",21],[10,"clone","","",21],[10,"header_name","","",21],[10,"parse_header","","",21],[10,"fmt_header","","",21],[10,"fmt","","",22],[10,"eq","","",22],[10,"ne","","",22],[10,"clone","","",22],[10,"header_name","","",22],[10,"parse_header","","",22],[10,"fmt_header","","",22],[10,"fmt","","",23],[10,"eq","","",23],[10,"ne","","",23],[10,"clone","","",23],[10,"deref","","",23],[10,"deref_mut","","",23],[10,"header_name","","",23],[10,"parse_header","","",23],[10,"fmt_header","","",23],[10,"fmt","","",24],[10,"eq","","",24],[10,"ne","","",24],[10,"clone","","",24],[10,"deref","","",24],[10,"deref_mut","","",24],[10,"header_name","","",24],[10,"parse_header","","",24],[10,"fmt_header","","",24],[10,"fmt","","",24],[10,"fmt","","",25],[10,"eq","","",25],[10,"ne","","",25],[10,"clone","","",25],[10,"deref","","",25],[10,"deref_mut","","",25],[10,"header_name","","",25],[10,"parse_header","","",25],[10,"fmt_header","","",25],[10,"fmt","","",26],[10,"eq","","",26],[10,"ne","","",26],[10,"clone","","",26],[10,"deref","","",26],[10,"deref_mut","","",26],[10,"header_name","","",26],[10,"parse_header","","",26],[10,"fmt_header","","",26],[10,"scheme","collections::string","",27],[10,"fmt_scheme","","",27],[10,"fmt","hyper::header","",28],[10,"clone","","",28],[10,"eq","","",28],[10,"ne","","",28],[10,"deref","","",28],[10,"deref_mut","","",28],[10,"header_name","","",28],[10,"parse_header","","",28],[10,"fmt_header","","",28],[10,"fmt","","",29],[10,"eq","","",29],[10,"ne","","",29],[10,"clone","","",29],[10,"deref","","",29],[10,"deref_mut","","",29],[10,"header_name","","",29],[10,"parse_header","","",29],[10,"fmt_header","","",29],[10,"to_cookie_jar","","This method can be used to create CookieJar that can be used\nto manipulate cookies and create a corresponding `SetCookie` header afterwards.",29],[10,"from_cookie_jar","","Extracts all cookies from `CookieJar` and creates Cookie header.\nUseful for clients.",29],[10,"fmt","","",30],[10,"eq","","",30],[10,"ne","","",30],[10,"clone","","",30],[10,"deref","","",30],[10,"deref_mut","","",30],[10,"fmt","","",17],[10,"eq","","",17],[10,"ne","","",17],[10,"clone","","",17],[10,"from_str","","",17],[10,"fmt","","",17],[10,"header_name","","",30],[10,"parse_header","","",30],[10,"fmt_header","","",30],[10,"fmt","","",31],[10,"eq","","",31],[10,"ne","","",31],[10,"clone","","",31],[10,"deref","","",31],[10,"deref_mut","","",31],[10,"header_name","","",31],[10,"parse_header","","",31],[10,"fmt_header","","",31],[10,"fmt","","",32],[10,"eq","","",32],[10,"ne","","",32],[10,"clone","","",32],[10,"deref","","",32],[10,"deref_mut","","",32],[10,"header_name","","",32],[10,"parse_header","","",32],[10,"fmt_header","","",32],[10,"fmt","","",33],[10,"clone","","",33],[10,"eq","","",33],[10,"ne","","",33],[10,"deref","","",33],[10,"deref_mut","","",33],[10,"header_name","","",33],[10,"parse_header","","",33],[10,"fmt_header","","",33],[10,"from_str","","",33],[10,"fmt","","",12],[10,"eq","","",12],[10,"ne","","",12],[10,"clone","","",12],[10,"header_name","","",12],[10,"parse_header","","",12],[10,"fmt_header","","",12],[10,"fmt","","",34],[10,"clone","","",34],[10,"eq","","",34],[10,"ne","","",34],[10,"deref","","",34],[10,"deref_mut","","",34],[10,"header_name","","",34],[10,"parse_header","","",34],[10,"fmt_header","","",34],[10,"from_str","","",34],[10,"fmt","","",13],[10,"eq","","",13],[10,"ne","","",13],[10,"clone","","",13],[10,"header_name","","",13],[10,"parse_header","","",13],[10,"fmt_header","","",13],[10,"fmt","","",35],[10,"clone","","",35],[10,"eq","","",35],[10,"ne","","",35],[10,"deref","","",35],[10,"deref_mut","","",35],[10,"header_name","","",35],[10,"parse_header","","",35],[10,"fmt_header","","",35],[10,"from_str","","",35],[10,"fmt","","",36],[10,"clone","","",36],[10,"eq","","",36],[10,"ne","","",36],[10,"deref","","",36],[10,"deref_mut","","",36],[10,"header_name","","",36],[10,"parse_header","","",36],[10,"fmt_header","","",36],[10,"from_str","","",36],[10,"fmt","","",37],[10,"eq","","",37],[10,"ne","","",37],[10,"clone","","",37],[10,"deref","","",37],[10,"deref_mut","","",37],[10,"header_name","","",37],[10,"parse_header","","",37],[10,"fmt_header","","",37],[10,"fmt","","",38],[10,"eq","","",38],[10,"ne","","",38],[10,"clone","","",38],[10,"deref","","",38],[10,"deref_mut","","",38],[10,"header_name","","",38],[10,"parse_header","","",38],[10,"fmt_header","","",38],[10,"fmt","","",39],[10,"eq","","",39],[10,"ne","","",39],[10,"clone","","",39],[10,"deref","","",39],[10,"deref_mut","","",39],[10,"header_name","","",39],[10,"parse_header","","",39],[10,"fmt_header","","",39],[10,"fmt","","",39],[10,"fmt","","",40],[10,"eq","","",40],[10,"ne","","",40],[10,"clone","","",40],[10,"deref","","",40],[10,"deref_mut","","",40],[10,"header_name","","",40],[10,"parse_header","","",40],[10,"fmt_header","","",40],[10,"from_cookie_jar","","Use this to create SetCookie header from CookieJar using\ncalculated delta.",40],[10,"apply_to_cookie_jar","","Use this on client to apply changes from SetCookie to CookieJar.\nNote that this will `panic!` if `CookieJar` is not root.",40],[10,"fmt","","",41],[10,"eq","","",41],[10,"ne","","",41],[10,"clone","","",41],[10,"deref","","",41],[10,"deref_mut","","",41],[10,"header_name","","",41],[10,"parse_header","","",41],[10,"fmt_header","","",41],[10,"fmt","","",42],[10,"eq","","",42],[10,"ne","","",42],[10,"clone","","",42],[10,"deref","","",42],[10,"deref_mut","","",42],[10,"header_name","","",42],[10,"parse_header","","",42],[10,"fmt_header","","",42],[10,"fmt","","",43],[10,"eq","","",43],[10,"ne","","",43],[10,"clone","","",43],[10,"deref","","",43],[10,"deref_mut","","",43],[10,"header_name","","",43],[10,"parse_header","","",43],[10,"fmt_header","","",43],[10,"fmt","","",16],[10,"eq","","",16],[10,"ne","","",16],[10,"clone","","",16],[10,"header_name","","",16],[10,"parse_header","","",16],[10,"fmt_header","","",16],[10,"eq","","",14],[10,"ne","","",14],[10,"clone","","",14],[10,"fmt","","",14],[10,"fmt","","",14],[10,"from_str","","",14],[10,"eq","","",11],[10,"ne","","",11],[10,"clone","","",11],[10,"new","","Creates a new `QualityItem` from an item and a quality.\nThe item can be of any type.\nThe quality should be a value in the range [0, 1].",11],[10,"fmt","","",11],[10,"fmt","","",11],[10,"from_str","","",11],[0,"parsing","","Utility functions for Header implementations."],[3,"from_one_raw_str","hyper::header::parsing","Reads a single raw string when parsing a header"],[3,"from_comma_delimited","","Reads a comma-delimited raw header into a Vec."],[3,"from_one_comma_delimited","","Reads a comma-delimited raw string into a Vec."],[3,"fmt_comma_delimited","","Format an array into a comma-delimited string."],[3,"tm_from_str","","Get a Tm from HTTP date formats."],[6,"Header","hyper::header","A trait for any object that will represent a header field and value."],[9,"header_name","","Returns the name of the header field this belongs to.",44],[9,"parse_header","","Parse a header from a raw stream of bytes.",44],[6,"HeaderFormat","","A trait for any object that will represent a header field and value."],[9,"fmt_header","","Format a header to be output into a TcpStream.",45],[10,"downcast_ref_unchecked","hyper","",45],[10,"downcast_mut_unchecked","","",45],[10,"downcast_unchecked","","",45],[10,"clone","alloc::boxed","",46],[10,"clone","hyper::header","",47],[10,"new","","Creates a new, empty headers map.",47],[10,"set","","Set a header field to the corresponding value.",47],[10,"get_raw","","Access the raw value of a header.",47],[10,"set_raw","","Set the raw value of a header, bypassing any typed headers.",47],[10,"get","","Get a reference to the header field's value, if it exists.",47],[10,"get_mut","","Get a mutable reference to the header field's value, if it exists.",47],[10,"has","","Returns a boolean of whether a certain header is in the map.",47],[10,"remove","","Removes a header from the map, if one existed.\nReturns true if a header has been removed.",47],[10,"iter","","Returns an iterator over the header fields.",47],[10,"len","","Returns the number of headers in the map.",47],[10,"clear","","Remove all headers from the map.",47],[10,"fmt","","",47],[10,"fmt","","",47],[4,"Item","",""],[10,"next","","",48],[10,"is","","Check if a HeaderView is a certain Header.",49],[10,"name","","Get the Header name as a slice.",49],[10,"value","","Cast the value to a certain Header type.",49],[10,"value_string","","Get just the header value as a String.",49],[10,"fmt","","",49],[10,"fmt","","",49],[10,"extend","","",47],[10,"from_iter","","",47],[10,"fmt","alloc::boxed","",46],[10,"fmt","","",46],[10,"fmt","hyper::header","",50],[10,"fmt","","",50],[0,"http","hyper","Pieces pertaining to the HTTP message protocol."],[1,"LineEnding","hyper::http","A `Show`able struct to easily write line endings to a formatter."],[1,"RawStatus","","The raw status code and reason-phrase."],[2,"HttpReader","","Readers to handle different Transfer-Encodings."],[12,"SizedReader","","A Reader used when a Content-Length header is passed with a positive integer.",51],[12,"ChunkedReader","","A Reader used when Transfer-Encoding is `chunked`.",51],[12,"EofReader","","A Reader used for responses that don't indicate a length or chunked.",51],[12,"EmptyReader","","A Reader used for messages that should never have a body.",51],[2,"HttpWriter","","Writers to handle different Transfer-Encodings."],[12,"ThroughWriter","","A no-op Writer, used initially before Transfer-Encoding is determined.",52],[12,"ChunkedWriter","","A Writer for when Transfer-Encoding includes `chunked`.",52],[12,"SizedWriter","","A Writer for when Content-Length is set.",52],[12,"EmptyWriter","","A writer that should not write any body.",52],[3,"is_token","","Determines if byte is a token char."],[3,"read_method","","Read a `Method` from a raw stream, such as `GET`.\n### Note:\nExtension methods are only parsed to 16 characters."],[3,"read_uri","","Read a `RequestUri` from a raw stream."],[3,"read_http_version","","Read the `HttpVersion` from a raw stream, such as `HTTP/1.1`."],[3,"read_header","","Read a RawHeaderLine from a Reader."],[3,"read_request_line","","Read the `RequestLine`, such as `GET / HTTP/1.1`."],[3,"read_status_line","","Read the StatusLine, such as `HTTP/1.1 200 OK`."],[3,"read_status","","Read the StatusCode from a stream."],[4,"RawHeaderLine","","The raw bytes when parsing a header line."],[4,"RequestLine","","`request-line   = method SP request-target SP HTTP-version CRLF`"],[4,"StatusLine","","`status-line = HTTP-version SP status-code SP reason-phrase CRLF`"],[18,"SP","",""],[18,"CR","",""],[18,"LF","",""],[18,"STAR","",""],[18,"LINE_ENDING","",""],[10,"unwrap","","Unwraps this HttpReader and returns the underlying Reader.",51],[10,"read","","",51],[10,"unwrap","","Unwraps the HttpWriter and returns the underlying Writer.",52],[10,"get_ref","","Access the inner Writer.",52],[10,"get_mut","","Access the inner Writer mutably.",52],[10,"end","","Ends the HttpWriter, and returns the underlying Writer.",52],[10,"write","","",52],[10,"flush","","",52],[10,"fmt","","",53],[10,"fmt","","",53],[10,"fmt","","",54],[10,"eq","","",54],[10,"ne","","",54],[10,"clone","","",54],[0,"net","hyper","A collection of traits abstracting over Listeners and Streams."],[1,"Fresh","hyper::net","The write-status indicating headers have not been written."],[1,"Streaming","","The write-status indicating headers have been written."],[1,"NetworkConnections","","An iterator wrapper over a NetworkAcceptor."],[1,"HttpConnector","","A connector that will produce HttpStreams."],[2,"HttpListener","","A `NetworkListener` for `HttpStream`s."],[12,"Http","","Http variant.",55],[12,"Https","","Https variant. The two paths point to the certificate and key PEM files, in that order.",55],[2,"HttpAcceptor","","A `NetworkAcceptor` for `HttpStream`s."],[12,"Http","","Http variant.",56],[12,"Https","","Https variant.",56],[2,"HttpStream","","A wrapper around a TcpStream."],[12,"Http","","A stream over the HTTP protocol.",57],[12,"Https","","A stream over the HTTP protocol, protected by SSL.",57],[4,"ContextVerifier","","A method that can set verification methods on an SSL context"],[6,"NetworkListener","","An abstraction to listen for connections on a certain port."],[17,"Acceptor","hyper::net::NetworkListener",""],[9,"listen","hyper::net","Listens on a socket.",58],[6,"NetworkAcceptor","","An abstraction to receive `NetworkStream`s."],[17,"Stream","hyper::net::NetworkAcceptor",""],[9,"accept","hyper::net","Returns an iterator of streams.",59],[9,"socket_name","","Get the address this Listener ended up listening on.",59],[9,"close","","Closes the Acceptor, so no more incoming connections will be handled.",59],[10,"incoming","","Returns an iterator over incoming connections.",59],[6,"NetworkStream","","An abstraction over streams that a Server can utilize."],[9,"peer_name","","Get the remote address of the underlying connection.",60],[6,"NetworkConnector","","A connector creates a NetworkStream."],[17,"Stream","hyper::net::NetworkConnector",""],[9,"connect","hyper::net","Connect to a remote address.",61],[4,"Item","",""],[10,"next","","",62],[10,"fmt","alloc::boxed","",46],[10,"clone","","",46],[10,"read","","",46],[10,"write","","",46],[10,"flush","","",46],[10,"downcast_ref_unchecked","hyper","",60],[10,"downcast_mut_unchecked","","",60],[10,"downcast_unchecked","","",60],[10,"is","","Is the underlying type in this trait object a T?",60],[10,"downcast_ref","","If the underlying type is T, get a reference to the contained data.",60],[10,"downcast_mut","","If the underlying type is T, get a mutable reference to the contained\ndata.",60],[10,"downcast","","If the underlying type is T, extract it.",60],[4,"Acceptor","hyper::net",""],[10,"listen","","",55],[10,"clone","","",56],[4,"Stream","",""],[10,"accept","","",56],[10,"close","","",56],[10,"socket_name","","",56],[10,"clone","","",57],[10,"read","","",57],[10,"write","","",57],[10,"flush","","",57],[10,"peer_name","","",57],[4,"Stream","",""],[10,"connect","","",63],[0,"server","hyper","HTTP Server"],[1,"Server","hyper::server","A server can listen on a TCP socket."],[1,"Listening","","A listening server, which can later be closed."],[11,"socket","","The socket addresses that the server is bound to.",64],[0,"request","","Server Requests"],[1,"Request","hyper::server::request","A request bundles several parts of an incoming `NetworkStream`, given to a `Handler`."],[11,"remote_addr","","The IP address of the remote connection.",65],[11,"method","","The `Method`, such as `Get`, `Post`, etc.",65],[11,"headers","","The headers of the incoming request.",65],[11,"uri","","The target request-uri for this request.",65],[11,"version","","The version of HTTP for this request.",65],[10,"new","","Create a new Request, reading the StartLine and Headers so they are\nimmediately useful.",65],[10,"deconstruct","","Deconstruct a Request into its constituent parts.",65],[10,"read","","",65],[0,"response","hyper::server","Server Responses"],[1,"Response","hyper::server::response","The outgoing half for a Tcp connection, created by a `Server` and given to a `Handler`."],[11,"version","","The HTTP version of this response.",66],[10,"status","","The status of this response.",66],[10,"headers","","The headers of this response.",66],[10,"construct","","Construct a Response from its constituent parts.",66],[10,"deconstruct","","Deconstruct this Response into its constituent parts.",66],[10,"new","","Creates a new Response that can be used to write to a network stream.",66],[10,"start","","Consume this Response<Fresh>, writing the Headers and Status and creating a Response<Streaming>",66],[10,"status_mut","","Get a mutable reference to the status.",66],[10,"headers_mut","","Get a mutable reference to the Headers.",66],[10,"end","","Flushes all writing of a response to the client.",66],[10,"write","","",66],[10,"flush","","",66],[6,"Handler","hyper::server","A handler that can handle incoming requests for a server."],[9,"handle","","Receives a `Request`/`Response` pair, and should perform some action on them.",67],[10,"http","","Creates a new server that will handle `HttpStream`s.",68],[10,"https","","Creates a new server that will handler `HttpStreams`s using a TLS connection.",68],[10,"with_listener","","Creates a new server that will handle `HttpStream`s.",68],[10,"listen_threads","","Binds to a socket, and starts handling connections using a task pool.",68],[10,"listen","","Binds to a socket and starts handling connections.",68],[10,"await","","Causes the current thread to wait for this listening to complete.",64],[10,"close","","Stop the server from listening to its socket address.",64],[0,"status","hyper","Status Codes"],[2,"StatusCode","hyper::status","An HTTP status code (`Status-Code` in RFC 2616)."],[12,"Continue","","100 Continue",69],[12,"SwitchingProtocols","","101 Switching Protocols",69],[12,"Processing","","102 Processing",69],[12,"Code103","","103 (unregistered)",69],[12,"Code104","","104 (unregistered)",69],[12,"Code105","","105 (unregistered)",69],[12,"Code106","","106 (unregistered)",69],[12,"Code107","","107 (unregistered)",69],[12,"Code108","","108 (unregistered)",69],[12,"Code109","","109 (unregistered)",69],[12,"Code110","","110 (unregistered)",69],[12,"Code111","","111 (unregistered)",69],[12,"Code112","","112 (unregistered)",69],[12,"Code113","","113 (unregistered)",69],[12,"Code114","","114 (unregistered)",69],[12,"Code115","","115 (unregistered)",69],[12,"Code116","","116 (unregistered)",69],[12,"Code117","","117 (unregistered)",69],[12,"Code118","","118 (unregistered)",69],[12,"Code119","","119 (unregistered)",69],[12,"Code120","","120 (unregistered)",69],[12,"Code121","","121 (unregistered)",69],[12,"Code122","","122 (unregistered)",69],[12,"Code123","","123 (unregistered)",69],[12,"Code124","","124 (unregistered)",69],[12,"Code125","","125 (unregistered)",69],[12,"Code126","","126 (unregistered)",69],[12,"Code127","","127 (unregistered)",69],[12,"Code128","","128 (unregistered)",69],[12,"Code129","","129 (unregistered)",69],[12,"Code130","","130 (unregistered)",69],[12,"Code131","","131 (unregistered)",69],[12,"Code132","","132 (unregistered)",69],[12,"Code133","","133 (unregistered)",69],[12,"Code134","","134 (unregistered)",69],[12,"Code135","","135 (unregistered)",69],[12,"Code136","","136 (unregistered)",69],[12,"Code137","","137 (unregistered)",69],[12,"Code138","","138 (unregistered)",69],[12,"Code139","","139 (unregistered)",69],[12,"Code140","","140 (unregistered)",69],[12,"Code141","","141 (unregistered)",69],[12,"Code142","","142 (unregistered)",69],[12,"Code143","","143 (unregistered)",69],[12,"Code144","","144 (unregistered)",69],[12,"Code145","","145 (unregistered)",69],[12,"Code146","","146 (unregistered)",69],[12,"Code147","","147 (unregistered)",69],[12,"Code148","","148 (unregistered)",69],[12,"Code149","","149 (unregistered)",69],[12,"Code150","","150 (unregistered)",69],[12,"Code151","","151 (unregistered)",69],[12,"Code152","","152 (unregistered)",69],[12,"Code153","","153 (unregistered)",69],[12,"Code154","","154 (unregistered)",69],[12,"Code155","","155 (unregistered)",69],[12,"Code156","","156 (unregistered)",69],[12,"Code157","","157 (unregistered)",69],[12,"Code158","","158 (unregistered)",69],[12,"Code159","","159 (unregistered)",69],[12,"Code160","","160 (unregistered)",69],[12,"Code161","","161 (unregistered)",69],[12,"Code162","","162 (unregistered)",69],[12,"Code163","","163 (unregistered)",69],[12,"Code164","","164 (unregistered)",69],[12,"Code165","","165 (unregistered)",69],[12,"Code166","","166 (unregistered)",69],[12,"Code167","","167 (unregistered)",69],[12,"Code168","","168 (unregistered)",69],[12,"Code169","","169 (unregistered)",69],[12,"Code170","","170 (unregistered)",69],[12,"Code171","","171 (unregistered)",69],[12,"Code172","","172 (unregistered)",69],[12,"Code173","","173 (unregistered)",69],[12,"Code174","","174 (unregistered)",69],[12,"Code175","","175 (unregistered)",69],[12,"Code176","","176 (unregistered)",69],[12,"Code177","","177 (unregistered)",69],[12,"Code178","","178 (unregistered)",69],[12,"Code179","","179 (unregistered)",69],[12,"Code180","","180 (unregistered)",69],[12,"Code181","","181 (unregistered)",69],[12,"Code182","","182 (unregistered)",69],[12,"Code183","","183 (unregistered)",69],[12,"Code184","","184 (unregistered)",69],[12,"Code185","","185 (unregistered)",69],[12,"Code186","","186 (unregistered)",69],[12,"Code187","","187 (unregistered)",69],[12,"Code188","","188 (unregistered)",69],[12,"Code189","","189 (unregistered)",69],[12,"Code190","","190 (unregistered)",69],[12,"Code191","","191 (unregistered)",69],[12,"Code192","","192 (unregistered)",69],[12,"Code193","","193 (unregistered)",69],[12,"Code194","","194 (unregistered)",69],[12,"Code195","","195 (unregistered)",69],[12,"Code196","","196 (unregistered)",69],[12,"Code197","","197 (unregistered)",69],[12,"Code198","","198 (unregistered)",69],[12,"Code199","","199 (unregistered)",69],[12,"Ok","","200 OK",69],[12,"Created","","201 Created",69],[12,"Accepted","","202 Accepted",69],[12,"NonAuthoritativeInformation","","203 Non-Authoritative Information",69],[12,"NoContent","","204 No Content",69],[12,"ResetContent","","205 Reset Content",69],[12,"PartialContent","","206 Partial Content",69],[12,"MultiStatus","","207 Multi-Status",69],[12,"AlreadyReported","","208 Already Reported",69],[12,"Code209","","209 (unregistered)",69],[12,"Code210","","210 (unregistered)",69],[12,"Code211","","211 (unregistered)",69],[12,"Code212","","212 (unregistered)",69],[12,"Code213","","213 (unregistered)",69],[12,"Code214","","214 (unregistered)",69],[12,"Code215","","215 (unregistered)",69],[12,"Code216","","216 (unregistered)",69],[12,"Code217","","217 (unregistered)",69],[12,"Code218","","218 (unregistered)",69],[12,"Code219","","219 (unregistered)",69],[12,"Code220","","220 (unregistered)",69],[12,"Code221","","221 (unregistered)",69],[12,"Code222","","222 (unregistered)",69],[12,"Code223","","223 (unregistered)",69],[12,"Code224","","224 (unregistered)",69],[12,"Code225","","225 (unregistered)",69],[12,"ImUsed","","226 IM Used",69],[12,"Code227","","227 (unregistered)",69],[12,"Code228","","228 (unregistered)",69],[12,"Code229","","229 (unregistered)",69],[12,"Code230","","230 (unregistered)",69],[12,"Code231","","231 (unregistered)",69],[12,"Code232","","232 (unregistered)",69],[12,"Code233","","233 (unregistered)",69],[12,"Code234","","234 (unregistered)",69],[12,"Code235","","235 (unregistered)",69],[12,"Code236","","236 (unregistered)",69],[12,"Code237","","237 (unregistered)",69],[12,"Code238","","238 (unregistered)",69],[12,"Code239","","239 (unregistered)",69],[12,"Code240","","240 (unregistered)",69],[12,"Code241","","241 (unregistered)",69],[12,"Code242","","242 (unregistered)",69],[12,"Code243","","243 (unregistered)",69],[12,"Code244","","244 (unregistered)",69],[12,"Code245","","245 (unregistered)",69],[12,"Code246","","246 (unregistered)",69],[12,"Code247","","247 (unregistered)",69],[12,"Code248","","248 (unregistered)",69],[12,"Code249","","249 (unregistered)",69],[12,"Code250","","250 (unregistered)",69],[12,"Code251","","251 (unregistered)",69],[12,"Code252","","252 (unregistered)",69],[12,"Code253","","253 (unregistered)",69],[12,"Code254","","254 (unregistered)",69],[12,"Code255","","255 (unregistered)",69],[12,"Code256","","256 (unregistered)",69],[12,"Code257","","257 (unregistered)",69],[12,"Code258","","258 (unregistered)",69],[12,"Code259","","259 (unregistered)",69],[12,"Code260","","260 (unregistered)",69],[12,"Code261","","261 (unregistered)",69],[12,"Code262","","262 (unregistered)",69],[12,"Code263","","263 (unregistered)",69],[12,"Code264","","264 (unregistered)",69],[12,"Code265","","265 (unregistered)",69],[12,"Code266","","266 (unregistered)",69],[12,"Code267","","267 (unregistered)",69],[12,"Code268","","268 (unregistered)",69],[12,"Code269","","269 (unregistered)",69],[12,"Code270","","270 (unregistered)",69],[12,"Code271","","271 (unregistered)",69],[12,"Code272","","272 (unregistered)",69],[12,"Code273","","273 (unregistered)",69],[12,"Code274","","274 (unregistered)",69],[12,"Code275","","275 (unregistered)",69],[12,"Code276","","276 (unregistered)",69],[12,"Code277","","277 (unregistered)",69],[12,"Code278","","278 (unregistered)",69],[12,"Code279","","279 (unregistered)",69],[12,"Code280","","280 (unregistered)",69],[12,"Code281","","281 (unregistered)",69],[12,"Code282","","282 (unregistered)",69],[12,"Code283","","283 (unregistered)",69],[12,"Code284","","284 (unregistered)",69],[12,"Code285","","285 (unregistered)",69],[12,"Code286","","286 (unregistered)",69],[12,"Code287","","287 (unregistered)",69],[12,"Code288","","288 (unregistered)",69],[12,"Code289","","289 (unregistered)",69],[12,"Code290","","290 (unregistered)",69],[12,"Code291","","291 (unregistered)",69],[12,"Code292","","292 (unregistered)",69],[12,"Code293","","293 (unregistered)",69],[12,"Code294","","294 (unregistered)",69],[12,"Code295","","295 (unregistered)",69],[12,"Code296","","296 (unregistered)",69],[12,"Code297","","297 (unregistered)",69],[12,"Code298","","298 (unregistered)",69],[12,"Code299","","299 (unregistered)",69],[12,"MultipleChoices","","300 Multiple Choices",69],[12,"MovedPermanently","","301 Moved Permanently",69],[12,"Found","","302 Found",69],[12,"SeeOther","","303 See Other",69],[12,"NotModified","","304 Not Modified",69],[12,"UseProxy","","305 Use Proxy",69],[12,"SwitchProxy","","306 Switch Proxy",69],[12,"TemporaryRedirect","","307 Temporary Redirect",69],[12,"PermanentRedirect","","308 Permanent Redirect",69],[12,"Code309","","309 (unregistered)",69],[12,"Code310","","310 (unregistered)",69],[12,"Code311","","311 (unregistered)",69],[12,"Code312","","312 (unregistered)",69],[12,"Code313","","313 (unregistered)",69],[12,"Code314","","314 (unregistered)",69],[12,"Code315","","315 (unregistered)",69],[12,"Code316","","316 (unregistered)",69],[12,"Code317","","317 (unregistered)",69],[12,"Code318","","318 (unregistered)",69],[12,"Code319","","319 (unregistered)",69],[12,"Code320","","320 (unregistered)",69],[12,"Code321","","321 (unregistered)",69],[12,"Code322","","322 (unregistered)",69],[12,"Code323","","323 (unregistered)",69],[12,"Code324","","324 (unregistered)",69],[12,"Code325","","325 (unregistered)",69],[12,"Code326","","326 (unregistered)",69],[12,"Code327","","327 (unregistered)",69],[12,"Code328","","328 (unregistered)",69],[12,"Code329","","329 (unregistered)",69],[12,"Code330","","330 (unregistered)",69],[12,"Code331","","331 (unregistered)",69],[12,"Code332","","332 (unregistered)",69],[12,"Code333","","333 (unregistered)",69],[12,"Code334","","334 (unregistered)",69],[12,"Code335","","335 (unregistered)",69],[12,"Code336","","336 (unregistered)",69],[12,"Code337","","337 (unregistered)",69],[12,"Code338","","338 (unregistered)",69],[12,"Code339","","339 (unregistered)",69],[12,"Code340","","340 (unregistered)",69],[12,"Code341","","341 (unregistered)",69],[12,"Code342","","342 (unregistered)",69],[12,"Code343","","343 (unregistered)",69],[12,"Code344","","344 (unregistered)",69],[12,"Code345","","345 (unregistered)",69],[12,"Code346","","346 (unregistered)",69],[12,"Code347","","347 (unregistered)",69],[12,"Code348","","348 (unregistered)",69],[12,"Code349","","349 (unregistered)",69],[12,"Code350","","350 (unregistered)",69],[12,"Code351","","351 (unregistered)",69],[12,"Code352","","352 (unregistered)",69],[12,"Code353","","353 (unregistered)",69],[12,"Code354","","354 (unregistered)",69],[12,"Code355","","355 (unregistered)",69],[12,"Code356","","356 (unregistered)",69],[12,"Code357","","357 (unregistered)",69],[12,"Code358","","358 (unregistered)",69],[12,"Code359","","359 (unregistered)",69],[12,"Code360","","360 (unregistered)",69],[12,"Code361","","361 (unregistered)",69],[12,"Code362","","362 (unregistered)",69],[12,"Code363","","363 (unregistered)",69],[12,"Code364","","364 (unregistered)",69],[12,"Code365","","365 (unregistered)",69],[12,"Code366","","366 (unregistered)",69],[12,"Code367","","367 (unregistered)",69],[12,"Code368","","368 (unregistered)",69],[12,"Code369","","369 (unregistered)",69],[12,"Code370","","370 (unregistered)",69],[12,"Code371","","371 (unregistered)",69],[12,"Code372","","372 (unregistered)",69],[12,"Code373","","373 (unregistered)",69],[12,"Code374","","374 (unregistered)",69],[12,"Code375","","375 (unregistered)",69],[12,"Code376","","376 (unregistered)",69],[12,"Code377","","377 (unregistered)",69],[12,"Code378","","378 (unregistered)",69],[12,"Code379","","379 (unregistered)",69],[12,"Code380","","380 (unregistered)",69],[12,"Code381","","381 (unregistered)",69],[12,"Code382","","382 (unregistered)",69],[12,"Code383","","383 (unregistered)",69],[12,"Code384","","384 (unregistered)",69],[12,"Code385","","385 (unregistered)",69],[12,"Code386","","386 (unregistered)",69],[12,"Code387","","387 (unregistered)",69],[12,"Code388","","388 (unregistered)",69],[12,"Code389","","389 (unregistered)",69],[12,"Code390","","390 (unregistered)",69],[12,"Code391","","391 (unregistered)",69],[12,"Code392","","392 (unregistered)",69],[12,"Code393","","393 (unregistered)",69],[12,"Code394","","394 (unregistered)",69],[12,"Code395","","395 (unregistered)",69],[12,"Code396","","396 (unregistered)",69],[12,"Code397","","397 (unregistered)",69],[12,"Code398","","398 (unregistered)",69],[12,"Code399","","399 (unregistered)",69],[12,"BadRequest","","400 Bad Request",69],[12,"Unauthorized","","401 Unauthorized",69],[12,"PaymentRequired","","402 Payment Required",69],[12,"Forbidden","","403 Forbidden",69],[12,"NotFound","","404 Not Found",69],[12,"MethodNotAllowed","","405 Method Not Allowed",69],[12,"NotAcceptable","","406 Not Acceptable",69],[12,"ProxyAuthenticationRequired","","407 Proxy Authentication Required",69],[12,"RequestTimeout","","408 Request Timeout",69],[12,"Conflict","","409 Conflict",69],[12,"Gone","","410 Gone",69],[12,"LengthRequired","","411 Length Required",69],[12,"PreconditionFailed","","412 Precondition Failed",69],[12,"RequestEntityTooLarge","","413 Request Entity Too Large",69],[12,"RequestUriTooLong","","414 Request-URI Too Long",69],[12,"UnsupportedMediaType","","415 Unsupported Media Type",69],[12,"RequestedRangeNotSatisfiable","","416 Requested Range Not Satisfiable",69],[12,"ExpectationFailed","","417 Expectation Failed",69],[12,"ImATeapot","","418 I'm a teapot",69],[12,"AuthenticationTimeout","","419 Authentication Timeout",69],[12,"Code420","","420 (unregistered)",69],[12,"Code421","","421 (unregistered)",69],[12,"UnprocessableEntity","","422 Unprocessable Entity",69],[12,"Locked","","423 Locked",69],[12,"FailedDependency","","424 Failed Dependency",69],[12,"UnorderedCollection","","425 Unordered Collection",69],[12,"UpgradeRequired","","426 Upgrade Required",69],[12,"Code427","","427 (unregistered)",69],[12,"PreconditionRequired","","428 Precondition Required",69],[12,"TooManyRequests","","429 Too Many Requests",69],[12,"Code430","","430 (unregistered)",69],[12,"RequestHeaderFieldsTooLarge","","431 Request Header Fields Too Large",69],[12,"Code432","","432 (unregistered)",69],[12,"Code433","","433 (unregistered)",69],[12,"Code434","","434 (unregistered)",69],[12,"Code435","","435 (unregistered)",69],[12,"Code436","","436 (unregistered)",69],[12,"Code437","","437 (unregistered)",69],[12,"Code438","","438 (unregistered)",69],[12,"Code439","","439 (unregistered)",69],[12,"Code440","","440 (unregistered)",69],[12,"Code441","","441 (unregistered)",69],[12,"Code442","","442 (unregistered)",69],[12,"Code443","","443 (unregistered)",69],[12,"Code444","","444 (unregistered)",69],[12,"Code445","","445 (unregistered)",69],[12,"Code446","","446 (unregistered)",69],[12,"Code447","","447 (unregistered)",69],[12,"Code448","","448 (unregistered)",69],[12,"Code449","","449 (unregistered)",69],[12,"Code450","","450 (unregistered)",69],[12,"UnavailableForLegalReasons","","451 Unavailable For Legal Reasons",69],[12,"Code452","","452 (unregistered)",69],[12,"Code453","","453 (unregistered)",69],[12,"Code454","","454 (unregistered)",69],[12,"Code455","","455 (unregistered)",69],[12,"Code456","","456 (unregistered)",69],[12,"Code457","","457 (unregistered)",69],[12,"Code458","","458 (unregistered)",69],[12,"Code459","","459 (unregistered)",69],[12,"Code460","","460 (unregistered)",69],[12,"Code461","","461 (unregistered)",69],[12,"Code462","","462 (unregistered)",69],[12,"Code463","","463 (unregistered)",69],[12,"Code464","","464 (unregistered)",69],[12,"Code465","","465 (unregistered)",69],[12,"Code466","","466 (unregistered)",69],[12,"Code467","","467 (unregistered)",69],[12,"Code468","","468 (unregistered)",69],[12,"Code469","","469 (unregistered)",69],[12,"Code470","","470 (unregistered)",69],[12,"Code471","","471 (unregistered)",69],[12,"Code472","","472 (unregistered)",69],[12,"Code473","","473 (unregistered)",69],[12,"Code474","","474 (unregistered)",69],[12,"Code475","","475 (unregistered)",69],[12,"Code476","","476 (unregistered)",69],[12,"Code477","","477 (unregistered)",69],[12,"Code478","","478 (unregistered)",69],[12,"Code479","","479 (unregistered)",69],[12,"Code480","","480 (unregistered)",69],[12,"Code481","","481 (unregistered)",69],[12,"Code482","","482 (unregistered)",69],[12,"Code483","","483 (unregistered)",69],[12,"Code484","","484 (unregistered)",69],[12,"Code485","","485 (unregistered)",69],[12,"Code486","","486 (unregistered)",69],[12,"Code487","","487 (unregistered)",69],[12,"Code488","","488 (unregistered)",69],[12,"Code489","","489 (unregistered)",69],[12,"Code490","","490 (unregistered)",69],[12,"Code491","","491 (unregistered)",69],[12,"Code492","","492 (unregistered)",69],[12,"Code493","","493 (unregistered)",69],[12,"Code494","","494 (unregistered)",69],[12,"Code495","","495 (unregistered)",69],[12,"Code496","","496 (unregistered)",69],[12,"Code497","","497 (unregistered)",69],[12,"Code498","","498 (unregistered)",69],[12,"Code499","","499 (unregistered)",69],[12,"InternalServerError","","500 Internal Server Error",69],[12,"NotImplemented","","501 Not Implemented",69],[12,"BadGateway","","502 Bad Gateway",69],[12,"ServiceUnavailable","","503 Service Unavailable",69],[12,"GatewayTimeout","","504 Gateway Timeout",69],[12,"HttpVersionNotSupported","","505 HTTP Version Not Supported",69],[12,"VariantAlsoNegotiates","","506 Variant Also Negotiates",69],[12,"InsufficientStorage","","507 Insufficient Storage",69],[12,"LoopDetected","","508 Loop Detected",69],[12,"Code509","","509 (unregistered)",69],[12,"NotExtended","","510 Not Extended",69],[12,"NetworkAuthenticationRequired","","511 Network Authentication Required",69],[12,"Code512","","512 (unregistered)",69],[12,"Code513","","513 (unregistered)",69],[12,"Code514","","514 (unregistered)",69],[12,"Code515","","515 (unregistered)",69],[12,"Code516","","516 (unregistered)",69],[12,"Code517","","517 (unregistered)",69],[12,"Code518","","518 (unregistered)",69],[12,"Code519","","519 (unregistered)",69],[12,"Code520","","520 (unregistered)",69],[12,"Code521","","521 (unregistered)",69],[12,"Code522","","522 (unregistered)",69],[12,"Code523","","523 (unregistered)",69],[12,"Code524","","524 (unregistered)",69],[12,"Code525","","525 (unregistered)",69],[12,"Code526","","526 (unregistered)",69],[12,"Code527","","527 (unregistered)",69],[12,"Code528","","528 (unregistered)",69],[12,"Code529","","529 (unregistered)",69],[12,"Code530","","530 (unregistered)",69],[12,"Code531","","531 (unregistered)",69],[12,"Code532","","532 (unregistered)",69],[12,"Code533","","533 (unregistered)",69],[12,"Code534","","534 (unregistered)",69],[12,"Code535","","535 (unregistered)",69],[12,"Code536","","536 (unregistered)",69],[12,"Code537","","537 (unregistered)",69],[12,"Code538","","538 (unregistered)",69],[12,"Code539","","539 (unregistered)",69],[12,"Code540","","540 (unregistered)",69],[12,"Code541","","541 (unregistered)",69],[12,"Code542","","542 (unregistered)",69],[12,"Code543","","543 (unregistered)",69],[12,"Code544","","544 (unregistered)",69],[12,"Code545","","545 (unregistered)",69],[12,"Code546","","546 (unregistered)",69],[12,"Code547","","547 (unregistered)",69],[12,"Code548","","548 (unregistered)",69],[12,"Code549","","549 (unregistered)",69],[12,"Code550","","550 (unregistered)",69],[12,"Code551","","551 (unregistered)",69],[12,"Code552","","552 (unregistered)",69],[12,"Code553","","553 (unregistered)",69],[12,"Code554","","554 (unregistered)",69],[12,"Code555","","555 (unregistered)",69],[12,"Code556","","556 (unregistered)",69],[12,"Code557","","557 (unregistered)",69],[12,"Code558","","558 (unregistered)",69],[12,"Code559","","559 (unregistered)",69],[12,"Code560","","560 (unregistered)",69],[12,"Code561","","561 (unregistered)",69],[12,"Code562","","562 (unregistered)",69],[12,"Code563","","563 (unregistered)",69],[12,"Code564","","564 (unregistered)",69],[12,"Code565","","565 (unregistered)",69],[12,"Code566","","566 (unregistered)",69],[12,"Code567","","567 (unregistered)",69],[12,"Code568","","568 (unregistered)",69],[12,"Code569","","569 (unregistered)",69],[12,"Code570","","570 (unregistered)",69],[12,"Code571","","571 (unregistered)",69],[12,"Code572","","572 (unregistered)",69],[12,"Code573","","573 (unregistered)",69],[12,"Code574","","574 (unregistered)",69],[12,"Code575","","575 (unregistered)",69],[12,"Code576","","576 (unregistered)",69],[12,"Code577","","577 (unregistered)",69],[12,"Code578","","578 (unregistered)",69],[12,"Code579","","579 (unregistered)",69],[12,"Code580","","580 (unregistered)",69],[12,"Code581","","581 (unregistered)",69],[12,"Code582","","582 (unregistered)",69],[12,"Code583","","583 (unregistered)",69],[12,"Code584","","584 (unregistered)",69],[12,"Code585","","585 (unregistered)",69],[12,"Code586","","586 (unregistered)",69],[12,"Code587","","587 (unregistered)",69],[12,"Code588","","588 (unregistered)",69],[12,"Code589","","589 (unregistered)",69],[12,"Code590","","590 (unregistered)",69],[12,"Code591","","591 (unregistered)",69],[12,"Code592","","592 (unregistered)",69],[12,"Code593","","593 (unregistered)",69],[12,"Code594","","594 (unregistered)",69],[12,"Code595","","595 (unregistered)",69],[12,"Code596","","596 (unregistered)",69],[12,"Code597","","597 (unregistered)",69],[12,"Code598","","598 (unregistered)",69],[12,"Code599","","599 (unregistered)",69],[2,"StatusClass","","The class of an HTTP `Status-Code`."],[12,"Informational","","1xx: Informational - Request received, continuing process",70],[12,"Success","","2xx: Success - The action was successfully received, understood, and accepted",70],[12,"Redirection","","3xx: Redirection - Further action must be taken in order to complete the request",70],[12,"ClientError","","4xx: Client Error - The request contains bad syntax or cannot be fulfilled",70],[12,"ServerError","","5xx: Server Error - The server failed to fulfill an apparently valid request",70],[10,"fmt","","",69],[10,"canonical_reason","","Get the standardised `Reason-Phrase` for this status code.",69],[10,"class","","Determine the class of a status code, based on its first digit.",69],[10,"fmt","","",69],[10,"eq","","",69],[10,"clone","","",69],[10,"from_i64","","",69],[10,"from_u64","","",69],[10,"partial_cmp","","",69],[10,"cmp","","",69],[10,"to_i64","","",69],[10,"to_u64","","",69],[10,"cmp","","",70],[10,"partial_cmp","","",70],[10,"lt","","",70],[10,"le","","",70],[10,"gt","","",70],[10,"ge","","",70],[10,"eq","","",70],[10,"ne","","",70],[10,"clone","","",70],[10,"default_code","","Get the default status code for the class.",70],[10,"to_i64","","",70],[10,"to_u64","","",70],[0,"uri","hyper","HTTP RequestUris"],[2,"RequestUri","hyper::uri","The Request-URI of a Request's StartLine."],[12,"AbsolutePath","","The most common request target, an absolute path and optional query.",71],[12,"AbsoluteUri","","An absolute URI. Used in conjunction with proxies.",71],[12,"Authority","","The authority form is only for use with `CONNECT` requests.",71],[12,"Star","","The star is used to target the entire server, instead of a specific resource.",71],[10,"clone","","",71],[10,"eq","","",71],[10,"ne","","",71],[10,"fmt","","",71],[0,"version","hyper","HTTP Versions enum"],[2,"HttpVersion","hyper::version","Represents a version of the HTTP spec."],[12,"Http09","","`HTTP/0.9`",72],[12,"Http10","","`HTTP/1.0`",72],[12,"Http11","","`HTTP/1.1`",72],[12,"Http20","","`HTTP/2.0`",72],[10,"fmt","","",72],[10,"partial_cmp","","",72],[10,"lt","","",72],[10,"le","","",72],[10,"gt","","",72],[10,"ge","","",72],[10,"eq","","",72],[10,"ne","","",72],[10,"fmt","","",72],[4,"HttpResult","hyper","Result type often returned from methods that can have `HttpError`s."],[10,"clone","","",0],[10,"eq","","",0],[10,"ne","","",0],[10,"fmt","","",0],[10,"description","","",0],[10,"cause","","",0],[10,"from_error","","",0],[10,"from_error","","",0],[10,"into_ascii_uppercase","collections::string","",27],[10,"into_ascii_lowercase","","",27],[10,"into_ascii_uppercase","collections::vec","",73],[10,"into_ascii_lowercase","","",73],[10,"new","std::thunk","",74],[10,"with_arg","","",74],[10,"invoke","","",74],[10,"description","core::str","",75],[10,"detail","","",75],[10,"detail","","",75],[10,"cause","","",75],[10,"description","collections::string","",76],[10,"detail","","",76],[10,"detail","","",76],[10,"cause","","",76],[10,"description","","",77],[10,"detail","","",77],[10,"cause","","",77],[10,"set","std::thread_local::scoped","Insert a value into this scoped thread local storage slot for a\nduration of a closure.",78],[10,"with","","Get a value out of this scoped variable.",78],[10,"is_set","","Test whether this TLS key has been `set` for the current thread.",78],[10,"eq","std::thread_local","",79],[10,"ne","","",79],[10,"ne","","",79],[10,"assert_receiver_is_total_eq","","",79],[10,"with","","Acquire a reference to the value in this TLS key.",80],[10,"state","","Query the current state of this key.",80],[10,"destroyed","","Deprecated",80],[10,"drop","std::dynamic_lib","",81],[10,"open","","Lazily open a dynamic library. When passed None it gives a\nhandle to the calling process",81],[10,"prepend_search_path","","Prepends a path to this process's search path for dynamic libraries",81],[10,"create_path","","From a slice of paths, create a new vector which is suitable to be an\nenvironment variable for this platforms dylib search path.",81],[10,"envvar","","Returns the environment variable for this process's dynamic library\nsearch path",81],[10,"search_path","","Returns the current search path for dynamic libraries being used by this\nprocess",81],[10,"symbol","","Access the value at the symbol of the dynamic library",81],[10,"hash","std::ffi::c_str","",82],[10,"cmp","","",82],[10,"assert_receiver_is_total_eq","","",82],[10,"partial_cmp","","",82],[10,"lt","","",82],[10,"le","","",82],[10,"gt","","",82],[10,"ge","","",82],[10,"lt","","",82],[10,"le","","",82],[10,"gt","","",82],[10,"ge","","",82],[10,"eq","","",82],[10,"ne","","",82],[10,"ne","","",82],[10,"clone","","",82],[10,"clone_from","","",82],[10,"from_slice","","Create a new C-compatible string from a byte slice.",82],[10,"from_vec","","Create a C-compatible string from a byte vector.",82],[10,"from_vec_unchecked","","Create a C-compatible string from a byte vector without checking for\ninterior 0 bytes.",82],[10,"as_slice_with_nul","","Create a view into this C string which includes the trailing nul\nterminator at the end of the string.",82],[10,"as_bytes","","Similar to the `as_slice` method, but returns a `u8` slice instead of a\n`libc::c_char` slice.",82],[10,"as_bytes_with_nul","","Equivalent to `as_slice_with_nul` except that the type returned is a\n`u8` slice instead of a `libc::c_char` slice.",82],[10,"deref","","",82],[10,"fmt","","",82],[10,"eq","core::fmt::rt","",83],[10,"ne","","",83],[10,"ne","","",83],[10,"fmt","std::io::buffered","",84],[10,"with_capacity","","Creates a new `BufferedReader` with the specified buffer capacity",84],[10,"new","","Creates a new `BufferedReader` with a default buffer capacity",84],[10,"get_ref","","Gets a reference to the underlying reader.",84],[10,"get_mut","","Gets a mutable reference to the underlying reader.",84],[10,"into_inner","","Unwraps this `BufferedReader`, returning the underlying reader.",84],[10,"fill_buf","","",84],[10,"consume","","",84],[10,"read_line","","",84],[10,"read_until","","",84],[10,"read_char","","",84],[10,"read","","",84],[10,"read_at_least","","",84],[10,"read_byte","","",84],[10,"push","","",84],[10,"push_at_least","","",84],[10,"read_exact","","",84],[10,"read_to_end","","",84],[10,"read_to_string","","",84],[10,"read_le_uint_n","","",84],[10,"read_le_int_n","","",84],[10,"read_be_uint_n","","",84],[10,"read_be_int_n","","",84],[10,"read_le_uint","","",84],[10,"read_le_int","","",84],[10,"read_be_uint","","",84],[10,"read_be_int","","",84],[10,"read_be_u64","","",84],[10,"read_be_u32","","",84],[10,"read_be_u16","","",84],[10,"read_be_i64","","",84],[10,"read_be_i32","","",84],[10,"read_be_i16","","",84],[10,"read_be_f64","","",84],[10,"read_be_f32","","",84],[10,"read_le_u64","","",84],[10,"read_le_u32","","",84],[10,"read_le_u16","","",84],[10,"read_le_i64","","",84],[10,"read_le_i32","","",84],[10,"read_le_i16","","",84],[10,"read_le_f64","","",84],[10,"read_le_f32","","",84],[10,"read_u8","","",84],[10,"read_i8","","",84],[10,"fmt","","",85],[10,"with_capacity","","Creates a new `BufferedWriter` with the specified buffer capacity",85],[10,"new","","Creates a new `BufferedWriter` with a default buffer capacity",85],[10,"get_ref","","Gets a reference to the underlying writer.",85],[10,"get_mut","","Gets a mutable reference to the underlying write.",85],[10,"into_inner","","Unwraps this `BufferedWriter`, returning the underlying writer.",85],[10,"write","","",85],[10,"flush","","",85],[10,"flush","","",85],[10,"write_fmt","","",85],[10,"write_str","","",85],[10,"write_line","","",85],[10,"write_char","","",85],[10,"write_int","","",85],[10,"write_uint","","",85],[10,"write_le_uint","","",85],[10,"write_le_int","","",85],[10,"write_be_uint","","",85],[10,"write_be_int","","",85],[10,"write_be_u64","","",85],[10,"write_be_u32","","",85],[10,"write_be_u16","","",85],[10,"write_be_i64","","",85],[10,"write_be_i32","","",85],[10,"write_be_i16","","",85],[10,"write_be_f64","","",85],[10,"write_be_f32","","",85],[10,"write_le_u64","","",85],[10,"write_le_u32","","",85],[10,"write_le_u16","","",85],[10,"write_le_i64","","",85],[10,"write_le_i32","","",85],[10,"write_le_i16","","",85],[10,"write_le_f64","","",85],[10,"write_le_f32","","",85],[10,"write_u8","","",85],[10,"write_i8","","",85],[10,"drop","","",85],[10,"fmt","","",86],[10,"new","","Creates a new `LineBufferedWriter`",86],[10,"get_ref","","Gets a reference to the underlying writer.",86],[10,"into_inner","","Unwraps this `LineBufferedWriter`, returning the underlying writer.",86],[10,"write","","",86],[10,"flush","","",86],[10,"flush","","",86],[10,"write_fmt","","",86],[10,"write_str","","",86],[10,"write_line","","",86],[10,"write_char","","",86],[10,"write_int","","",86],[10,"write_uint","","",86],[10,"write_le_uint","","",86],[10,"write_le_int","","",86],[10,"write_be_uint","","",86],[10,"write_be_int","","",86],[10,"write_be_u64","","",86],[10,"write_be_u32","","",86],[10,"write_be_u16","","",86],[10,"write_be_i64","","",86],[10,"write_be_i32","","",86],[10,"write_be_i16","","",86],[10,"write_be_f64","","",86],[10,"write_be_f32","","",86],[10,"write_le_u64","","",86],[10,"write_le_u32","","",86],[10,"write_le_u16","","",86],[10,"write_le_i64","","",86],[10,"write_le_i32","","",86],[10,"write_le_i16","","",86],[10,"write_le_f64","","",86],[10,"write_le_f32","","",86],[10,"write_u8","","",86],[10,"write_i8","","",86],[10,"read","","",87],[10,"read_at_least","","",87],[10,"read_byte","","",87],[10,"push","","",87],[10,"push_at_least","","",87],[10,"read_exact","","",87],[10,"read_to_end","","",87],[10,"read_to_string","","",87],[10,"read_le_uint_n","","",87],[10,"read_le_int_n","","",87],[10,"read_be_uint_n","","",87],[10,"read_be_int_n","","",87],[10,"read_le_uint","","",87],[10,"read_le_int","","",87],[10,"read_be_uint","","",87],[10,"read_be_int","","",87],[10,"read_be_u64","","",87],[10,"read_be_u32","","",87],[10,"read_be_u16","","",87],[10,"read_be_i64","","",87],[10,"read_be_i32","","",87],[10,"read_be_i16","","",87],[10,"read_be_f64","","",87],[10,"read_be_f32","","",87],[10,"read_le_u64","","",87],[10,"read_le_u32","","",87],[10,"read_le_u16","","",87],[10,"read_le_i64","","",87],[10,"read_le_i32","","",87],[10,"read_le_i16","","",87],[10,"read_le_f64","","",87],[10,"read_le_f32","","",87],[10,"read_u8","","",87],[10,"read_i8","","",87],[10,"fmt","","",88],[10,"with_capacities","","Creates a new buffered stream with explicitly listed capacities for the\nreader/writer buffer.",88],[10,"new","","Creates a new buffered stream with the default reader/writer buffer\ncapacities.",88],[10,"get_ref","","Gets a reference to the underlying stream.",88],[10,"get_mut","","Gets a mutable reference to the underlying stream.",88],[10,"into_inner","","Unwraps this `BufferedStream`, returning the underlying stream.",88],[10,"fill_buf","","",88],[10,"consume","","",88],[10,"read_line","","",88],[10,"read_until","","",88],[10,"read_char","","",88],[10,"read","","",88],[10,"read_at_least","","",88],[10,"read_byte","","",88],[10,"push","","",88],[10,"push_at_least","","",88],[10,"read_exact","","",88],[10,"read_to_end","","",88],[10,"read_to_string","","",88],[10,"read_le_uint_n","","",88],[10,"read_le_int_n","","",88],[10,"read_be_uint_n","","",88],[10,"read_be_int_n","","",88],[10,"read_le_uint","","",88],[10,"read_le_int","","",88],[10,"read_be_uint","","",88],[10,"read_be_int","","",88],[10,"read_be_u64","","",88],[10,"read_be_u32","","",88],[10,"read_be_u16","","",88],[10,"read_be_i64","","",88],[10,"read_be_i32","","",88],[10,"read_be_i16","","",88],[10,"read_be_f64","","",88],[10,"read_be_f32","","",88],[10,"read_le_u64","","",88],[10,"read_le_u32","","",88],[10,"read_le_u16","","",88],[10,"read_le_i64","","",88],[10,"read_le_i32","","",88],[10,"read_le_i16","","",88],[10,"read_le_f64","","",88],[10,"read_le_f32","","",88],[10,"read_u8","","",88],[10,"read_i8","","",88],[10,"write","","",88],[10,"flush","","",88],[10,"flush","","",88],[10,"write_fmt","","",88],[10,"write_str","","",88],[10,"write_line","","",88],[10,"write_char","","",88],[10,"write_int","","",88],[10,"write_uint","","",88],[10,"write_le_uint","","",88],[10,"write_le_int","","",88],[10,"write_be_uint","","",88],[10,"write_be_int","","",88],[10,"write_be_u64","","",88],[10,"write_be_u32","","",88],[10,"write_be_u16","","",88],[10,"write_be_i64","","",88],[10,"write_be_i32","","",88],[10,"write_be_i16","","",88],[10,"write_be_f64","","",88],[10,"write_be_f32","","",88],[10,"write_le_u64","","",88],[10,"write_le_u32","","",88],[10,"write_le_u16","","",88],[10,"write_le_i64","","",88],[10,"write_le_i32","","",88],[10,"write_le_i16","","",88],[10,"write_le_f64","","",88],[10,"write_le_f32","","",88],[10,"write_u8","","",88],[10,"write_i8","","",88],[10,"new","std::io::comm_adapters","Wraps a `Port` in a `ChanReader` structure",89],[10,"fill_buf","","",89],[10,"consume","","",89],[10,"read_line","","",89],[10,"read_until","","",89],[10,"read_char","","",89],[10,"read","","",89],[10,"read_at_least","","",89],[10,"read_byte","","",89],[10,"push","","",89],[10,"push_at_least","","",89],[10,"read_exact","","",89],[10,"read_to_end","","",89],[10,"read_to_string","","",89],[10,"read_le_uint_n","","",89],[10,"read_le_int_n","","",89],[10,"read_be_uint_n","","",89],[10,"read_be_int_n","","",89],[10,"read_le_uint","","",89],[10,"read_le_int","","",89],[10,"read_be_uint","","",89],[10,"read_be_int","","",89],[10,"read_be_u64","","",89],[10,"read_be_u32","","",89],[10,"read_be_u16","","",89],[10,"read_be_i64","","",89],[10,"read_be_i32","","",89],[10,"read_be_i16","","",89],[10,"read_be_f64","","",89],[10,"read_be_f32","","",89],[10,"read_le_u64","","",89],[10,"read_le_u32","","",89],[10,"read_le_u16","","",89],[10,"read_le_i64","","",89],[10,"read_le_i32","","",89],[10,"read_le_i16","","",89],[10,"read_le_f64","","",89],[10,"read_le_f32","","",89],[10,"read_u8","","",89],[10,"read_i8","","",89],[10,"new","","Wraps a channel in a `ChanWriter` structure",90],[10,"clone","","",90],[10,"clone_from","","",90],[10,"write","","",90],[10,"flush","","",90],[10,"write_fmt","","",90],[10,"write_str","","",90],[10,"write_line","","",90],[10,"write_char","","",90],[10,"write_int","","",90],[10,"write_uint","","",90],[10,"write_le_uint","","",90],[10,"write_le_int","","",90],[10,"write_be_uint","","",90],[10,"write_be_int","","",90],[10,"write_be_u64","","",90],[10,"write_be_u32","","",90],[10,"write_be_u16","","",90],[10,"write_be_i64","","",90],[10,"write_be_i32","","",90],[10,"write_be_i16","","",90],[10,"write_be_f64","","",90],[10,"write_be_f32","","",90],[10,"write_le_u64","","",90],[10,"write_le_u32","","",90],[10,"write_le_u16","","",90],[10,"write_le_i64","","",90],[10,"write_le_i32","","",90],[10,"write_le_i16","","",90],[10,"write_le_f64","","",90],[10,"write_le_f32","","",90],[10,"write_u8","","",90],[10,"write_i8","","",90],[10,"write","collections::vec","",73],[10,"flush","","",73],[10,"write_fmt","","",73],[10,"write_str","","",73],[10,"write_line","","",73],[10,"write_char","","",73],[10,"write_int","","",73],[10,"write_uint","","",73],[10,"write_le_uint","","",73],[10,"write_le_int","","",73],[10,"write_be_uint","","",73],[10,"write_be_int","","",73],[10,"write_be_u64","","",73],[10,"write_be_u32","","",73],[10,"write_be_u16","","",73],[10,"write_be_i64","","",73],[10,"write_be_i32","","",73],[10,"write_be_i16","","",73],[10,"write_be_f64","","",73],[10,"write_be_f32","","",73],[10,"write_le_u64","","",73],[10,"write_le_u32","","",73],[10,"write_le_u16","","",73],[10,"write_le_i64","","",73],[10,"write_le_i32","","",73],[10,"write_le_i16","","",73],[10,"write_le_f64","","",73],[10,"write_le_f32","","",73],[10,"write_u8","","",73],[10,"write_i8","","",73],[10,"clone","std::io::mem","",91],[10,"clone_from","","",91],[10,"new","","Create a new `MemWriter`.",91],[10,"with_capacity","","Create a new `MemWriter`, allocating at least `n` bytes for\nthe internal buffer.",91],[10,"from_vec","","Create a new `MemWriter` that will append to an existing `Vec`.",91],[10,"get_ref","","Acquires an immutable reference to the underlying buffer of this\n`MemWriter`.",91],[10,"into_inner","","Unwraps this `MemWriter`, returning the underlying buffer",91],[10,"write","","",91],[10,"flush","","",91],[10,"write_fmt","","",91],[10,"write_str","","",91],[10,"write_line","","",91],[10,"write_char","","",91],[10,"write_int","","",91],[10,"write_uint","","",91],[10,"write_le_uint","","",91],[10,"write_le_int","","",91],[10,"write_be_uint","","",91],[10,"write_be_int","","",91],[10,"write_be_u64","","",91],[10,"write_be_u32","","",91],[10,"write_be_u16","","",91],[10,"write_be_i64","","",91],[10,"write_be_i32","","",91],[10,"write_be_i16","","",91],[10,"write_be_f64","","",91],[10,"write_be_f32","","",91],[10,"write_le_u64","","",91],[10,"write_le_u32","","",91],[10,"write_le_u16","","",91],[10,"write_le_i64","","",91],[10,"write_le_i32","","",91],[10,"write_le_i16","","",91],[10,"write_le_f64","","",91],[10,"write_le_f32","","",91],[10,"write_u8","","",91],[10,"write_i8","","",91],[10,"new","","Creates a new `MemReader` which will read the buffer given. The buffer\ncan be re-acquired through `unwrap`",92],[10,"eof","","Tests whether this reader has read all bytes in its buffer.",92],[10,"get_ref","","Acquires an immutable reference to the underlying buffer of this\n`MemReader`.",92],[10,"into_inner","","Unwraps this `MemReader`, returning the underlying buffer",92],[10,"read","","",92],[10,"read_at_least","","",92],[10,"read_byte","","",92],[10,"push","","",92],[10,"push_at_least","","",92],[10,"read_exact","","",92],[10,"read_to_end","","",92],[10,"read_to_string","","",92],[10,"read_le_uint_n","","",92],[10,"read_le_int_n","","",92],[10,"read_be_uint_n","","",92],[10,"read_be_int_n","","",92],[10,"read_le_uint","","",92],[10,"read_le_int","","",92],[10,"read_be_uint","","",92],[10,"read_be_int","","",92],[10,"read_be_u64","","",92],[10,"read_be_u32","","",92],[10,"read_be_u16","","",92],[10,"read_be_i64","","",92],[10,"read_be_i32","","",92],[10,"read_be_i16","","",92],[10,"read_be_f64","","",92],[10,"read_be_f32","","",92],[10,"read_le_u64","","",92],[10,"read_le_u32","","",92],[10,"read_le_u16","","",92],[10,"read_le_i64","","",92],[10,"read_le_i32","","",92],[10,"read_le_i16","","",92],[10,"read_le_f64","","",92],[10,"read_le_f32","","",92],[10,"read_u8","","",92],[10,"read_i8","","",92],[10,"tell","","",92],[10,"seek","","",92],[10,"fill_buf","","",92],[10,"consume","","",92],[10,"read_line","","",92],[10,"read_until","","",92],[10,"read_char","","",92],[10,"new","","Creates a new `BufWriter` which will wrap the specified buffer. The\nwriter initially starts at position 0.",93],[10,"write","","",93],[10,"flush","","",93],[10,"write_fmt","","",93],[10,"write_str","","",93],[10,"write_line","","",93],[10,"write_char","","",93],[10,"write_int","","",93],[10,"write_uint","","",93],[10,"write_le_uint","","",93],[10,"write_le_int","","",93],[10,"write_be_uint","","",93],[10,"write_be_int","","",93],[10,"write_be_u64","","",93],[10,"write_be_u32","","",93],[10,"write_be_u16","","",93],[10,"write_be_i64","","",93],[10,"write_be_i32","","",93],[10,"write_be_i16","","",93],[10,"write_be_f64","","",93],[10,"write_be_f32","","",93],[10,"write_le_u64","","",93],[10,"write_le_u32","","",93],[10,"write_le_u16","","",93],[10,"write_le_i64","","",93],[10,"write_le_i32","","",93],[10,"write_le_i16","","",93],[10,"write_le_f64","","",93],[10,"write_le_f32","","",93],[10,"write_u8","","",93],[10,"write_i8","","",93],[10,"tell","","",93],[10,"seek","","",93],[10,"new","","Creates a new buffered reader which will read the specified buffer",94],[10,"eof","","Tests whether this reader has read all bytes in its buffer.",94],[10,"read","","",94],[10,"read_at_least","","",94],[10,"read_byte","","",94],[10,"push","","",94],[10,"push_at_least","","",94],[10,"read_exact","","",94],[10,"read_to_end","","",94],[10,"read_to_string","","",94],[10,"read_le_uint_n","","",94],[10,"read_le_int_n","","",94],[10,"read_be_uint_n","","",94],[10,"read_be_int_n","","",94],[10,"read_le_uint","","",94],[10,"read_le_int","","",94],[10,"read_be_uint","","",94],[10,"read_be_int","","",94],[10,"read_be_u64","","",94],[10,"read_be_u32","","",94],[10,"read_be_u16","","",94],[10,"read_be_i64","","",94],[10,"read_be_i32","","",94],[10,"read_be_i16","","",94],[10,"read_be_f64","","",94],[10,"read_be_f32","","",94],[10,"read_le_u64","","",94],[10,"read_le_u32","","",94],[10,"read_le_u16","","",94],[10,"read_le_i64","","",94],[10,"read_le_i32","","",94],[10,"read_le_i16","","",94],[10,"read_le_f64","","",94],[10,"read_le_f32","","",94],[10,"read_u8","","",94],[10,"read_i8","","",94],[10,"tell","","",94],[10,"seek","","",94],[10,"fill_buf","","",94],[10,"consume","","",94],[10,"read_line","","",94],[10,"read_until","","",94],[10,"read_char","","",94],[10,"write","core::result","",95],[10,"flush","","",95],[10,"flush","","",95],[10,"write_fmt","","",95],[10,"write_str","","",95],[10,"write_line","","",95],[10,"write_char","","",95],[10,"write_int","","",95],[10,"write_uint","","",95],[10,"write_le_uint","","",95],[10,"write_le_int","","",95],[10,"write_be_uint","","",95],[10,"write_be_int","","",95],[10,"write_be_u64","","",95],[10,"write_be_u32","","",95],[10,"write_be_u16","","",95],[10,"write_be_i64","","",95],[10,"write_be_i32","","",95],[10,"write_be_i16","","",95],[10,"write_be_f64","","",95],[10,"write_be_f32","","",95],[10,"write_le_u64","","",95],[10,"write_le_u32","","",95],[10,"write_le_u16","","",95],[10,"write_le_i64","","",95],[10,"write_le_i32","","",95],[10,"write_le_i16","","",95],[10,"write_le_f64","","",95],[10,"write_le_f32","","",95],[10,"write_u8","","",95],[10,"write_i8","","",95],[10,"read","","",95],[10,"read_at_least","","",95],[10,"read_byte","","",95],[10,"push","","",95],[10,"push_at_least","","",95],[10,"read_exact","","",95],[10,"read_to_end","","",95],[10,"read_to_string","","",95],[10,"read_le_uint_n","","",95],[10,"read_le_int_n","","",95],[10,"read_be_uint_n","","",95],[10,"read_be_int_n","","",95],[10,"read_le_uint","","",95],[10,"read_le_int","","",95],[10,"read_be_uint","","",95],[10,"read_be_int","","",95],[10,"read_be_u64","","",95],[10,"read_be_u32","","",95],[10,"read_be_u16","","",95],[10,"read_be_i64","","",95],[10,"read_be_i32","","",95],[10,"read_be_i16","","",95],[10,"read_be_f64","","",95],[10,"read_be_f32","","",95],[10,"read_le_u64","","",95],[10,"read_le_u32","","",95],[10,"read_le_u16","","",95],[10,"read_le_i64","","",95],[10,"read_le_i32","","",95],[10,"read_le_i16","","",95],[10,"read_le_f64","","",95],[10,"read_le_f32","","",95],[10,"read_u8","","",95],[10,"read_i8","","",95],[10,"tell","","",95],[10,"seek","","",95],[10,"listen","","",95],[10,"accept","","",95],[10,"incoming","","",95],[10,"new_in","std::io::tempfile","Attempts to make a temporary directory inside of `tmpdir` whose name\nwill have the prefix `prefix`. The directory will be automatically\ndeleted once the returned wrapper is destroyed.",96],[10,"new","","Attempts to make a temporary directory inside of `os::tmpdir()` whose\nname will have the prefix `prefix`. The directory will be automatically\ndeleted once the returned wrapper is destroyed.",96],[10,"into_inner","","Unwrap the wrapped `std::path::Path` from the `TempDir` wrapper.\nThis discards the wrapper so that the automatic deletion of the\ntemporary directory is prevented.",96],[10,"path","","Access the wrapped `std::path::Path` to the temporary directory.",96],[10,"close","","Close and remove the temporary directory",96],[10,"drop","","",96],[10,"new","std::io::extensions","Constructs a new byte iterator from the given Reader instance.",97],[10,"next","","",97],[10,"size_hint","","",97],[10,"as_inner","std::io::fs","",98],[10,"open_mode","","Open a file at `path` in the mode specified by the `mode` and `access`\narguments",98],[10,"open","","Attempts to open a file in read-only mode. This function is equivalent to\n`File::open_mode(path, Open, Read)`, and will raise all of the same\nerrors that `File::open_mode` does.",98],[10,"create","","Attempts to create a file in write-only mode. This function is\nequivalent to `File::open_mode(path, Truncate, Write)`, and will\nraise all of the same errors that `File::open_mode` does.",98],[10,"path","","Returns the original path that was used to open this file.",98],[10,"fsync","","Synchronizes all modifications to this file to its permanent storage\ndevice. This will flush any internal buffers necessary to perform this\noperation.",98],[10,"datasync","","This function is similar to `fsync`, except that it may not synchronize\nfile metadata to the filesystem. This is intended for use cases that\nmust synchronize content, but don't need the metadata on disk. The goal\nof this method is to reduce disk operations.",98],[10,"truncate","","Either truncates or extends the underlying file, updating the size of\nthis file to become `size`. This is equivalent to unix's `truncate`\nfunction.",98],[10,"eof","","Returns true if the stream has reached the end of the file.",98],[10,"stat","","Queries information about the underlying file.",98],[10,"clone","","",99],[10,"clone_from","","",99],[10,"next","","",99],[10,"size_hint","","",99],[10,"read","","",98],[10,"read_at_least","","",98],[10,"read_byte","","",98],[10,"push","","",98],[10,"push_at_least","","",98],[10,"read_exact","","",98],[10,"read_to_end","","",98],[10,"read_to_string","","",98],[10,"read_le_uint_n","","",98],[10,"read_le_int_n","","",98],[10,"read_be_uint_n","","",98],[10,"read_be_int_n","","",98],[10,"read_le_uint","","",98],[10,"read_le_int","","",98],[10,"read_be_uint","","",98],[10,"read_be_int","","",98],[10,"read_be_u64","","",98],[10,"read_be_u32","","",98],[10,"read_be_u16","","",98],[10,"read_be_i64","","",98],[10,"read_be_i32","","",98],[10,"read_be_i16","","",98],[10,"read_be_f64","","",98],[10,"read_be_f32","","",98],[10,"read_le_u64","","",98],[10,"read_le_u32","","",98],[10,"read_le_u16","","",98],[10,"read_le_i64","","",98],[10,"read_le_i32","","",98],[10,"read_le_i16","","",98],[10,"read_le_f64","","",98],[10,"read_le_f32","","",98],[10,"read_u8","","",98],[10,"read_i8","","",98],[10,"write","","",98],[10,"flush","","",98],[10,"write_fmt","","",98],[10,"write_str","","",98],[10,"write_line","","",98],[10,"write_char","","",98],[10,"write_int","","",98],[10,"write_uint","","",98],[10,"write_le_uint","","",98],[10,"write_le_int","","",98],[10,"write_be_uint","","",98],[10,"write_be_int","","",98],[10,"write_be_u64","","",98],[10,"write_be_u32","","",98],[10,"write_be_u16","","",98],[10,"write_be_i64","","",98],[10,"write_be_i32","","",98],[10,"write_be_i16","","",98],[10,"write_be_f64","","",98],[10,"write_be_f32","","",98],[10,"write_le_u64","","",98],[10,"write_le_u32","","",98],[10,"write_le_u16","","",98],[10,"write_le_i64","","",98],[10,"write_le_i32","","",98],[10,"write_le_i16","","",98],[10,"write_le_f64","","",98],[10,"write_le_f32","","",98],[10,"write_u8","","",98],[10,"write_i8","","",98],[10,"tell","","",98],[10,"seek","","",98],[10,"stat","std::path::posix","",100],[10,"lstat","","",100],[10,"exists","","",100],[10,"is_file","","",100],[10,"is_dir","","",100],[10,"fmt","std::io::net::addrinfo","",101],[10,"fmt","","",102],[10,"fmt","","",103],[10,"fmt","","",104],[10,"fmt","","",105],[10,"connect","std::io::net::tcp","Open a TCP connection to a remote host.",106],[10,"connect_timeout","","Creates a TCP connection to a remote socket address, timing out after\nthe specified duration.",106],[10,"peer_name","","Returns the socket address of the remote peer of this TCP connection.",106],[10,"socket_name","","Returns the socket address of the local half of this TCP connection.",106],[10,"set_nodelay","","Sets the nodelay flag on this connection to the boolean specified",106],[10,"set_keepalive","","Sets the keepalive timeout to the timeout specified.",106],[10,"close_read","","Closes the reading half of this connection.",106],[10,"close_write","","Closes the writing half of this connection.",106],[10,"set_timeout","","Sets a timeout, in milliseconds, for blocking operations on this stream.",106],[10,"set_read_timeout","","Sets the timeout for read operations on this stream.",106],[10,"set_write_timeout","","Sets the timeout for write operations on this stream.",106],[10,"clone","","Creates a new handle to this TCP stream, allowing for simultaneous reads\nand writes of this connection.",106],[10,"clone_from","","",106],[10,"read","","",106],[10,"read_at_least","","",106],[10,"read_byte","","",106],[10,"push","","",106],[10,"push_at_least","","",106],[10,"read_exact","","",106],[10,"read_to_end","","",106],[10,"read_to_string","","",106],[10,"read_le_uint_n","","",106],[10,"read_le_int_n","","",106],[10,"read_be_uint_n","","",106],[10,"read_be_int_n","","",106],[10,"read_le_uint","","",106],[10,"read_le_int","","",106],[10,"read_be_uint","","",106],[10,"read_be_int","","",106],[10,"read_be_u64","","",106],[10,"read_be_u32","","",106],[10,"read_be_u16","","",106],[10,"read_be_i64","","",106],[10,"read_be_i32","","",106],[10,"read_be_i16","","",106],[10,"read_be_f64","","",106],[10,"read_be_f32","","",106],[10,"read_le_u64","","",106],[10,"read_le_u32","","",106],[10,"read_le_u16","","",106],[10,"read_le_i64","","",106],[10,"read_le_i32","","",106],[10,"read_le_i16","","",106],[10,"read_le_f64","","",106],[10,"read_le_f32","","",106],[10,"read_u8","","",106],[10,"read_i8","","",106],[10,"write","","",106],[10,"flush","","",106],[10,"write_fmt","","",106],[10,"write_str","","",106],[10,"write_line","","",106],[10,"write_char","","",106],[10,"write_int","","",106],[10,"write_uint","","",106],[10,"write_le_uint","","",106],[10,"write_le_int","","",106],[10,"write_be_uint","","",106],[10,"write_be_int","","",106],[10,"write_be_u64","","",106],[10,"write_be_u32","","",106],[10,"write_be_u16","","",106],[10,"write_be_i64","","",106],[10,"write_be_i32","","",106],[10,"write_be_i16","","",106],[10,"write_be_f64","","",106],[10,"write_be_f32","","",106],[10,"write_le_u64","","",106],[10,"write_le_u32","","",106],[10,"write_le_u16","","",106],[10,"write_le_i64","","",106],[10,"write_le_i32","","",106],[10,"write_le_i16","","",106],[10,"write_le_f64","","",106],[10,"write_le_f32","","",106],[10,"write_u8","","",106],[10,"write_i8","","",106],[10,"as_inner","","",106],[10,"bind","","Creates a new `TcpListener` which will be bound to the specified address.\nThis listener is not ready for accepting connections, `listen` must be called\non it before that's possible.",107],[10,"socket_name","","Returns the local socket address of this listener.",107],[10,"listen","","",107],[10,"as_inner","","",107],[10,"set_timeout","","Prevents blocking on all future accepts after `ms` milliseconds have\nelapsed.",108],[10,"close_accept","","Closes the accepting capabilities of this acceptor.",108],[10,"accept","","",108],[10,"incoming","","",108],[10,"clone","","Creates a new handle to this TCP acceptor, allowing for simultaneous\naccepts.",108],[10,"clone_from","","",108],[10,"as_inner","","",108],[10,"bind","std::io::net::udp","Creates a UDP socket from the given address.",109],[10,"recv_from","","Receives data from the socket. On success, returns the number of bytes\nread and the address from whence the data came.",109],[10,"send_to","","Sends data on the socket to the given address. Returns nothing on\nsuccess.",109],[10,"socket_name","","Returns the socket address that this socket was created from.",109],[10,"join_multicast","","Joins a multicast IP address (becomes a member of it)",109],[10,"leave_multicast","","Leaves a multicast IP address (drops membership from it)",109],[10,"set_multicast_loop","","Set the multicast loop flag to the specified value",109],[10,"set_multicast_ttl","","Sets the multicast TTL",109],[10,"set_ttl","","Sets this socket's TTL",109],[10,"set_broadcast","","Sets the broadcast flag on or off",109],[10,"set_timeout","","Sets the read/write timeout for this socket.",109],[10,"set_read_timeout","","Sets the read timeout for this socket.",109],[10,"set_write_timeout","","Sets the write timeout for this socket.",109],[10,"clone","","Creates a new handle to this UDP socket, allowing for simultaneous\nreads and writes of the socket.",109],[10,"clone_from","","",109],[10,"as_inner","","",109],[10,"fmt","std::io::net::ip","",110],[10,"hash","","",110],[10,"clone","","",110],[10,"clone_from","","",110],[10,"assert_receiver_is_total_eq","","",110],[10,"eq","","",110],[10,"ne","","",110],[10,"ne","","",110],[10,"fmt","","",110],[10,"fmt","","",111],[10,"hash","","",111],[10,"clone","","",111],[10,"clone_from","","",111],[10,"assert_receiver_is_total_eq","","",111],[10,"eq","","",111],[10,"ne","","",111],[10,"ne","","",111],[10,"fmt","","",111],[10,"from_str","","",110],[10,"from_str","","",111],[10,"to_socket_addr","","",111],[10,"to_socket_addr","","",111],[10,"to_socket_addr_all","","",111],[10,"connect","std::io::net::pipe","Connect to a pipe named by `path`. This will attempt to open a\nconnection to the underlying socket.",112],[10,"connect_timeout","","Connect to a pipe named by `path`, timing out if the specified number of\nmilliseconds.",112],[10,"close_read","","Closes the reading half of this connection.",112],[10,"close_write","","Closes the writing half of this connection.",112],[10,"set_timeout","","Sets the read/write timeout for this socket.",112],[10,"set_read_timeout","","Sets the read timeout for this socket.",112],[10,"set_write_timeout","","Sets the write timeout for this socket.",112],[10,"clone","","",112],[10,"clone_from","","",112],[10,"read","","",112],[10,"read_at_least","","",112],[10,"read_byte","","",112],[10,"push","","",112],[10,"push_at_least","","",112],[10,"read_exact","","",112],[10,"read_to_end","","",112],[10,"read_to_string","","",112],[10,"read_le_uint_n","","",112],[10,"read_le_int_n","","",112],[10,"read_be_uint_n","","",112],[10,"read_be_int_n","","",112],[10,"read_le_uint","","",112],[10,"read_le_int","","",112],[10,"read_be_uint","","",112],[10,"read_be_int","","",112],[10,"read_be_u64","","",112],[10,"read_be_u32","","",112],[10,"read_be_u16","","",112],[10,"read_be_i64","","",112],[10,"read_be_i32","","",112],[10,"read_be_i16","","",112],[10,"read_be_f64","","",112],[10,"read_be_f32","","",112],[10,"read_le_u64","","",112],[10,"read_le_u32","","",112],[10,"read_le_u16","","",112],[10,"read_le_i64","","",112],[10,"read_le_i32","","",112],[10,"read_le_i16","","",112],[10,"read_le_f64","","",112],[10,"read_le_f32","","",112],[10,"read_u8","","",112],[10,"read_i8","","",112],[10,"write","","",112],[10,"flush","","",112],[10,"write_fmt","","",112],[10,"write_str","","",112],[10,"write_line","","",112],[10,"write_char","","",112],[10,"write_int","","",112],[10,"write_uint","","",112],[10,"write_le_uint","","",112],[10,"write_le_int","","",112],[10,"write_be_uint","","",112],[10,"write_be_int","","",112],[10,"write_be_u64","","",112],[10,"write_be_u32","","",112],[10,"write_be_u16","","",112],[10,"write_be_i64","","",112],[10,"write_be_i32","","",112],[10,"write_be_i16","","",112],[10,"write_be_f64","","",112],[10,"write_be_f32","","",112],[10,"write_le_u64","","",112],[10,"write_le_u32","","",112],[10,"write_le_u16","","",112],[10,"write_le_i64","","",112],[10,"write_le_i32","","",112],[10,"write_le_i16","","",112],[10,"write_le_f64","","",112],[10,"write_le_f32","","",112],[10,"write_u8","","",112],[10,"write_i8","","",112],[10,"as_inner","","",112],[10,"bind","","Creates a new listener, ready to receive incoming connections on the\nspecified socket. The server will be named by `path`.",113],[10,"listen","","",113],[10,"as_inner","","",113],[10,"set_timeout","","Sets a timeout for this acceptor, after which accept() will no longer\nblock indefinitely.",114],[10,"close_accept","","Closes the accepting capabilities of this acceptor.",114],[10,"accept","","",114],[10,"incoming","","",114],[10,"clone","","Creates a new handle to this unix acceptor, allowing for simultaneous\naccepts.",114],[10,"clone_from","","",114],[10,"as_inner","","",114],[10,"open","std::io::pipe","Consumes a file descriptor to return a pipe stream that will have\nsynchronous, but non-blocking reads/writes. This is useful if the file\ndescriptor is acquired via means other than the standard methods.",115],[10,"pair","","Creates a pair of in-memory OS pipes for a unidirectional communication\nstream.",115],[10,"as_inner","","",115],[10,"clone","","",115],[10,"clone_from","","",115],[10,"read","","",115],[10,"read_at_least","","",115],[10,"read_byte","","",115],[10,"push","","",115],[10,"push_at_least","","",115],[10,"read_exact","","",115],[10,"read_to_end","","",115],[10,"read_to_string","","",115],[10,"read_le_uint_n","","",115],[10,"read_le_int_n","","",115],[10,"read_be_uint_n","","",115],[10,"read_be_int_n","","",115],[10,"read_le_uint","","",115],[10,"read_le_int","","",115],[10,"read_be_uint","","",115],[10,"read_be_int","","",115],[10,"read_be_u64","","",115],[10,"read_be_u32","","",115],[10,"read_be_u16","","",115],[10,"read_be_i64","","",115],[10,"read_be_i32","","",115],[10,"read_be_i16","","",115],[10,"read_be_f64","","",115],[10,"read_be_f32","","",115],[10,"read_le_u64","","",115],[10,"read_le_u32","","",115],[10,"read_le_u16","","",115],[10,"read_le_i64","","",115],[10,"read_le_i32","","",115],[10,"read_le_i16","","",115],[10,"read_le_f64","","",115],[10,"read_le_f32","","",115],[10,"read_u8","","",115],[10,"read_i8","","",115],[10,"write","","",115],[10,"flush","","",115],[10,"write_fmt","","",115],[10,"write_str","","",115],[10,"write_line","","",115],[10,"write_char","","",115],[10,"write_int","","",115],[10,"write_uint","","",115],[10,"write_le_uint","","",115],[10,"write_le_int","","",115],[10,"write_be_uint","","",115],[10,"write_be_int","","",115],[10,"write_be_u64","","",115],[10,"write_be_u32","","",115],[10,"write_be_u16","","",115],[10,"write_be_i64","","",115],[10,"write_be_i32","","",115],[10,"write_be_i16","","",115],[10,"write_be_f64","","",115],[10,"write_be_f32","","",115],[10,"write_le_u64","","",115],[10,"write_le_u32","","",115],[10,"write_le_u16","","",115],[10,"write_le_i64","","",115],[10,"write_le_i32","","",115],[10,"write_le_i16","","",115],[10,"write_le_f64","","",115],[10,"write_le_f32","","",115],[10,"write_u8","","",115],[10,"write_i8","","",115],[10,"fmt","std::io::process","",116],[10,"clone","","",116],[10,"clone_from","","",116],[10,"assert_receiver_is_total_eq","","",116],[10,"eq","","",116],[10,"ne","","",116],[10,"ne","","",116],[10,"hash","","",116],[10,"container_as_bytes","","",116],[10,"container_as_str","","",116],[10,"is_str","","",116],[10,"clone","","",117],[10,"clone_from","","",117],[10,"new","","Constructs a new `Command` for launching the program at\npath `program`, with the following default configuration:",117],[10,"arg","","Add an argument to pass to the program.",117],[10,"args","","Add multiple arguments to pass to the program.",117],[10,"env","","Inserts or updates an environment variable mapping.",117],[10,"env_remove","","Removes an environment variable mapping.",117],[10,"env_set_all","","Sets the entire environment map for the child process.",117],[10,"cwd","","Set the working directory for the child process.",117],[10,"stdin","","Configuration for the child process's stdin handle (file descriptor 0).\nDefaults to `CreatePipe(true, false)` so the input can be written to.",117],[10,"stdout","","Configuration for the child process's stdout handle (file descriptor 1).\nDefaults to `CreatePipe(false, true)` so the output can be collected.",117],[10,"stderr","","Configuration for the child process's stderr handle (file descriptor 2).\nDefaults to `CreatePipe(false, true)` so the output can be collected.",117],[10,"uid","","Sets the child process's user id. This translates to a `setuid` call in\nthe child process. Setting this value on windows will cause the spawn to\nfail. Failure in the `setuid` call on unix will also cause the spawn to\nfail.",117],[10,"gid","","Similar to `uid`, but sets the group id of the child process. This has\nthe same semantics as the `uid` field.",117],[10,"detached","","Sets the child process to be spawned in a detached state. On unix, this\nmeans that the child is the leader of a new process group.",117],[10,"spawn","","Executes the command as a child process, which is returned.",117],[10,"output","","Executes the command as a child process, waiting for it to finish and\ncollecting all of its output.",117],[10,"status","","Executes a command as a child process, waiting for it to finish and\ncollecting its exit status.",117],[10,"fmt","","Format the program and arguments of a Command for display. Any\nnon-utf8 data is lossily converted using the utf8 replacement\ncharacter.",117],[10,"program","","",117],[10,"args","","",117],[10,"env","","",117],[10,"cwd","","",117],[10,"uid","","",117],[10,"gid","","",117],[10,"detach","","",117],[10,"clone","","",118],[10,"clone_from","","",118],[10,"assert_receiver_is_total_eq","","",118],[10,"eq","","",118],[10,"ne","","",118],[10,"ne","","",118],[10,"clone","","",119],[10,"clone_from","","",119],[10,"clone","","",120],[10,"clone_from","","",120],[10,"assert_receiver_is_total_eq","","",120],[10,"eq","","",120],[10,"ne","","",120],[10,"ne","","",120],[10,"fmt","","Format a ProcessExit enum, to nicely present the information.",120],[10,"fmt","","Format a ProcessExit enum, to nicely present the information.",120],[10,"success","","Was termination successful? Signal termination not considered a success,\nand success is defined as a zero exit status.",120],[10,"matches_exit_status","","Checks whether this ProcessExit matches the given exit status.\nTermination by signal will never match an exit code.",120],[10,"kill","","Sends `signal` to another process in the system identified by `id`.",121],[10,"id","","Returns the process id of this child process",121],[10,"signal","","Sends the specified signal to the child process, returning whether the\nsignal could be delivered or not.",121],[10,"signal_exit","","Sends a signal to this child requesting that it exits. This is\nequivalent to sending a SIGTERM on unix platforms.",121],[10,"signal_kill","","Sends a signal to this child forcing it to exit. This is equivalent to\nsending a SIGKILL on unix platforms.",121],[10,"wait","","Wait for the child to exit completely, returning the status that it\nexited with. This function will continue to have the same return value\nafter it has been called at least once.",121],[10,"set_timeout","","Sets a timeout, in milliseconds, for future calls to wait().",121],[10,"wait_with_output","","Simultaneously wait for the child to exit and collect all remaining\noutput on the stdout/stderr handles, returning a `ProcessOutput`\ninstance.",121],[10,"forget","","Forgets this process, allowing it to outlive the parent",121],[10,"drop","","",121],[10,"clone","std::io::stdio","",122],[10,"clone_from","","",122],[10,"deref","","",123],[10,"deref_mut","","",123],[10,"lock","","Locks the `StdinReader`, granting the calling thread exclusive access\nto the underlying `BufferedReader`.",122],[10,"read_line","","Like `Buffer::read_line`.",122],[10,"read_until","","Like `Buffer::read_until`.",122],[10,"read_char","","Like `Buffer::read_char`.",122],[10,"read","","",122],[10,"read_at_least","","",122],[10,"push_at_least","","",122],[10,"read_to_end","","",122],[10,"read_le_uint_n","","",122],[10,"read_be_uint_n","","",122],[10,"read_at_least","","",122],[10,"read_byte","","",122],[10,"push","","",122],[10,"push_at_least","","",122],[10,"read_exact","","",122],[10,"read_to_end","","",122],[10,"read_to_string","","",122],[10,"read_le_uint_n","","",122],[10,"read_le_int_n","","",122],[10,"read_be_uint_n","","",122],[10,"read_be_int_n","","",122],[10,"read_le_uint","","",122],[10,"read_le_int","","",122],[10,"read_be_uint","","",122],[10,"read_be_int","","",122],[10,"read_be_u64","","",122],[10,"read_be_u32","","",122],[10,"read_be_u16","","",122],[10,"read_be_i64","","",122],[10,"read_be_i32","","",122],[10,"read_be_i16","","",122],[10,"read_be_f64","","",122],[10,"read_be_f32","","",122],[10,"read_le_u64","","",122],[10,"read_le_u32","","",122],[10,"read_le_u16","","",122],[10,"read_le_i64","","",122],[10,"read_le_i32","","",122],[10,"read_le_i16","","",122],[10,"read_le_f64","","",122],[10,"read_le_f32","","",122],[10,"read_u8","","",122],[10,"read_i8","","",122],[10,"isatty","","Returns whether this stream is attached to a TTY instance or not.",124],[10,"read","","",124],[10,"read_at_least","","",124],[10,"read_byte","","",124],[10,"push","","",124],[10,"push_at_least","","",124],[10,"read_exact","","",124],[10,"read_to_end","","",124],[10,"read_to_string","","",124],[10,"read_le_uint_n","","",124],[10,"read_le_int_n","","",124],[10,"read_be_uint_n","","",124],[10,"read_be_int_n","","",124],[10,"read_le_uint","","",124],[10,"read_le_int","","",124],[10,"read_be_uint","","",124],[10,"read_be_int","","",124],[10,"read_be_u64","","",124],[10,"read_be_u32","","",124],[10,"read_be_u16","","",124],[10,"read_be_i64","","",124],[10,"read_be_i32","","",124],[10,"read_be_i16","","",124],[10,"read_be_f64","","",124],[10,"read_be_f32","","",124],[10,"read_le_u64","","",124],[10,"read_le_u32","","",124],[10,"read_le_u16","","",124],[10,"read_le_i64","","",124],[10,"read_le_i32","","",124],[10,"read_le_i16","","",124],[10,"read_le_f64","","",124],[10,"read_le_f32","","",124],[10,"read_u8","","",124],[10,"read_i8","","",124],[10,"winsize","","Gets the size of this output window, if possible. This is typically used\nwhen the writer is attached to something like a terminal, this is used\nto fetch the dimensions of the terminal.",125],[10,"set_raw","","Controls whether this output stream is a \"raw stream\" or simply a normal\nstream.",125],[10,"isatty","","Returns whether this stream is attached to a TTY instance or not.",125],[10,"write","","",125],[10,"flush","","",125],[10,"write_fmt","","",125],[10,"write_str","","",125],[10,"write_line","","",125],[10,"write_char","","",125],[10,"write_int","","",125],[10,"write_uint","","",125],[10,"write_le_uint","","",125],[10,"write_le_int","","",125],[10,"write_be_uint","","",125],[10,"write_be_int","","",125],[10,"write_be_u64","","",125],[10,"write_be_u32","","",125],[10,"write_be_u16","","",125],[10,"write_be_i64","","",125],[10,"write_be_i32","","",125],[10,"write_be_i16","","",125],[10,"write_be_f64","","",125],[10,"write_be_f32","","",125],[10,"write_le_u64","","",125],[10,"write_le_u32","","",125],[10,"write_le_u16","","",125],[10,"write_le_i64","","",125],[10,"write_le_i32","","",125],[10,"write_le_i16","","",125],[10,"write_le_f64","","",125],[10,"write_le_f32","","",125],[10,"write_u8","","",125],[10,"write_i8","","",125],[10,"new","std::io::timer","Creates a new timer which can be used to put the current task to sleep\nfor a number of milliseconds, or to possibly create channels which will\nget notified after an amount of time has passed.",126],[10,"sleep","","Blocks the current task for the specified duration.",126],[10,"oneshot","","Creates a oneshot receiver which will have a notification sent when\nthe specified duration has elapsed.",126],[10,"periodic","","Creates a receiver which will have a continuous stream of notifications\nbeing sent each time the specified duration has elapsed.",126],[10,"call","","",127],[10,"fmt","std::io::util","",128],[10,"new","","Creates a new `LimitReader`",128],[10,"into_inner","","Consumes the `LimitReader`, returning the underlying `Reader`.",128],[10,"limit","","Returns the number of bytes that can be read before the `LimitReader`\nwill return EOF.",128],[10,"read","","",128],[10,"read_at_least","","",128],[10,"read_byte","","",128],[10,"push","","",128],[10,"push_at_least","","",128],[10,"read_exact","","",128],[10,"read_to_end","","",128],[10,"read_to_string","","",128],[10,"read_le_uint_n","","",128],[10,"read_le_int_n","","",128],[10,"read_be_uint_n","","",128],[10,"read_be_int_n","","",128],[10,"read_le_uint","","",128],[10,"read_le_int","","",128],[10,"read_be_uint","","",128],[10,"read_be_int","","",128],[10,"read_be_u64","","",128],[10,"read_be_u32","","",128],[10,"read_be_u16","","",128],[10,"read_be_i64","","",128],[10,"read_be_i32","","",128],[10,"read_be_i16","","",128],[10,"read_be_f64","","",128],[10,"read_be_f32","","",128],[10,"read_le_u64","","",128],[10,"read_le_u32","","",128],[10,"read_le_u16","","",128],[10,"read_le_i64","","",128],[10,"read_le_i32","","",128],[10,"read_le_i16","","",128],[10,"read_le_f64","","",128],[10,"read_le_f32","","",128],[10,"read_u8","","",128],[10,"read_i8","","",128],[10,"fill_buf","","",128],[10,"consume","","",128],[10,"read_line","","",128],[10,"read_until","","",128],[10,"read_char","","",128],[10,"fmt","","",129],[10,"write","","",129],[10,"flush","","",129],[10,"write_fmt","","",129],[10,"write_str","","",129],[10,"write_line","","",129],[10,"write_char","","",129],[10,"write_int","","",129],[10,"write_uint","","",129],[10,"write_le_uint","","",129],[10,"write_le_int","","",129],[10,"write_be_uint","","",129],[10,"write_be_int","","",129],[10,"write_be_u64","","",129],[10,"write_be_u32","","",129],[10,"write_be_u16","","",129],[10,"write_be_i64","","",129],[10,"write_be_i32","","",129],[10,"write_be_i16","","",129],[10,"write_be_f64","","",129],[10,"write_be_f32","","",129],[10,"write_le_u64","","",129],[10,"write_le_u32","","",129],[10,"write_le_u16","","",129],[10,"write_le_i64","","",129],[10,"write_le_i32","","",129],[10,"write_le_i16","","",129],[10,"write_le_f64","","",129],[10,"write_le_f32","","",129],[10,"write_u8","","",129],[10,"write_i8","","",129],[10,"fmt","","",130],[10,"read","","",130],[10,"read_at_least","","",130],[10,"read_byte","","",130],[10,"push","","",130],[10,"push_at_least","","",130],[10,"read_exact","","",130],[10,"read_to_end","","",130],[10,"read_to_string","","",130],[10,"read_le_uint_n","","",130],[10,"read_le_int_n","","",130],[10,"read_be_uint_n","","",130],[10,"read_be_int_n","","",130],[10,"read_le_uint","","",130],[10,"read_le_int","","",130],[10,"read_be_uint","","",130],[10,"read_be_int","","",130],[10,"read_be_u64","","",130],[10,"read_be_u32","","",130],[10,"read_be_u16","","",130],[10,"read_be_i64","","",130],[10,"read_be_i32","","",130],[10,"read_be_i16","","",130],[10,"read_be_f64","","",130],[10,"read_be_f32","","",130],[10,"read_le_u64","","",130],[10,"read_le_u32","","",130],[10,"read_le_u16","","",130],[10,"read_le_i64","","",130],[10,"read_le_i32","","",130],[10,"read_le_i16","","",130],[10,"read_le_f64","","",130],[10,"read_le_f32","","",130],[10,"read_u8","","",130],[10,"read_i8","","",130],[10,"fill_buf","","",130],[10,"consume","","",130],[10,"read_line","","",130],[10,"read_until","","",130],[10,"read_char","","",130],[10,"fmt","","",131],[10,"read","","",131],[10,"read_at_least","","",131],[10,"read_byte","","",131],[10,"push","","",131],[10,"push_at_least","","",131],[10,"read_exact","","",131],[10,"read_to_end","","",131],[10,"read_to_string","","",131],[10,"read_le_uint_n","","",131],[10,"read_le_int_n","","",131],[10,"read_be_uint_n","","",131],[10,"read_be_int_n","","",131],[10,"read_le_uint","","",131],[10,"read_le_int","","",131],[10,"read_be_uint","","",131],[10,"read_be_int","","",131],[10,"read_be_u64","","",131],[10,"read_be_u32","","",131],[10,"read_be_u16","","",131],[10,"read_be_i64","","",131],[10,"read_be_i32","","",131],[10,"read_be_i16","","",131],[10,"read_be_f64","","",131],[10,"read_be_f32","","",131],[10,"read_le_u64","","",131],[10,"read_le_u32","","",131],[10,"read_le_u16","","",131],[10,"read_le_i64","","",131],[10,"read_le_i32","","",131],[10,"read_le_i16","","",131],[10,"read_le_f64","","",131],[10,"read_le_f32","","",131],[10,"read_u8","","",131],[10,"read_i8","","",131],[10,"fill_buf","","",131],[10,"consume","","",131],[10,"read_line","","",131],[10,"read_until","","",131],[10,"read_char","","",131],[10,"fmt","","",132],[10,"new","","Creates a new `MultiWriter`",132],[10,"write","","",132],[10,"flush","","",132],[10,"flush","","",132],[10,"write_fmt","","",132],[10,"write_str","","",132],[10,"write_line","","",132],[10,"write_char","","",132],[10,"write_int","","",132],[10,"write_uint","","",132],[10,"write_le_uint","","",132],[10,"write_le_int","","",132],[10,"write_be_uint","","",132],[10,"write_be_int","","",132],[10,"write_be_u64","","",132],[10,"write_be_u32","","",132],[10,"write_be_u16","","",132],[10,"write_be_i64","","",132],[10,"write_be_i32","","",132],[10,"write_be_i16","","",132],[10,"write_be_f64","","",132],[10,"write_be_f32","","",132],[10,"write_le_u64","","",132],[10,"write_le_u32","","",132],[10,"write_le_u16","","",132],[10,"write_le_i64","","",132],[10,"write_le_i32","","",132],[10,"write_le_i16","","",132],[10,"write_le_f64","","",132],[10,"write_le_f32","","",132],[10,"write_u8","","",132],[10,"write_i8","","",132],[10,"fmt","","",133],[10,"clone","","",133],[10,"clone_from","","",133],[10,"new","","Creates a new `ChainedReader`",133],[10,"read","","",133],[10,"read_at_least","","",133],[10,"read_byte","","",133],[10,"push","","",133],[10,"push_at_least","","",133],[10,"read_exact","","",133],[10,"read_to_end","","",133],[10,"read_to_string","","",133],[10,"read_le_uint_n","","",133],[10,"read_le_int_n","","",133],[10,"read_be_uint_n","","",133],[10,"read_be_int_n","","",133],[10,"read_le_uint","","",133],[10,"read_le_int","","",133],[10,"read_be_uint","","",133],[10,"read_be_int","","",133],[10,"read_be_u64","","",133],[10,"read_be_u32","","",133],[10,"read_be_u16","","",133],[10,"read_be_i64","","",133],[10,"read_be_i32","","",133],[10,"read_be_i16","","",133],[10,"read_be_f64","","",133],[10,"read_be_f32","","",133],[10,"read_le_u64","","",133],[10,"read_le_u32","","",133],[10,"read_le_u16","","",133],[10,"read_le_i64","","",133],[10,"read_le_i32","","",133],[10,"read_le_i16","","",133],[10,"read_le_f64","","",133],[10,"read_le_f32","","",133],[10,"read_u8","","",133],[10,"read_i8","","",133],[10,"fmt","","",134],[10,"new","","Creates a new `TeeReader`",134],[10,"into_inner","","Consumes the `TeeReader`, returning the underlying `Reader` and\n`Writer`.",134],[10,"read","","",134],[10,"read_at_least","","",134],[10,"read_byte","","",134],[10,"push","","",134],[10,"push_at_least","","",134],[10,"read_exact","","",134],[10,"read_to_end","","",134],[10,"read_to_string","","",134],[10,"read_le_uint_n","","",134],[10,"read_le_int_n","","",134],[10,"read_be_uint_n","","",134],[10,"read_be_int_n","","",134],[10,"read_le_uint","","",134],[10,"read_le_int","","",134],[10,"read_be_uint","","",134],[10,"read_be_int","","",134],[10,"read_be_u64","","",134],[10,"read_be_u32","","",134],[10,"read_be_u16","","",134],[10,"read_be_i64","","",134],[10,"read_be_i32","","",134],[10,"read_be_i16","","",134],[10,"read_be_f64","","",134],[10,"read_be_f32","","",134],[10,"read_le_u64","","",134],[10,"read_le_u32","","",134],[10,"read_le_u16","","",134],[10,"read_le_i64","","",134],[10,"read_le_i32","","",134],[10,"read_le_i16","","",134],[10,"read_le_f64","","",134],[10,"read_le_f32","","",134],[10,"read_u8","","",134],[10,"read_i8","","",134],[10,"fmt","","",135],[10,"clone","","",135],[10,"clone_from","","",135],[10,"new","","Creates a new `IterReader` which will read from the specified\n`Iterator`.",135],[10,"read","","",135],[10,"read_at_least","","",135],[10,"read_byte","","",135],[10,"push","","",135],[10,"push_at_least","","",135],[10,"read_exact","","",135],[10,"read_to_end","","",135],[10,"read_to_string","","",135],[10,"read_le_uint_n","","",135],[10,"read_le_int_n","","",135],[10,"read_be_uint_n","","",135],[10,"read_be_int_n","","",135],[10,"read_le_uint","","",135],[10,"read_le_int","","",135],[10,"read_be_uint","","",135],[10,"read_be_int","","",135],[10,"read_be_u64","","",135],[10,"read_be_u32","","",135],[10,"read_be_u16","","",135],[10,"read_be_i64","","",135],[10,"read_be_i32","","",135],[10,"read_be_i16","","",135],[10,"read_be_f64","","",135],[10,"read_be_f32","","",135],[10,"read_le_u64","","",135],[10,"read_le_u32","","",135],[10,"read_le_u16","","",135],[10,"read_le_i64","","",135],[10,"read_le_i32","","",135],[10,"read_le_i16","","",135],[10,"read_le_f64","","",135],[10,"read_le_f32","","",135],[10,"read_u8","","",135],[10,"read_i8","","",135],[10,"fmt","std::io","",136],[10,"clone","","",136],[10,"clone_from","","",136],[10,"assert_receiver_is_total_eq","","",136],[10,"eq","","",136],[10,"ne","","",136],[10,"ne","","",136],[10,"from_errno","","Convert an `errno` value into an `IoError`.",136],[10,"last_error","","Retrieve the last error to occur as a (detailed) IoError.",136],[10,"fmt","","",136],[10,"description","","",136],[10,"detail","","",136],[10,"detail","","",136],[10,"cause","","",136],[10,"from_error","alloc::boxed","",46],[10,"fmt","std::io","",137],[10,"clone","","",137],[10,"clone_from","","",137],[10,"assert_receiver_is_total_eq","","",137],[10,"eq","","",137],[10,"ne","","",137],[10,"ne","","",137],[10,"update_err","core::result","",95],[10,"update_detail","","",95],[10,"update_desc","","",95],[10,"read","alloc::boxed","",46],[10,"read_at_least","","",46],[10,"read_byte","","",46],[10,"push","","",46],[10,"push_at_least","","",46],[10,"read_exact","","",46],[10,"read_to_end","","",46],[10,"read_to_string","","",46],[10,"read_le_uint_n","","",46],[10,"read_le_int_n","","",46],[10,"read_be_uint_n","","",46],[10,"read_be_int_n","","",46],[10,"read_le_uint","","",46],[10,"read_le_int","","",46],[10,"read_be_uint","","",46],[10,"read_be_int","","",46],[10,"read_be_u64","","",46],[10,"read_be_u32","","",46],[10,"read_be_u16","","",46],[10,"read_be_i64","","",46],[10,"read_be_i32","","",46],[10,"read_be_i16","","",46],[10,"read_be_f64","","",46],[10,"read_be_f32","","",46],[10,"read_le_u64","","",46],[10,"read_le_u32","","",46],[10,"read_le_u16","","",46],[10,"read_le_i64","","",46],[10,"read_le_i32","","",46],[10,"read_le_i16","","",46],[10,"read_le_f64","","",46],[10,"read_le_f32","","",46],[10,"read_u8","","",46],[10,"read_i8","","",46],[10,"read","std::io","",138],[10,"read_at_least","","",138],[10,"read_byte","","",138],[10,"push","","",138],[10,"push_at_least","","",138],[10,"read_exact","","",138],[10,"read_to_end","","",138],[10,"read_to_string","","",138],[10,"read_le_uint_n","","",138],[10,"read_le_int_n","","",138],[10,"read_be_uint_n","","",138],[10,"read_be_int_n","","",138],[10,"read_le_uint","","",138],[10,"read_le_int","","",138],[10,"read_be_uint","","",138],[10,"read_be_int","","",138],[10,"read_be_u64","","",138],[10,"read_be_u32","","",138],[10,"read_be_u16","","",138],[10,"read_be_i64","","",138],[10,"read_be_i32","","",138],[10,"read_be_i16","","",138],[10,"read_be_f64","","",138],[10,"read_be_f32","","",138],[10,"read_le_u64","","",138],[10,"read_le_u32","","",138],[10,"read_le_u16","","",138],[10,"read_le_i64","","",138],[10,"read_le_i32","","",138],[10,"read_le_i16","","",138],[10,"read_le_f64","","",138],[10,"read_le_f32","","",138],[10,"read_u8","","",138],[10,"read_i8","","",138],[10,"fill_buf","","",138],[10,"consume","","",138],[10,"read_line","","",138],[10,"read_until","","",138],[10,"read_char","","",138],[10,"write","alloc::boxed","",46],[10,"flush","","",46],[10,"flush","","",46],[10,"write_fmt","","",46],[10,"write_str","","",46],[10,"write_line","","",46],[10,"write_char","","",46],[10,"write_int","","",46],[10,"write_uint","","",46],[10,"write_le_uint","","",46],[10,"write_le_int","","",46],[10,"write_be_uint","","",46],[10,"write_be_int","","",46],[10,"write_be_u64","","",46],[10,"write_be_u32","","",46],[10,"write_be_u16","","",46],[10,"write_be_i64","","",46],[10,"write_be_i32","","",46],[10,"write_be_i16","","",46],[10,"write_be_f64","","",46],[10,"write_be_f32","","",46],[10,"write_le_u64","","",46],[10,"write_le_u32","","",46],[10,"write_le_u16","","",46],[10,"write_le_i64","","",46],[10,"write_le_i32","","",46],[10,"write_le_i16","","",46],[10,"write_le_f64","","",46],[10,"write_le_f32","","",46],[10,"write_u8","","",46],[10,"write_i8","","",46],[10,"write","std::io","",139],[10,"flush","","",139],[10,"flush","","",139],[10,"write_fmt","","",139],[10,"write_str","","",139],[10,"write_line","","",139],[10,"write_char","","",139],[10,"write_int","","",139],[10,"write_uint","","",139],[10,"write_le_uint","","",139],[10,"write_le_int","","",139],[10,"write_be_uint","","",139],[10,"write_be_int","","",139],[10,"write_be_u64","","",139],[10,"write_be_u32","","",139],[10,"write_be_u16","","",139],[10,"write_be_i64","","",139],[10,"write_be_i32","","",139],[10,"write_be_i16","","",139],[10,"write_be_f64","","",139],[10,"write_be_f32","","",139],[10,"write_le_u64","","",139],[10,"write_le_u32","","",139],[10,"write_le_u16","","",139],[10,"write_le_i64","","",139],[10,"write_le_i32","","",139],[10,"write_le_i16","","",139],[10,"write_le_f64","","",139],[10,"write_le_f32","","",139],[10,"write_u8","","",139],[10,"write_i8","","",139],[10,"next","","",140],[10,"size_hint","","",140],[10,"next","","",141],[10,"size_hint","","",141],[10,"next","","",142],[10,"size_hint","","",142],[10,"fmt","","",143],[10,"assert_receiver_is_total_eq","","",143],[10,"eq","","",143],[10,"ne","","",143],[10,"ne","","",143],[10,"clone","","",143],[10,"clone_from","","",143],[10,"fmt","","",144],[10,"assert_receiver_is_total_eq","","",144],[10,"eq","","",144],[10,"ne","","",144],[10,"ne","","",144],[10,"clone","","",144],[10,"clone_from","","",144],[10,"clone","","",145],[10,"clone_from","","",145],[10,"hash","","",145],[10,"fmt","","",145],[10,"eq","","",145],[10,"ne","","",145],[10,"ne","","",145],[10,"hash","","",146],[10,"hash","","",147],[10,"hash","","",148],[10,"cmp","","",148],[10,"partial_cmp","","",148],[10,"lt","","",148],[10,"le","","",148],[10,"gt","","",148],[10,"ge","","",148],[10,"lt","","",148],[10,"le","","",148],[10,"gt","","",148],[10,"ge","","",148],[10,"clone","","",148],[10,"clone_from","","",148],[10,"assert_receiver_is_total_eq","","",148],[10,"eq","","",148],[10,"ne","","",148],[10,"ne","","",148],[10,"empty","","Returns an empty set of flags.",148],[10,"all","","Returns the set containing all flags.",148],[10,"bits","","Returns the raw value of the flags currently stored.",148],[10,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",148],[10,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",148],[10,"is_empty","","Returns `true` if no flags are currently stored.",148],[10,"is_all","","Returns `true` if all flags are currently set.",148],[10,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",148],[10,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",148],[10,"insert","","Inserts the specified flags in-place.",148],[10,"remove","","Removes the specified flags in-place.",148],[10,"toggle","","Toggles the specified flags in-place.",148],[10,"bitor","","Returns the union of the two sets of flags.",148],[10,"bitxor","","Returns the left flags, but with all the right flags toggled.",148],[10,"bitand","","Returns the intersection between the two sets of flags.",148],[10,"sub","","Returns the set difference of the two sets of flags.",148],[10,"not","","Returns the complement of this set of flags.",148],[10,"default","","",148],[10,"fmt","","",148],[10,"fmt","","",148],[10,"fmt","std::os","",149],[10,"description","","",149],[10,"detail","","",149],[10,"detail","","",149],[10,"cause","","",149],[10,"from_error","alloc::boxed","",46],[10,"new","std::os","Create a new mapping with the given `options`, at least `min_len` bytes\nlong. `min_len` must be greater than zero; see the note on\n`ErrZeroLength`.",150],[10,"granularity","","Granularity that the offset or address must be for `MapOffset` and\n`MapAddr` respectively.",150],[10,"drop","","Unmap the mapping. Panics the task if `munmap` panics.",150],[10,"data","","Returns the pointer to the memory created or modified by this map.",150],[10,"len","","Returns the number of bytes this map applies to.",150],[10,"kind","","Returns the type of mapping this represents.",150],[10,"as_raw_fd","std::io::fs","",98],[10,"as_raw_fd","std::io::pipe","",115],[10,"as_raw_fd","std::io::net::pipe","",112],[10,"as_raw_fd","","",113],[10,"as_raw_fd","","",114],[10,"as_raw_fd","std::io::net::tcp","",106],[10,"as_raw_fd","","",107],[10,"as_raw_fd","","",108],[10,"as_raw_fd","std::io::net::udp","",109],[10,"clone","std::path::posix","",100],[10,"clone_from","","",100],[10,"fmt","","",100],[10,"eq","","",100],[10,"ne","","",100],[10,"assert_receiver_is_total_eq","","",100],[10,"partial_cmp","","",100],[10,"lt","","",100],[10,"le","","",100],[10,"gt","","",100],[10,"ge","","",100],[10,"cmp","","",100],[10,"from_str","","",100],[10,"hash","","",100],[10,"container_as_bytes","","",100],[10,"container_as_str","","",100],[10,"is_str","","",100],[10,"new_unchecked","","",100],[10,"set_filename_unchecked","","",100],[10,"push_unchecked","","",100],[10,"as_vec","","",100],[10,"into_vec","","",100],[10,"dirname","","",100],[10,"filename","","",100],[10,"pop","","",100],[10,"root_path","","",100],[10,"is_absolute","","",100],[10,"is_ancestor_of","","",100],[10,"path_relative_from","","",100],[10,"ends_with_path","","",100],[10,"new","","",100],[10,"new_opt","","",100],[10,"as_str","","",100],[10,"display","","",100],[10,"filename_display","","",100],[10,"dirname_str","","",100],[10,"filename_str","","",100],[10,"filestem","","",100],[10,"filestem_str","","",100],[10,"extension","","",100],[10,"extension_str","","",100],[10,"set_filename","","",100],[10,"set_extension","","",100],[10,"with_filename","","",100],[10,"with_extension","","",100],[10,"dir_path","","",100],[10,"push","","",100],[10,"push_many","","",100],[10,"join","","",100],[10,"join_many","","",100],[10,"is_relative","","",100],[10,"new","","Returns a new Path from a byte vector or string",100],[10,"new_opt","","Returns a new Path from a byte vector or string, if possible",100],[10,"components","","Returns an iterator that yields each component of the path in turn.\nDoes not distinguish between absolute and relative paths, e.g.\n/a/b/c and a/b/c yield the same set of components.\nA path of \"/\" yields no components. A path of \".\" yields one component.",100],[10,"str_components","","Returns an iterator that yields each component of the path as Option<&str>.\nSee components() for details.",100],[10,"clone","std::path::windows","",151],[10,"clone_from","","",151],[10,"fmt","","",151],[10,"eq","","",151],[10,"ne","","",151],[10,"assert_receiver_is_total_eq","","",151],[10,"partial_cmp","","",151],[10,"lt","","",151],[10,"le","","",151],[10,"gt","","",151],[10,"ge","","",151],[10,"cmp","","",151],[10,"from_str","","",151],[10,"hash","","",151],[10,"container_as_bytes","","",151],[10,"container_as_str","","",151],[10,"is_str","","",151],[10,"container_as_str","","",151],[10,"is_str","","",151],[10,"new_unchecked","","See `GenericPathUnsafe::from_vec_unchecked`.",151],[10,"set_filename_unchecked","","See `GenericPathUnsafe::set_filename_unchecked`.",151],[10,"push_unchecked","","See `GenericPathUnsafe::push_unchecked`.",151],[10,"new_opt","","",151],[10,"as_str","","See `GenericPath::as_str` for info.\nAlways returns a `Some` value.",151],[10,"as_vec","","",151],[10,"into_vec","","",151],[10,"dirname","","",151],[10,"dirname_str","","See `GenericPath::dirname_str` for info.\nAlways returns a `Some` value.",151],[10,"filename","","",151],[10,"filename_str","","See `GenericPath::filename_str` for info.\nAlways returns a `Some` value if `filename` returns a `Some` value.",151],[10,"filestem_str","","See `GenericPath::filestem_str` for info.\nAlways returns a `Some` value if `filestem` returns a `Some` value.",151],[10,"extension_str","","",151],[10,"dir_path","","",151],[10,"pop","","",151],[10,"root_path","","",151],[10,"is_absolute","","See `GenericPath::is_absolute` for info.",151],[10,"is_relative","","",151],[10,"is_ancestor_of","","",151],[10,"path_relative_from","","",151],[10,"ends_with_path","","",151],[10,"new","","",151],[10,"new_opt","","",151],[10,"as_str","","",151],[10,"display","","",151],[10,"filename_display","","",151],[10,"dirname_str","","",151],[10,"filename_str","","",151],[10,"filestem","","",151],[10,"filestem_str","","",151],[10,"extension","","",151],[10,"extension_str","","",151],[10,"set_filename","","",151],[10,"set_extension","","",151],[10,"with_filename","","",151],[10,"with_extension","","",151],[10,"dir_path","","",151],[10,"push","","",151],[10,"push_many","","",151],[10,"join","","",151],[10,"join_many","","",151],[10,"is_relative","","",151],[10,"new","","Returns a new `Path` from a `BytesContainer`.",151],[10,"new_opt","","Returns a new `Some(Path)` from a `BytesContainer`.",151],[10,"str_components","","Returns an iterator that yields each component of the path in turn as a Option<&str>.\nEvery component is guaranteed to be Some.\nDoes not yield the path prefix (including server/share components in UNC paths).\nDoes not distinguish between volume-relative and relative paths, e.g.\n\\a\\b\\c and a\\b\\c.\nDoes not distinguish between absolute and cwd-relative paths, e.g.\nC:\\foo and C:foo.",151],[10,"components","","Returns an iterator that yields each component of the path in turn as a &[u8].\nSee str_components() for details.",151],[10,"fmt","","",152],[10,"clone","","",152],[10,"clone_from","","",152],[10,"eq","","",152],[10,"ne","","",152],[10,"ne","","",152],[10,"fmt","std::path","",153],[10,"fmt","","",153],[10,"as_cow","","Returns the path as a possibly-owned string.",153],[10,"container_as_bytes","collections::string","",27],[10,"container_as_str","","",27],[10,"is_str","","",27],[10,"container_as_str","","",27],[10,"is_str","","",27],[10,"container_as_bytes","collections::vec","",73],[10,"container_as_str","","",73],[10,"is_str","","",73],[10,"container_as_bytes","std::ffi::c_str","",82],[10,"container_as_str","","",82],[10,"is_str","","",82],[10,"new","std::rand::os::imp","Create a new `OsRng`.",154],[10,"next_u32","","",154],[10,"next_u64","","",154],[10,"fill_bytes","","",154],[10,"next_u64","","",154],[10,"next_f32","","",154],[10,"next_f64","","",154],[10,"fill_bytes","","",154],[10,"gen","","",154],[10,"gen_iter","","",154],[10,"gen_range","","",154],[10,"gen_weighted_bool","","",154],[10,"gen_ascii_chars","","",154],[10,"choose","","",154],[10,"shuffle","","",154],[10,"new","std::rand::reader","Create a new `ReaderRng` from a `Reader`.",155],[10,"next_u32","","",155],[10,"next_u64","","",155],[10,"fill_bytes","","",155],[10,"next_u64","","",155],[10,"next_f32","","",155],[10,"next_f64","","",155],[10,"fill_bytes","","",155],[10,"gen","","",155],[10,"gen_iter","","",155],[10,"gen_range","","",155],[10,"gen_weighted_bool","","",155],[10,"gen_ascii_chars","","",155],[10,"choose","","",155],[10,"shuffle","","",155],[10,"clone","std::rand","",156],[10,"clone_from","","",156],[10,"new","","Create a randomly seeded instance of `StdRng`.",156],[10,"next_u32","","",156],[10,"next_u64","","",156],[10,"next_u64","","",156],[10,"next_f32","","",156],[10,"next_f64","","",156],[10,"fill_bytes","","",156],[10,"gen","","",156],[10,"gen_iter","","",156],[10,"gen_range","","",156],[10,"gen_weighted_bool","","",156],[10,"gen_ascii_chars","","",156],[10,"choose","","",156],[10,"shuffle","","",156],[10,"reseed","","",156],[10,"from_seed","","",156],[10,"reseed","","",157],[10,"clone","","",158],[10,"clone_from","","",158],[10,"next_u32","","",158],[10,"next_u64","","",158],[10,"fill_bytes","","",158],[10,"next_u64","","",158],[10,"next_f32","","",158],[10,"next_f64","","",158],[10,"fill_bytes","","",158],[10,"gen","","",158],[10,"gen_iter","","",158],[10,"gen_range","","",158],[10,"gen_weighted_bool","","",158],[10,"gen_ascii_chars","","",158],[10,"choose","","",158],[10,"shuffle","","",158],[10,"new","rand::distributions::range","Create a new `Range` instance that samples uniformly from\n`[low, high)`. Panics if `low >= high`.",159],[10,"sample","","",159],[10,"ind_sample","","",159],[10,"new","rand::distributions::gamma","Construct an object representing the `Gamma(shape, scale)`\ndistribution.",160],[10,"sample","","",160],[10,"sample","","",161],[10,"sample","","",162],[10,"ind_sample","","",160],[10,"ind_sample","","",161],[10,"ind_sample","","",162],[10,"new","","Create a new chi-squared distribution with degrees-of-freedom\n`k`. Panics if `k < 0`.",163],[10,"sample","","",163],[10,"ind_sample","","",163],[10,"new","","Create a new `FisherF` distribution, with the given\nparameter. Panics if either `m` or `n` are not positive.",164],[10,"sample","","",164],[10,"ind_sample","","",164],[10,"new","","Create a new Student t distribution with `n` degrees of\nfreedom. Panics if `n <= 0`.",165],[10,"sample","","",165],[10,"ind_sample","","",165],[10,"rand","rand::distributions::normal","",166],[10,"new","","Construct a new `Normal` distribution with the given mean and\nstandard deviation.",167],[10,"sample","","",167],[10,"ind_sample","","",167],[10,"new","","Construct a new `LogNormal` distribution with the given mean\nand standard deviation.",168],[10,"sample","","",168],[10,"ind_sample","","",168],[10,"rand","rand::distributions::exponential","",169],[10,"new","","Construct a new `Exp` with the given shape parameter\n`lambda`. Panics if `lambda <= 0`.",170],[10,"sample","","",170],[10,"ind_sample","","",170],[10,"sample","rand::distributions","",171],[10,"ind_sample","","",171],[10,"new","","Create a new `WeightedChoice`.",172],[10,"sample","","",172],[10,"ind_sample","","",172],[10,"new","rand::reseeding","Create a new `ReseedingRng` with the given parameters.",173],[10,"reseed_if_necessary","","Reseed the internal RNG if the number of bytes that have been\ngenerated exceed the threshold.",173],[10,"next_u32","","",173],[10,"next_u64","","",173],[10,"fill_bytes","","",173],[10,"next_u64","","",173],[10,"next_f32","","",173],[10,"next_f64","","",173],[10,"fill_bytes","","",173],[10,"gen","","",173],[10,"gen_iter","","",173],[10,"gen_range","","",173],[10,"gen_weighted_bool","","",173],[10,"gen_ascii_chars","","",173],[10,"choose","","",173],[10,"shuffle","","",173],[10,"reseed","","",173],[10,"from_seed","","Create a new `ReseedingRng` from the given reseeder and\nseed. This uses a default value for `generation_threshold`.",173],[10,"reseed","","",174],[10,"default","","",174],[10,"fmt","std::time::duration","",175],[10,"cmp","","",175],[10,"partial_cmp","","",175],[10,"lt","","",175],[10,"le","","",175],[10,"gt","","",175],[10,"ge","","",175],[10,"lt","","",175],[10,"le","","",175],[10,"gt","","",175],[10,"ge","","",175],[10,"assert_receiver_is_total_eq","","",175],[10,"eq","","",175],[10,"ne","","",175],[10,"ne","","",175],[10,"clone","","",175],[10,"clone_from","","",175],[10,"weeks","","Makes a new `Duration` with given number of weeks.\nEquivalent to `Duration::seconds(weeks * 7 * 24 * 60 * 60), with overflow checks.\nPanics when the duration is out of bounds.",175],[10,"days","","Makes a new `Duration` with given number of days.\nEquivalent to `Duration::seconds(days * 24 * 60 * 60)` with overflow checks.\nPanics when the duration is out of bounds.",175],[10,"hours","","Makes a new `Duration` with given number of hours.\nEquivalent to `Duration::seconds(hours * 60 * 60)` with overflow checks.\nPanics when the duration is out of bounds.",175],[10,"minutes","","Makes a new `Duration` with given number of minutes.\nEquivalent to `Duration::seconds(minutes * 60)` with overflow checks.\nPanics when the duration is out of bounds.",175],[10,"seconds","","Makes a new `Duration` with given number of seconds.\nPanics when the duration is more than `i64::MAX` milliseconds\nor less than `i64::MIN` milliseconds.",175],[10,"milliseconds","","Makes a new `Duration` with given number of milliseconds.",175],[10,"microseconds","","Makes a new `Duration` with given number of microseconds.",175],[10,"nanoseconds","","Makes a new `Duration` with given number of nanoseconds.",175],[10,"span","","Runs a closure, returning the duration of time it took to run the\nclosure.",175],[10,"num_weeks","","Returns the total number of whole weeks in the duration.",175],[10,"num_days","","Returns the total number of whole days in the duration.",175],[10,"num_hours","","Returns the total number of whole hours in the duration.",175],[10,"num_minutes","","Returns the total number of whole minutes in the duration.",175],[10,"num_seconds","","Returns the total number of whole seconds in the duration.",175],[10,"num_milliseconds","","Returns the total number of whole milliseconds in the duration,",175],[10,"num_microseconds","","Returns the total number of whole microseconds in the duration,\nor `None` on overflow (exceeding 2^63 microseconds in either direction).",175],[10,"num_nanoseconds","","Returns the total number of whole nanoseconds in the duration,\nor `None` on overflow (exceeding 2^63 nanoseconds in either direction).",175],[10,"checked_add","","Add two durations, returning `None` if overflow occured.",175],[10,"checked_sub","","Subtract two durations, returning `None` if overflow occured.",175],[10,"min_value","","The minimum possible `Duration`: `i64::MIN` milliseconds.",175],[10,"max_value","","The maximum possible `Duration`: `i64::MAX` milliseconds.",175],[10,"zero","","A duration where the stored seconds and nanoseconds are equal to zero.",175],[10,"is_zero","","Returns `true` if the duration equals `Duration::zero()`.",175],[10,"neg","","",175],[10,"add","","",175],[10,"sub","","",175],[10,"mul","","",175],[10,"div","","",175],[10,"fmt","","",175],[10,"eq","std::collections::hash::table","",176],[10,"ne","","",176],[10,"ne","","",176],[10,"inspect","","Peek at the hash value, which is guaranteed to be non-zero.",176],[10,"table","","Borrow a reference to the table.",177],[10,"into_table","","Move out the reference to the table.",177],[10,"index","","Get the raw index.",177],[10,"table","","Borrow a reference to the table.",178],[10,"into_table","","Move out the reference to the table.",178],[10,"into_table","","Move out the reference to the table.",179],[10,"index","","Get the raw index.",179],[10,"new","","",179],[10,"at_index","","",179],[10,"first","","",179],[10,"peek","","Reads a bucket at a given index, returning an enum indicating whether\nit's initialized or not. You need to match on this enum to get\nthe appropriate types to call most of the other functions in\nthis module.",179],[10,"next","","Modifies the bucket pointer in place to make it point to the next slot.",179],[10,"next","","",178],[10,"into_bucket","","",178],[10,"gap_peek","","",178],[10,"put","","Puts given key and value pair, along with the key's hash,\ninto this bucket in the hashtable. Note how `self` is 'moved' into\nthis function, because this slot will no longer be empty when\nwe return! A `FullBucket` is returned for later use, pointing to\nthe newly-filled slot in the hashtable.",178],[10,"next","","",177],[10,"into_bucket","","",177],[10,"distance","","Get the distance between this bucket and the 'ideal' location\nas determined by the key's hash stored in it.",177],[10,"hash","","",177],[10,"read","","Gets references to the key and value at a given index.",177],[10,"take","","Removes this bucket's key and value from the hashtable.",177],[10,"replace","","",177],[10,"read_mut","","Gets mutable references to the key and value at a given index.",177],[10,"into_refs","","Exchange a bucket state for immutable references into the table.\nBecause the underlying reference to the table is also consumed,\nno further changes to the structure of the table are possible;\nin exchange for this, the returned references have a longer lifetime\nthan the references returned by `read()`.",177],[10,"into_mut_refs","","This works similarly to `into_refs`, exchanging a bucket state\nfor mutable references into the table.",177],[10,"expect_full","","",180],[10,"full","","",181],[10,"shift","","",181],[10,"new","","Creates a new raw table from a given capacity. All buckets are\ninitially empty.",182],[10,"capacity","","The hashtable's capacity, similar to a vector's.",182],[10,"size","","The number of elements ever `put` in the hashtable, minus the number\nof elements ever `take`n.",182],[10,"iter","","",182],[10,"iter_mut","","",182],[10,"into_iter","","",182],[10,"drain","","",182],[10,"clone","","",183],[10,"clone_from","","",183],[10,"next","","",183],[10,"size_hint","","",183],[10,"next","","",184],[10,"size_hint","","",184],[10,"clone","","",185],[10,"clone_from","","",185],[10,"next","","",185],[10,"size_hint","","",185],[10,"size_hint","","",185],[10,"len","","",185],[10,"len","","",185],[10,"next","","",186],[10,"size_hint","","",186],[10,"size_hint","","",186],[10,"len","","",186],[10,"len","","",186],[10,"next","","",187],[10,"size_hint","","",187],[10,"size_hint","","",187],[10,"len","","",187],[10,"len","","",187],[10,"next","","",188],[10,"size_hint","","",188],[10,"size_hint","","",188],[10,"len","","",188],[10,"len","","",188],[10,"drop","","",188],[10,"clone","","",182],[10,"clone_from","","",182],[10,"drop","","",182],[10,"clone","std::collections::hash::map","",189],[10,"clone_from","","",189],[10,"clone","","",190],[10,"clone_from","","",190],[10,"new","","Create an empty HashMap.",190],[10,"with_capacity","","Creates an empty hash map with the given initial capacity.",190],[10,"with_hash_state","","Creates an empty hashmap which will use the given hasher to hash keys.",190],[10,"with_capacity_and_hash_state","","Create an empty HashMap with space for at least `capacity`\nelements, using `hasher` to hash the keys.",190],[10,"capacity","","Returns the number of elements the map can hold without reallocating.",190],[10,"reserve","","Reserves capacity for at least `additional` more elements to be inserted\nin the `HashMap`. The collection may reserve more space to avoid\nfrequent reallocations.",190],[10,"shrink_to_fit","","Shrinks the capacity of the map as much as possible. It will drop\ndown as much as possible while maintaining the internal rules\nand possibly leaving some space in accordance with the resize policy.",190],[10,"keys","","An iterator visiting all keys in arbitrary order.\nIterator element type is `&'a K`.",190],[10,"values","","An iterator visiting all values in arbitrary order.\nIterator element type is `&'a V`.",190],[10,"iter","","An iterator visiting all key-value pairs in arbitrary order.\nIterator element type is `(&'a K, &'a V)`.",190],[10,"iter_mut","","An iterator visiting all key-value pairs in arbitrary order,\nwith mutable references to the values.\nIterator element type is `(&'a K, &'a mut V)`.",190],[10,"into_iter","","Creates a consuming iterator, that is, one that moves each key-value\npair out of the map in arbitrary order. The map cannot be used after\ncalling this.",190],[10,"entry","","Gets the given key's corresponding entry in the map for in-place manipulation.",190],[10,"len","","Return the number of elements in the map.",190],[10,"is_empty","","Return true if the map contains no elements.",190],[10,"drain","","Clears the map, returning all key-value pairs as an iterator. Keeps the\nallocated memory for reuse.",190],[10,"clear","","Clears the map, removing all key-value pairs. Keeps the allocated memory\nfor reuse.",190],[10,"get","","Returns a reference to the value corresponding to the key.",190],[10,"contains_key","","Returns true if the map contains a value for the specified key.",190],[10,"get_mut","","Returns a mutable reference to the value corresponding to the key.",190],[10,"insert","","Inserts a key-value pair from the map. If the key already had a value\npresent in the map, that value is returned. Otherwise, `None` is returned.",190],[10,"remove","","Removes a key from the map, returning the value at the key if the key\nwas previously in the map.",190],[10,"eq","","",190],[10,"ne","","",190],[10,"assert_receiver_is_total_eq","","",190],[10,"fmt","","",190],[10,"default","","",190],[10,"index","","",190],[10,"index_mut","","",190],[10,"clone","","",191],[10,"clone_from","","",191],[10,"clone","","",192],[10,"clone_from","","",192],[10,"clone","","",193],[10,"clone_from","","",193],[10,"next","","",191],[10,"size_hint","","",191],[10,"size_hint","","",191],[10,"len","","",191],[10,"len","","",191],[10,"next","","",194],[10,"size_hint","","",194],[10,"size_hint","","",194],[10,"len","","",194],[10,"len","","",194],[10,"next","","",195],[10,"size_hint","","",195],[10,"size_hint","","",195],[10,"len","","",195],[10,"len","","",195],[10,"next","","",192],[10,"size_hint","","",192],[10,"size_hint","","",192],[10,"len","","",192],[10,"len","","",192],[10,"next","","",193],[10,"size_hint","","",193],[10,"size_hint","","",193],[10,"len","","",193],[10,"len","","",193],[10,"next","","",196],[10,"size_hint","","",196],[10,"size_hint","","",196],[10,"len","","",196],[10,"len","","",196],[10,"get","","Returns a mutable reference to the entry if occupied, or the VacantEntry if vacant",197],[10,"get","","Gets a reference to the value in the entry",198],[10,"get_mut","","Gets a mutable reference to the value in the entry",198],[10,"into_mut","","Converts the OccupiedEntry into a mutable reference to the value in the entry\nwith a lifetime bound to the map itself",198],[10,"insert","","Sets the value of the entry, and returns the entry's old value",198],[10,"remove","","Takes the value out of the entry, and returns it",198],[10,"insert","","Sets the value of the entry with the VacantEntry's key,\nand returns a mutable reference to it",199],[10,"from_iter","","",190],[10,"extend","","",190],[10,"clone","","",200],[10,"clone_from","","",200],[10,"new","","Construct a new `RandomState` that is initialized with random keys.",200],[10,"hasher","","",200],[10,"default","","",200],[10,"write","","",201],[10,"reset","","",201],[10,"finish","","",201],[10,"clone","std::collections::hash::set","",202],[10,"clone_from","","",202],[10,"new","","Create an empty HashSet.",202],[10,"with_capacity","","Create an empty HashSet with space for at least `n` elements in\nthe hash table.",202],[10,"with_hash_state","","Creates a new empty hash set which will use the given hasher to hash\nkeys.",202],[10,"with_capacity_and_hash_state","","Create an empty HashSet with space for at least `capacity`\nelements in the hash table, using `hasher` to hash the keys.",202],[10,"capacity","","Returns the number of elements the set can hold without reallocating.",202],[10,"reserve","","Reserves capacity for at least `additional` more elements to be inserted\nin the `HashSet`. The collection may reserve more space to avoid\nfrequent reallocations.",202],[10,"shrink_to_fit","","Shrinks the capacity of the set as much as possible. It will drop\ndown as much as possible while maintaining the internal rules\nand possibly leaving some space in accordance with the resize policy.",202],[10,"iter","","An iterator visiting all elements in arbitrary order.\nIterator element type is &'a T.",202],[10,"into_iter","","Creates a consuming iterator, that is, one that moves each value out\nof the set in arbitrary order. The set cannot be used after calling\nthis.",202],[10,"difference","","Visit the values representing the difference.",202],[10,"symmetric_difference","","Visit the values representing the symmetric difference.",202],[10,"intersection","","Visit the values representing the intersection.",202],[10,"union","","Visit the values representing the union.",202],[10,"len","","Return the number of elements in the set",202],[10,"is_empty","","Returns true if the set contains no elements",202],[10,"drain","","Clears the set, returning all elements in an iterator.",202],[10,"clear","","Clears the set, removing all values.",202],[10,"contains","","Returns `true` if the set contains a value.",202],[10,"is_disjoint","","Returns `true` if the set has no elements in common with `other`.\nThis is equivalent to checking for an empty intersection.",202],[10,"is_subset","","Returns `true` if the set is a subset of another.",202],[10,"is_superset","","Returns `true` if the set is a superset of another.",202],[10,"insert","","Adds a value to the set. Returns `true` if the value was not already\npresent in the set.",202],[10,"remove","","Removes a value from the set. Returns `true` if the value was\npresent in the set.",202],[10,"eq","","",202],[10,"ne","","",202],[10,"assert_receiver_is_total_eq","","",202],[10,"fmt","","",202],[10,"from_iter","","",202],[10,"extend","","",202],[10,"default","","",202],[10,"next","","",203],[10,"size_hint","","",203],[10,"size_hint","","",203],[10,"len","","",203],[10,"len","","",203],[10,"next","","",204],[10,"size_hint","","",204],[10,"size_hint","","",204],[10,"len","","",204],[10,"len","","",204],[10,"next","","",205],[10,"size_hint","","",205],[10,"size_hint","","",205],[10,"len","","",205],[10,"len","","",205],[10,"next","","",206],[10,"size_hint","","",206],[10,"size_hint","","",206],[10,"next","","",207],[10,"size_hint","","",207],[10,"size_hint","","",207],[10,"next","","",208],[10,"size_hint","","",208],[10,"size_hint","","",208],[10,"next","","",209],[10,"size_hint","","",209],[10,"size_hint","","",209],[10,"hasher","std::collections::hash::state","",210],[10,"clone","","",210],[10,"clone_from","","",210],[10,"default","","",210],[10,"default","collections::vec_map","",211],[10,"clone","","",211],[10,"clone_from","","",211],[10,"clone_from","","",211],[10,"hash","","",211],[10,"new","","Creates an empty `VecMap`.",211],[10,"with_capacity","","Creates an empty `VecMap` with space for at least `capacity`\nelements before resizing.",211],[10,"capacity","","Returns the number of elements the `VecMap` can hold without\nreallocating.",211],[10,"reserve_len","","Reserves capacity for the given `VecMap` to contain `len` distinct keys.\nIn the case of `VecMap` this means reallocations will not occur as long\nas all inserted keys are less than `len`.",211],[10,"reserve_len_exact","","Reserves the minimum capacity for the given `VecMap` to contain `len` distinct keys.\nIn the case of `VecMap` this means reallocations will not occur as long as all inserted\nkeys are less than `len`.",211],[10,"keys","","Returns an iterator visiting all keys in ascending order of the keys.\nThe iterator's element type is `uint`.",211],[10,"values","","Returns an iterator visiting all values in ascending order of the keys.\nThe iterator's element type is `&'r V`.",211],[10,"iter","","Returns an iterator visiting all key-value pairs in ascending order of the keys.\nThe iterator's element type is `(uint, &'r V)`.",211],[10,"iter_mut","","Returns an iterator visiting all key-value pairs in ascending order of the keys,\nwith mutable references to the values.\nThe iterator's element type is `(uint, &'r mut V)`.",211],[10,"into_iter","","Returns an iterator visiting all key-value pairs in ascending order of\nthe keys, consuming the original `VecMap`.\nThe iterator's element type is `(uint, &'r V)`.",211],[10,"drain","","Returns an iterator visiting all key-value pairs in ascending order of\nthe keys, emptying (but not consuming) the original `VecMap`.\nThe iterator's element type is `(uint, &'r V)`. Keeps the allocated memory for reuse.",211],[10,"len","","Return the number of elements in the map.",211],[10,"is_empty","","Return true if the map contains no elements.",211],[10,"clear","","Clears the map, removing all key-value pairs.",211],[10,"get","","Returns a reference to the value corresponding to the key.",211],[10,"contains_key","","Returns true if the map contains a value for the specified key.",211],[10,"get_mut","","Returns a mutable reference to the value corresponding to the key.",211],[10,"insert","","Inserts a key-value pair from the map. If the key already had a value\npresent in the map, that value is returned. Otherwise, `None` is returned.",211],[10,"remove","","Removes a key from the map, returning the value at the key if the key\nwas previously in the map.",211],[10,"eq","","",211],[10,"ne","","",211],[10,"assert_receiver_is_total_eq","","",211],[10,"partial_cmp","","",211],[10,"lt","","",211],[10,"le","","",211],[10,"gt","","",211],[10,"ge","","",211],[10,"cmp","","",211],[10,"fmt","","",211],[10,"from_iter","","",211],[10,"extend","","",211],[10,"index","","",211],[10,"index_mut","","",211],[10,"clone","","",212],[10,"clone_from","","",212],[10,"next","","",212],[10,"size_hint","","",212],[10,"size_hint","","",212],[10,"next_back","","",212],[10,"next","","",213],[10,"size_hint","","",213],[10,"size_hint","","",213],[10,"next_back","","",213],[10,"clone","","",214],[10,"clone_from","","",214],[10,"clone","","",215],[10,"clone_from","","",215],[10,"next","","",216],[10,"size_hint","","",216],[10,"size_hint","","",216],[10,"next_back","","",216],[10,"next","","",214],[10,"size_hint","","",214],[10,"size_hint","","",214],[10,"next_back","","",214],[10,"next","","",215],[10,"size_hint","","",215],[10,"size_hint","","",215],[10,"next_back","","",215],[10,"next","","",217],[10,"size_hint","","",217],[10,"size_hint","","",217],[10,"next_back","","",217],[10,"clone","collections::dlist","",218],[10,"clone_from","","",218],[10,"clone","","",219],[10,"clone_from","","",219],[10,"clone","","",220],[10,"clone_from","","",220],[10,"default","","",221],[10,"new","","Creates an empty `DList`.",221],[10,"append","","Moves all elements from `other` to the end of the list.",221],[10,"iter","","Provides a forward iterator.",221],[10,"iter_mut","","Provides a forward iterator with mutable references.",221],[10,"into_iter","","Consumes the list into an iterator yielding elements by value.",221],[10,"is_empty","","Returns `true` if the `DList` is empty.",221],[10,"len","","Returns the length of the `DList`.",221],[10,"clear","","Removes all elements from the `DList`.",221],[10,"front","","Provides a reference to the front element, or `None` if the list is\nempty.",221],[10,"front_mut","","Provides a mutable reference to the front element, or `None` if the list\nis empty.",221],[10,"back","","Provides a reference to the back element, or `None` if the list is\nempty.",221],[10,"back_mut","","Provides a mutable reference to the back element, or `None` if the list\nis empty.",221],[10,"push_front","","Adds an element first in the list.",221],[10,"pop_front","","Removes the first element and returns it, or `None` if the list is\nempty.",221],[10,"push_back","","Appends an element to the back of a list",221],[10,"pop_back","","Removes the last element from a list and returns it, or `None` if\nit is empty.",221],[10,"split_off","","Splits the list into two at the given index. Returns everything after the given index,\nincluding the index.",221],[10,"drop","","",221],[10,"next","","",218],[10,"size_hint","","",218],[10,"size_hint","","",218],[10,"next_back","","",218],[10,"len","","",218],[10,"next","","",222],[10,"size_hint","","",222],[10,"size_hint","","",222],[10,"next_back","","",222],[10,"len","","",222],[10,"insert_next","","Inserts `elt` just after the element most recently returned by `.next()`.\nThe inserted element does not appear in the iteration.",222],[10,"peek_next","","Provides a reference to the next element, without changing the iterator.",222],[10,"next","","",219],[10,"size_hint","","",219],[10,"size_hint","","",219],[10,"next_back","","",219],[10,"from_iter","","",221],[10,"extend","","",221],[10,"eq","","",221],[10,"ne","","",221],[10,"ne","","",221],[10,"assert_receiver_is_total_eq","","",221],[10,"partial_cmp","","",221],[10,"lt","","",221],[10,"le","","",221],[10,"gt","","",221],[10,"ge","","",221],[10,"cmp","","",221],[10,"clone","","",221],[10,"clone_from","","",221],[10,"fmt","","",221],[10,"hash","","",221],[10,"clone","collections::binary_heap","",223],[10,"clone_from","","",223],[10,"default","","",223],[10,"new","","Creates an empty `BinaryHeap` as a max-heap.",223],[10,"with_capacity","","Creates an empty `BinaryHeap` with a specific capacity.\nThis preallocates enough memory for `capacity` elements,\nso that the `BinaryHeap` does not have to be reallocated\nuntil it contains at least that many values.",223],[10,"from_vec","","Creates a `BinaryHeap` from a vector. This is sometimes called\n`heapifying` the vector.",223],[10,"iter","","Returns an iterator visiting all values in the underlying vector, in\narbitrary order.",223],[10,"into_iter","","Creates a consuming iterator, that is, one that moves each value out of\nthe binary heap in arbitrary order. The binary heap cannot be used\nafter calling this.",223],[10,"peek","","Returns the greatest item in the binary heap, or `None` if it is empty.",223],[10,"capacity","","Returns the number of elements the binary heap can hold without reallocating.",223],[10,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more elements to be inserted in the\ngiven `BinaryHeap`. Does nothing if the capacity is already sufficient.",223],[10,"reserve","","Reserves capacity for at least `additional` more elements to be inserted in the\n`BinaryHeap`. The collection may reserve more space to avoid frequent reallocations.",223],[10,"shrink_to_fit","","Discards as much additional capacity as possible.",223],[10,"pop","","Removes the greatest item from the binary heap and returns it, or `None` if it\nis empty.",223],[10,"push","","Pushes an item onto the binary heap.",223],[10,"push_pop","","Pushes an item onto the binary heap, then pops the greatest item off the queue in\nan optimized fashion.",223],[10,"replace","","Pops the greatest item off the binary heap, then pushes an item onto the queue in\nan optimized fashion. The push is done regardless of whether the binary heap\nwas empty.",223],[10,"into_vec","","Consumes the `BinaryHeap` and returns the underlying vector\nin arbitrary order.",223],[10,"into_sorted_vec","","Consumes the `BinaryHeap` and returns a vector in sorted\n(ascending) order.",223],[10,"len","","Returns the length of the binary heap.",223],[10,"is_empty","","Checks if the binary heap is empty.",223],[10,"drain","","Clears the binary heap, returning an iterator over the removed elements.",223],[10,"clear","","Drops all items from the binary heap.",223],[10,"clone","","",224],[10,"clone_from","","",224],[10,"next","","",224],[10,"size_hint","","",224],[10,"size_hint","","",224],[10,"next_back","","",224],[10,"len","","",224],[10,"next","","",225],[10,"size_hint","","",225],[10,"size_hint","","",225],[10,"next_back","","",225],[10,"len","","",225],[10,"next","","",226],[10,"size_hint","","",226],[10,"size_hint","","",226],[10,"next_back","","",226],[10,"len","","",226],[10,"from_iter","","",223],[10,"extend","","",223],[10,"clone","collections::ring_buf","",227],[10,"clone_from","","",227],[10,"drop","","",227],[10,"default","","",227],[10,"new","","Creates an empty `RingBuf`.",227],[10,"with_capacity","","Creates an empty `RingBuf` with space for at least `n` elements.",227],[10,"get","","Retrieves an element in the `RingBuf` by index.",227],[10,"get_mut","","Retrieves an element in the `RingBuf` mutably by index.",227],[10,"swap","","Swaps elements at indices `i` and `j`.",227],[10,"capacity","","Returns the number of elements the `RingBuf` can hold without\nreallocating.",227],[10,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more elements to be inserted in the\ngiven `RingBuf`. Does nothing if the capacity is already sufficient.",227],[10,"reserve","","Reserves capacity for at least `additional` more elements to be inserted in the given\n`Ringbuf`. The collection may reserve more space to avoid frequent reallocations.",227],[10,"shrink_to_fit","","Shrinks the capacity of the ringbuf as much as possible.",227],[10,"truncate","","Shorten a ringbuf, dropping excess elements from the back.",227],[10,"iter","","Returns a front-to-back iterator.",227],[10,"iter_mut","","Returns a front-to-back iterator that returns mutable references.",227],[10,"into_iter","","Consumes the list into an iterator yielding elements by value.",227],[10,"as_slices","","Returns a pair of slices which contain, in order, the contents of the\n`RingBuf`.",227],[10,"as_mut_slices","","Returns a pair of slices which contain, in order, the contents of the\n`RingBuf`.",227],[10,"len","","Returns the number of elements in the `RingBuf`.",227],[10,"is_empty","","Returns true if the buffer contains no elements",227],[10,"drain","","Creates a draining iterator that clears the `RingBuf` and iterates over\nthe removed items from start to end.",227],[10,"clear","","Clears the buffer, removing all values.",227],[10,"front","","Provides a reference to the front element, or `None` if the sequence is\nempty.",227],[10,"front_mut","","Provides a mutable reference to the front element, or `None` if the\nsequence is empty.",227],[10,"back","","Provides a reference to the back element, or `None` if the sequence is\nempty.",227],[10,"back_mut","","Provides a mutable reference to the back element, or `None` if the\nsequence is empty.",227],[10,"pop_front","","Removes the first element and returns it, or `None` if the sequence is\nempty.",227],[10,"push_front","","Inserts an element first in the sequence.",227],[10,"push_back","","Appends an element to the back of a buffer",227],[10,"pop_back","","Removes the last element from a buffer and returns it, or `None` if\nit is empty.",227],[10,"swap_back_remove","","Removes an element from anywhere in the ringbuf and returns it, replacing it with the last\nelement.",227],[10,"swap_front_remove","","Removes an element from anywhere in the ringbuf and returns it, replacing it with the first\nelement.",227],[10,"insert","","Inserts an element at position `i` within the ringbuf. Whichever\nend is closer to the insertion point will be moved to make room,\nand all the affected elements will be moved to new positions.",227],[10,"remove","","Removes and returns the element at position `i` from the ringbuf.\nWhichever end is closer to the removal point will be moved to make\nroom, and all the affected elements will be moved to new positions.\nReturns `None` if `i` is out of bounds.",227],[10,"resize","","Modifies the ringbuf in-place so that `len()` is equal to new_len,\neither by removing excess elements or by appending copies of a value to the back.",227],[10,"clone","","",228],[10,"clone_from","","",228],[10,"next","","",228],[10,"size_hint","","",228],[10,"size_hint","","",228],[10,"next_back","","",228],[10,"len","","",228],[10,"indexable","","",228],[10,"idx","","",228],[10,"next","","",229],[10,"size_hint","","",229],[10,"size_hint","","",229],[10,"next_back","","",229],[10,"len","","",229],[10,"next","","",230],[10,"size_hint","","",230],[10,"size_hint","","",230],[10,"next_back","","",230],[10,"len","","",230],[10,"drop","","",231],[10,"next","","",231],[10,"size_hint","","",231],[10,"size_hint","","",231],[10,"next_back","","",231],[10,"len","","",231],[10,"eq","","",227],[10,"ne","","",227],[10,"assert_receiver_is_total_eq","","",227],[10,"partial_cmp","","",227],[10,"lt","","",227],[10,"le","","",227],[10,"gt","","",227],[10,"ge","","",227],[10,"cmp","","",227],[10,"hash","","",227],[10,"index","","",227],[10,"index_mut","","",227],[10,"from_iter","","",227],[10,"extend","","",227],[10,"fmt","","",227],[10,"new","std::thread","Generate the base configuration for spawning a thread, from which\nconfiguration methods can be chained.",232],[10,"name","","Name the thread-to-be. Currently the name is used for identification\nonly in panic messages.",232],[10,"stack_size","","Set the size of the stack for the new thread.",232],[10,"stdout","","Redirect thread-local stdout.",232],[10,"stderr","","Redirect thread-local stderr.",232],[10,"spawn","","Spawn a new detached thread, and return a handle to it.",232],[10,"scoped","","Spawn a new child thread that must be joined within a given\nscope, and return a `JoinGuard`.",232],[10,"clone","","",233],[10,"clone_from","","",233],[10,"spawn","","Spawn a new detached thread, returning a handle to it.",233],[10,"scoped","","Spawn a new *scoped* thread, returning a `JoinGuard` for it.",233],[10,"current","","Gets a handle to the thread that invokes it.",233],[10,"yield_now","","Cooperatively give up a timeslice to the OS scheduler.",233],[10,"panicking","","Determines whether the current thread is panicking.",233],[10,"park","","Block unless or until the current thread's token is made available (may wake spuriously).",233],[10,"unpark","","Atomically makes the handle's token available if it is not already.",233],[10,"name","","Get the thread's name.",233],[10,"new","","",233],[10,"thread","","Extract a handle to the thread this guard will join on.",234],[10,"join","","Wait for the associated thread to finish, returning the result of the thread's\ncalculation.",234],[10,"detach","","Detaches the child thread, allowing it to outlive its parent.",234],[10,"drop","","",234],[10,"clone","std::sync::mpsc::blocking","",235],[10,"clone_from","","",235],[10,"signal","","",235],[10,"cast_to_uint","","Convert to an unsafe uint value. Useful for storing in a pipe's state\nflag.",235],[10,"cast_from_uint","","Convert from an unsafe uint value. Useful for retrieving a pipe's state\nflag.",235],[10,"wait","","",236],[10,"new","std::sync::mpsc::oneshot","",237],[10,"send","","",237],[10,"sent","","",237],[10,"recv","","",237],[10,"try_recv","","",237],[10,"upgrade","","",237],[10,"drop_chan","","",237],[10,"drop_port","","",237],[10,"can_recv","","",237],[10,"start_selection","","",237],[10,"abort_selection","","",237],[10,"drop","","",237],[10,"eq","std::sync::mpsc::select","",238],[10,"ne","","",238],[10,"ne","","",238],[10,"new","","Creates a new selection structure. This set is initially empty and\n`wait` will panic!() if called.",239],[10,"handle","","Creates a new handle into this receiver set for a new receiver. Note\nthat this does *not* add the receiver to the receiver set, for that you\nmust call the `add` method on the handle itself.",239],[10,"wait","","Waits for an event on this receiver set. The returned value is *not* an\nindex, but rather an id. This id can be queried against any active\n`Handle` structures (each one has an `id` method). The handle with\nthe matching `id` will have some sort of event available on it. The\nevent could either be that data is available or the corresponding\nchannel has been closed.",239],[10,"id","","Retrieve the id of this handle.",240],[10,"recv","","Block to receive a value on the underlying receiver, returning `Some` on\nsuccess or `None` if the channel disconnects. This function has the same\nsemantics as `Receiver.recv`",240],[10,"add","","Adds this handle to the receiver set that the handle was created from. This\nmethod can be called multiple times, but it has no effect if `add` was\ncalled previously.",240],[10,"remove","","Removes this handle from the `Select` set. This method is unsafe because\nit has no guarantee that the `Handle` was not moved since `add` was\ncalled.",240],[10,"drop","","",239],[10,"drop","","",240],[10,"next","","",241],[10,"size_hint","","",241],[10,"new","std::sync::mpsc::shared","",242],[10,"postinit_lock","","",242],[10,"inherit_blocker","","",242],[10,"send","","",242],[10,"recv","","",242],[10,"try_recv","","",242],[10,"clone_chan","","",242],[10,"drop_chan","","",242],[10,"drop_port","","",242],[10,"can_recv","","",242],[10,"start_selection","","",242],[10,"abort_selection","","",242],[10,"drop","","",242],[10,"new","std::sync::mpsc::stream","",243],[10,"send","","",243],[10,"upgrade","","",243],[10,"recv","","",243],[10,"try_recv","","",243],[10,"drop_chan","","",243],[10,"drop_port","","",243],[10,"can_recv","","",243],[10,"start_selection","","",243],[10,"abort_selection","","",243],[10,"drop","","",243],[10,"fmt","std::sync::mpsc::sync","",244],[10,"new","","",245],[10,"send","","",245],[10,"try_send","","",245],[10,"recv","","",245],[10,"try_recv","","",245],[10,"clone_chan","","",245],[10,"drop_chan","","",245],[10,"drop_port","","",245],[10,"can_recv","","",245],[10,"start_selection","","",245],[10,"abort_selection","","",245],[10,"drop","","",245],[10,"new","std::sync::mpsc::mpsc_queue","Creates a new queue that is safe to share among multiple producers and\none consumer.",246],[10,"push","","Pushes a new value onto this queue.",246],[10,"pop","","Pops some data from this queue.",246],[10,"drop","","",246],[10,"new","std::sync::mpsc::spsc_queue","Creates a new queue.",247],[10,"push","","Pushes a new value onto this queue. Note that to use this function\nsafely, it must be externally guaranteed that there is only one pusher.",247],[10,"pop","","Attempts to pop a value from this queue. Remember that to use this type\nsafely you must ensure that there is only one popper at a time.",247],[10,"peek","","Attempts to peek at the head of the queue, returning `None` if the queue\nhas no data currently",247],[10,"drop","","",247],[10,"assert_receiver_is_total_eq","std::sync::mpsc","",248],[10,"eq","","",248],[10,"ne","","",248],[10,"ne","","",248],[10,"clone","","",249],[10,"clone_from","","",249],[10,"assert_receiver_is_total_eq","","",249],[10,"eq","","",249],[10,"ne","","",249],[10,"ne","","",249],[10,"clone","","",250],[10,"clone_from","","",250],[10,"eq","","",250],[10,"ne","","",250],[10,"ne","","",250],[10,"clone","","",251],[10,"clone_from","","",251],[10,"eq","","",251],[10,"ne","","",251],[10,"ne","","",251],[10,"send","","Attempts to send a value on this channel, returning it back if it could\nnot be sent.",252],[10,"clone","","",252],[10,"clone_from","","",252],[10,"drop","","",252],[10,"send","","Sends a value on this synchronous channel.",253],[10,"try_send","","Attempts to send a value on this channel without blocking.",253],[10,"clone","","",253],[10,"clone_from","","",253],[10,"drop","","",253],[10,"try_recv","","Attempts to return a pending value on this receiver without blocking",254],[10,"recv","","Attempt to wait for a value on this receiver, returning an error if the\ncorresponding channel has hung up.",254],[10,"iter","","Returns an iterator that will block waiting for messages, but never\n`panic!`. It will return `None` when the channel has hung up.",254],[10,"next","","",255],[10,"size_hint","","",255],[10,"drop","","",254],[10,"fmt","","",248],[10,"fmt","","",251],[10,"fmt","","",249],[10,"fmt","","",250],[10,"new","std::sync::barrier","Create a new barrier that can block a given number of threads.",256],[10,"wait","","Block the current thread until all threads has rendezvoused here.",256],[10,"is_leader","","Return whether this thread from `wait` is the \"leader thread\".",257],[10,"new","std::sync::condvar","Creates a new condition variable which is ready to be waited on and\nnotified.",258],[10,"wait","","Block the current thread until this condition variable receives a\nnotification.",258],[10,"wait_timeout","","Wait on this condition variable for a notification, timing out after a\nspecified duration.",258],[10,"wait_timeout_with","","Wait on this condition variable for a notification, timing out after a\nspecified duration.",258],[10,"notify_one","","Wake up one blocked thread on this condvar.",258],[10,"notify_all","","Wake up all blocked threads on this condvar.",258],[10,"drop","","",258],[10,"wait","","Block the current thread until this condition variable receives a\nnotification.",259],[10,"wait_timeout","","Wait on this condition variable for a notification, timing out after a\nspecified duration.",259],[10,"wait_timeout_with","","Wait on this condition variable for a notification, timing out after a\nspecified duration.",259],[10,"notify_one","","Wake up one blocked thread on this condvar.",259],[10,"notify_all","","Wake up all blocked threads on this condvar.",259],[10,"destroy","","Deallocate all resources associated with this static condvar.",259],[10,"get","std::sync::future","Get the value of the future.",260],[10,"into_inner","","Gets the value from this future, forcing evaluation.",260],[10,"get_ref","","Executes the future's closure and then returns a reference\nto the result.  The reference lasts as long as\nthe future.",260],[10,"from_value","","Create a future from a value.",260],[10,"from_fn","","Create a future from a function.",260],[10,"from_receiver","","Create a future from a port",260],[10,"spawn","","Create a future from a unique closure.",260],[10,"new","std::sync::mutex","Creates a new mutex in an unlocked state ready for use.",261],[10,"lock","","Acquires a mutex, blocking the current task until it is able to do so.",261],[10,"try_lock","","Attempts to acquire this lock.",261],[10,"drop","","",261],[10,"lock","","Acquires this lock, see `Mutex::lock`",262],[10,"try_lock","","Attempts to grab this lock, see `Mutex::try_lock`",262],[10,"destroy","","Deallocates resources associated with this static mutex.",262],[10,"deref","","",263],[10,"deref_mut","","",263],[10,"drop","","",263],[10,"call_once","std::sync::once","Perform an initialization routine once and only once. The given closure\nwill be executed if this is the first time `call_once` has been called,\nand otherwise the routine will *not* be invoked.",264],[10,"borrow","std::sync::poison","",265],[10,"done","","",265],[10,"get","","",265],[10,"fmt","","",266],[10,"description","","",266],[10,"detail","","",266],[10,"cause","","",266],[10,"into_guard","","Consumes this error indicating that a lock is poisoned, returning the\nunderlying guard to allow access regardless.",266],[10,"into_inner","","Consumes this error indicating that a lock is poisoned, returning the\nunderlying guard to allow access regardless.",266],[10,"get_ref","","Reaches into this error indicating that a lock is poisoned, returning a\nreference to the underlying guard to allow access regardless.",266],[10,"get_mut","","Reaches into this error indicating that a lock is poisoned, returning a\nmutable reference to the underlying guard to allow access regardless.",266],[10,"from_error","","",267],[10,"fmt","","",267],[10,"description","","",267],[10,"cause","","",267],[10,"detail","","",267],[10,"cause","","",267],[10,"new","std::sync::rwlock","Creates a new instance of an RwLock which is unlocked and read to go.",268],[10,"read","","Locks this rwlock with shared read access, blocking the current thread\nuntil it can be acquired.",268],[10,"try_read","","Attempt to acquire this lock with shared read access.",268],[10,"write","","Lock this rwlock with exclusive write access, blocking the current\nthread until it can be acquired.",268],[10,"try_write","","Attempt to lock this rwlock with exclusive write access.",268],[10,"drop","","",268],[10,"read","","Locks this rwlock with shared read access, blocking the current thread\nuntil it can be acquired.",269],[10,"try_read","","Attempt to acquire this lock with shared read access.",269],[10,"write","","Lock this rwlock with exclusive write access, blocking the current\nthread until it can be acquired.",269],[10,"try_write","","Attempt to lock this rwlock with exclusive write access.",269],[10,"destroy","","Deallocate all resources associated with this static lock.",269],[10,"deref","","",270],[10,"deref","","",271],[10,"deref_mut","","",271],[10,"drop","","",270],[10,"drop","","",271],[10,"new","std::sync::semaphore","Creates a new semaphore with the initial count specified.",272],[10,"acquire","","Acquires a resource of this semaphore, blocking the current thread until\nit can do so.",272],[10,"release","","Release a resource from this semaphore.",272],[10,"access","","Acquires a resource of this semaphore, returning an RAII guard to\nrelease the semaphore when dropped.",272],[10,"drop","","",273],[10,"drop","std::sync::task_pool","",274],[10,"new","","Spawns a new thread pool with `threads` threads.",275],[10,"execute","","Executes the function `job` on a thread in the pool.",275],[10,"new","core::atomic","Creates a new `AtomicBool`.",276],[10,"load","","Loads a value from the bool.",276],[10,"store","","Stores a value into the bool.",276],[10,"swap","","Stores a value into the bool, returning the old value.",276],[10,"compare_and_swap","","Stores a value into the bool if the current value is the same as the expected value.",276],[10,"fetch_and","","Logical \"and\" with a boolean value.",276],[10,"fetch_nand","","Logical \"nand\" with a boolean value.",276],[10,"fetch_or","","Logical \"or\" with a boolean value.",276],[10,"fetch_xor","","Logical \"xor\" with a boolean value.",276],[10,"new","","Creates a new `AtomicIsize`.",277],[10,"load","","Loads a value from the isize.",277],[10,"store","","Stores a value into the isize.",277],[10,"swap","","Stores a value into the isize, returning the old value.",277],[10,"compare_and_swap","","Stores a value into the isize if the current value is the same as the expected value.",277],[10,"fetch_add","","Add an isize to the current value, returning the previous value.",277],[10,"fetch_sub","","Subtract an isize from the current value, returning the previous value.",277],[10,"fetch_and","","Bitwise and with the current isize, returning the previous value.",277],[10,"fetch_or","","Bitwise or with the current isize, returning the previous value.",277],[10,"fetch_xor","","Bitwise xor with the current isize, returning the previous value.",277],[10,"new","","Creates a new `AtomicUsize`.",278],[10,"load","","Loads a value from the usize.",278],[10,"store","","Stores a value into the usize.",278],[10,"swap","","Stores a value into the usize, returning the old value.",278],[10,"compare_and_swap","","Stores a value into the usize if the current value is the same as the expected value.",278],[10,"fetch_add","","Add to the current usize, returning the previous value.",278],[10,"fetch_sub","","Subtract from the current usize, returning the previous value.",278],[10,"fetch_and","","Bitwise and with the current usize, returning the previous value.",278],[10,"fetch_or","","Bitwise or with the current usize, returning the previous value.",278],[10,"fetch_xor","","Bitwise xor with the current usize, returning the previous value.",278],[10,"new","","Creates a new `AtomicPtr`.",279],[10,"load","","Loads a value from the pointer.",279],[10,"store","","Stores a value into the pointer.",279],[10,"swap","","Stores a value into the pointer, returning the old value.",279],[10,"compare_and_swap","","Stores a value into the pointer if the current value is the same as the expected value.",279],[10,"new","","",280],[10,"load","","",280],[10,"store","","",280],[10,"swap","","",280],[10,"compare_and_swap","","",280],[10,"fetch_add","","",280],[10,"fetch_sub","","",280],[10,"fetch_and","","",280],[10,"fetch_or","","",280],[10,"fetch_xor","","",280],[10,"new","","",281],[10,"load","","",281],[10,"store","","",281],[10,"swap","","",281],[10,"compare_and_swap","","",281],[10,"fetch_add","","",281],[10,"fetch_sub","","",281],[10,"fetch_and","","",281],[10,"fetch_or","","",281],[10,"fetch_xor","","",281],[10,"new","std::sys::condvar","",282],[10,"notify_one","","",282],[10,"notify_all","","",282],[10,"wait","","",282],[10,"wait_timeout","","",282],[10,"destroy","","",282],[10,"new","std::sys::fs","",283],[10,"read","","",283],[10,"write","","",283],[10,"fd","","",283],[10,"seek","","",283],[10,"tell","","",283],[10,"fsync","","",283],[10,"datasync","","",283],[10,"truncate","","",283],[10,"fstat","","",283],[10,"unwrap","","Extract the actual filedescriptor without closing it.",283],[10,"drop","","",283],[10,"new","std::sys::mutex","",284],[10,"lock","","",284],[10,"unlock","","",284],[10,"try_lock","","",284],[10,"destroy","","",284],[10,"drop","std::sys::pipe","",285],[10,"connect","","",286],[10,"fd","","",286],[10,"read","","",286],[10,"write","","",286],[10,"close_write","","",286],[10,"close_read","","",286],[10,"set_timeout","","",286],[10,"set_read_timeout","","",286],[10,"set_write_timeout","","",286],[10,"clone","","",286],[10,"clone_from","","",286],[10,"bind","","",287],[10,"fd","","",287],[10,"listen","","",287],[10,"fd","","",288],[10,"accept","","",288],[10,"set_timeout","","",288],[10,"close_accept","","",288],[10,"clone","","",288],[10,"clone_from","","",288],[10,"drop","","",287],[10,"id","std::sys::process","",289],[10,"kill","","",289],[10,"killpid","","",289],[10,"spawn","","",289],[10,"wait","","",289],[10,"try_wait","","",289],[10,"new","std::sys::rwlock","",290],[10,"read","","",290],[10,"try_read","","",290],[10,"write","","",290],[10,"try_write","","",290],[10,"read_unlock","","",290],[10,"write_unlock","","",290],[10,"destroy","","",290],[10,"new","std::sys::stack_overflow","",291],[10,"drop","","",291],[10,"bind","std::sys::tcp","",292],[10,"fd","","",292],[10,"listen","","",292],[10,"socket_name","","",292],[10,"fd","","",293],[10,"accept","","",293],[10,"socket_name","","",293],[10,"set_timeout","","",293],[10,"close_accept","","",293],[10,"clone","","",293],[10,"clone_from","","",293],[10,"now","std::sys::time::inner","",294],[10,"ns","","",294],[10,"new","std::sys::timer","",295],[10,"sleep","","",295],[10,"oneshot","","",295],[10,"period","","",295],[10,"drop","","",295],[10,"new","std::sys::tty","",296],[10,"read","","",296],[10,"write","","",296],[10,"set_raw","","",296],[10,"get_winsize","","",296],[10,"isatty","","",296],[10,"new","std::sys_common::condvar","Creates a new condition variable for use.",297],[10,"notify_one","","Signal one waiter on this condition variable to wake up.",297],[10,"notify_all","","Awaken all current waiters on this condition variable.",297],[10,"wait","","Wait for a signal on the specified mutex.",297],[10,"wait_timeout","","Wait for a signal on the specified mutex with a timeout duration\nspecified by `dur` (a relative time into the future).",297],[10,"destroy","","Deallocate all resources associated with this condition variable.",297],[10,"boot","std::sys_common::helper_thread","Lazily boots a helper thread, becoming a no-op if the helper has already\nbeen spawned.",298],[10,"send","","Sends a message to a spawned worker thread.",298],[10,"new","std::sys_common::mutex","Creates a newly initialized mutex.",299],[10,"lock","","Lock the mutex blocking the current thread until it is available.",299],[10,"try_lock","","Attempt to lock the mutex without blocking, returning whether it was\nsuccessfully acquired or not.",299],[10,"unlock","","Unlock the mutex.",299],[10,"destroy","","Deallocate all resources associated with this mutex.",299],[10,"fmt","std::sys_common::net","",300],[10,"drop","","",301],[10,"drop","","",302],[10,"connect","","",303],[10,"new","","",303],[10,"fd","","",303],[10,"set_nodelay","","",303],[10,"set_keepalive","","",303],[10,"read","","",303],[10,"write","","",303],[10,"peer_name","","",303],[10,"close_write","","",303],[10,"close_read","","",303],[10,"set_timeout","","",303],[10,"set_read_timeout","","",303],[10,"set_write_timeout","","",303],[10,"socket_name","","",303],[10,"clone","","",303],[10,"clone_from","","",303],[10,"bind","","",304],[10,"fd","","",304],[10,"set_broadcast","","",304],[10,"set_multicast_loop","","",304],[10,"set_membership","","",304],[10,"socket_name","","",304],[10,"recv_from","","",304],[10,"send_to","","",304],[10,"join_multicast","","",304],[10,"leave_multicast","","",304],[10,"multicast_time_to_live","","",304],[10,"time_to_live","","",304],[10,"set_timeout","","",304],[10,"set_read_timeout","","",304],[10,"set_write_timeout","","",304],[10,"clone","","",304],[10,"clone_from","","",304],[10,"new","std::sys_common::rwlock","Creates a new instance of an RWLock.",305],[10,"read","","Acquire shared access to the underlying lock, blocking the current\nthread to do so.",305],[10,"try_read","","Attempt to acquire shared access to this lock, returning whether it\nsucceeded or not.",305],[10,"write","","Acquire write access to the underlying lock, blocking the current thread\nto do so.",305],[10,"try_write","","Attempt to acquire exclusive access to this lock, returning whether it\nsucceeded or not.",305],[10,"read_unlock","","Unlock previously acquired shared access to this lock.",305],[10,"write_unlock","","Unlock previously acquired exclusive access to this lock.",305],[10,"destroy","","Destroy OS-related resources with this RWLock.",305],[10,"get","std::sys_common::thread_local","Gets the value associated with this TLS key",306],[10,"set","","Sets this TLS key to a new value.",306],[10,"destroy","","Deallocates this OS TLS key.",306],[10,"new","","Create a new managed OS TLS key.",307],[10,"get","","See StaticKey::get",307],[10,"set","","See StaticKey::set",307],[10,"drop","","",307],[10,"write_bytes","std::rt::util","",308],[10,"write_str","","",308],[10,"write_fmt","","",308],[10,"write","","",308],[10,"flush","","",308],[10,"write_fmt","","",308],[10,"write_str","","",308],[10,"write_line","","",308],[10,"write_char","","",308],[10,"write_int","","",308],[10,"write_uint","","",308],[10,"write_le_uint","","",308],[10,"write_le_int","","",308],[10,"write_be_uint","","",308],[10,"write_be_int","","",308],[10,"write_be_u64","","",308],[10,"write_be_u32","","",308],[10,"write_be_u16","","",308],[10,"write_be_i64","","",308],[10,"write_be_i32","","",308],[10,"write_be_i16","","",308],[10,"write_be_f64","","",308],[10,"write_be_f32","","",308],[10,"write_le_u64","","",308],[10,"write_le_u32","","",308],[10,"write_le_u16","","",308],[10,"write_le_i64","","",308],[10,"write_le_i32","","",308],[10,"write_le_i16","","",308],[10,"write_le_f64","","",308],[10,"write_le_f32","","",308],[10,"write_u8","","",308],[10,"write_i8","","",308],[10,"new","alloc::rc","Constructs a new `Rc<T>`.",309],[10,"downgrade","","Downgrades the `Rc<T>` to a `Weak<T>` reference.",309],[10,"make_unique","","Make a mutable reference from the given `Rc<T>`.",309],[10,"deref","","",309],[10,"drop","","Drops the `Rc<T>`.",309],[10,"clone","","Makes a clone of the `Rc<T>`.",309],[10,"clone_from","","",309],[10,"default","","Creates a new `Rc<T>`, with the `Default` value for `T`.",309],[10,"eq","","Equality for two `Rc<T>`s.",309],[10,"ne","","Inequality for two `Rc<T>`s.",309],[10,"ne","","",309],[10,"assert_receiver_is_total_eq","","",309],[10,"partial_cmp","","Partial comparison for two `Rc<T>`s.",309],[10,"lt","","Less-than comparison for two `Rc<T>`s.",309],[10,"le","","'Less-than or equal to' comparison for two `Rc<T>`s.",309],[10,"gt","","Greater-than comparison for two `Rc<T>`s.",309],[10,"ge","","'Greater-than or equal to' comparison for two `Rc<T>`s.",309],[10,"lt","","",309],[10,"le","","",309],[10,"gt","","",309],[10,"ge","","",309],[10,"cmp","","Comparison for two `Rc<T>`s.",309],[10,"hash","","",309],[10,"fmt","","",309],[10,"fmt","","",309],[10,"upgrade","","Upgrades a weak reference to a strong reference.",310],[10,"drop","","Drops the `Weak<T>`.",310],[10,"clone","","Makes a clone of the `Weak<T>`.",310],[10,"clone_from","","",310],[10,"fmt","","",310],[10,"clone","collections::slice","",311],[10,"clone_from","","",311],[10,"new","","Creates an `ElementSwaps` iterator for a sequence of `length` elements.",311],[10,"clone","","",312],[10,"clone_from","","",312],[10,"clone","","",313],[10,"clone_from","","",313],[10,"next","","",311],[10,"size_hint","","",311],[10,"size_hint","","",311],[10,"next","","",314],[10,"size_hint","","",314],[10,"size_hint","","",314],[10,"len","core::iter","",315],[10,"len","","",316],[10,"len","","",317],[10,"len","","",318],[10,"len","","",319],[10,"clone","","",317],[10,"clone_from","","",317],[10,"next","","",317],[10,"size_hint","","",317],[10,"size_hint","","",317],[10,"next_back","","",317],[10,"indexable","","",317],[10,"idx","","",317],[10,"next","","",320],[10,"size_hint","","",320],[10,"size_hint","","",320],[10,"next_back","","",320],[10,"fmt","","",321],[10,"eq","","",321],[10,"ne","","",321],[10,"ne","","",321],[10,"clone","","",321],[10,"clone_from","","",321],[10,"into_option","","`into_option` creates an `Option` of type `(T,T)`. The returned `Option` has variant\n`None` if and only if the `MinMaxResult` has variant `NoElements`. Otherwise variant\n`Some(x,y)` is returned where `x <= y`. If `MinMaxResult` has variant `OneElement(x)`,\nperforming this operation will make one clone of `x`.",321],[10,"clone","","",322],[10,"clone_from","","",322],[10,"next","","",322],[10,"size_hint","","",322],[10,"size_hint","","",322],[10,"next_back","","",322],[10,"len","","",322],[10,"clone","","",323],[10,"clone_from","","",323],[10,"next","","",323],[10,"size_hint","","",323],[10,"size_hint","","",323],[10,"indexable","","",323],[10,"idx","","",323],[10,"clone","","",324],[10,"clone_from","","",324],[10,"next","","",324],[10,"size_hint","","",324],[10,"size_hint","","",324],[10,"next_back","","",324],[10,"indexable","","",324],[10,"idx","","",324],[10,"clone","","",319],[10,"clone_from","","",319],[10,"next","","",319],[10,"size_hint","","",319],[10,"size_hint","","",319],[10,"next_back","","",319],[10,"indexable","","",319],[10,"idx","","",319],[10,"clone","","",318],[10,"clone_from","","",318],[10,"next","","",318],[10,"size_hint","","",318],[10,"size_hint","","",318],[10,"next_back","","",318],[10,"indexable","","",318],[10,"idx","","",318],[10,"clone","","",325],[10,"clone_from","","",325],[10,"next","","",325],[10,"size_hint","","",325],[10,"size_hint","","",325],[10,"next_back","","",325],[10,"clone","","",326],[10,"clone_from","","",326],[10,"next","","",326],[10,"size_hint","","",326],[10,"size_hint","","",326],[10,"next_back","","",326],[10,"clone","","",315],[10,"clone_from","","",315],[10,"next","","",315],[10,"size_hint","","",315],[10,"size_hint","","",315],[10,"next_back","","",315],[10,"indexable","","",315],[10,"idx","","",315],[10,"next","","",327],[10,"size_hint","","",327],[10,"size_hint","","",327],[10,"peek","","Return a reference to the next element of the iterator with out advancing it,\nor None if the iterator is exhausted.",327],[10,"is_empty","","Check whether peekable iterator is empty or not.",327],[10,"clone","","",328],[10,"clone_from","","",328],[10,"next","","",328],[10,"size_hint","","",328],[10,"size_hint","","",328],[10,"clone","","",329],[10,"clone_from","","",329],[10,"next","","",329],[10,"size_hint","","",329],[10,"size_hint","","",329],[10,"clone","","",330],[10,"clone_from","","",330],[10,"next","","",330],[10,"size_hint","","",330],[10,"size_hint","","",330],[10,"indexable","","",330],[10,"idx","","",330],[10,"clone","","",331],[10,"clone_from","","",331],[10,"next","","",331],[10,"size_hint","","",331],[10,"size_hint","","",331],[10,"indexable","","",331],[10,"idx","","",331],[10,"clone","","",332],[10,"clone_from","","",332],[10,"next","","",332],[10,"size_hint","","",332],[10,"size_hint","","",332],[10,"clone","","",333],[10,"clone_from","","",333],[10,"next","","",333],[10,"size_hint","","",333],[10,"size_hint","","",333],[10,"next_back","","",333],[10,"clone","","",334],[10,"clone_from","","",334],[10,"next","","",334],[10,"size_hint","","",334],[10,"size_hint","","",334],[10,"next_back","","",334],[10,"indexable","","",334],[10,"idx","","",334],[10,"reset_fuse","","Resets the fuse such that the next call to .next() or .next_back() will\ncall the underlying iterator again even if it previously returned None.",334],[10,"clone","","",316],[10,"clone_from","","",316],[10,"next","","",316],[10,"size_hint","","",316],[10,"size_hint","","",316],[10,"next_back","","",316],[10,"indexable","","",316],[10,"idx","","",316],[10,"clone","","",335],[10,"clone_from","","",335],[10,"new","","Creates a new iterator with the specified closure as the \"iterator\nfunction\" and an initial state to eventually pass to the closure",335],[10,"next","","",335],[10,"size_hint","","",335],[10,"size_hint","","",335],[10,"clone","","",336],[10,"clone_from","","",336],[10,"next","","",336],[10,"size_hint","","",336],[10,"size_hint","","",336],[10,"clone","","",337],[10,"clone_from","","",337],[10,"next","","",337],[10,"size_hint","","",337],[10,"size_hint","","",337],[10,"next_back","","",337],[10,"clone","","",338],[10,"clone_from","","",338],[10,"next","","",338],[10,"size_hint","","",338],[10,"size_hint","","",338],[10,"next_back","","",338],[10,"clone","","",339],[10,"clone_from","","",339],[10,"next","","",339],[10,"size_hint","","",339],[10,"clone","","",340],[10,"clone_from","","",340],[10,"next","","",340],[10,"size_hint","","",340],[10,"clone","","",341],[10,"clone_from","","",341],[10,"next","","",341],[10,"size_hint","","",341],[10,"size_hint","","",341],[10,"next_back","","",341],[10,"indexable","","",341],[10,"idx","","",341],[10,"new","collections::vec","Constructs a new, empty `Vec<T>`.",73],[10,"with_capacity","","Constructs a new, empty `Vec<T>` with the specified capacity.",73],[10,"from_raw_parts","","Creates a `Vec<T>` directly from the raw components of another vector.",73],[10,"from_raw_buf","","Creates a vector by copying the elements from a raw pointer.",73],[10,"capacity","","Returns the number of elements the vector can hold without\nreallocating.",73],[10,"reserve","","Reserves capacity for at least `additional` more elements to be inserted in the given\n`Vec<T>`. The collection may reserve more space to avoid frequent reallocations.",73],[10,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more elements to\nbe inserted in the given `Vec<T>`. Does nothing if the capacity is already\nsufficient.",73],[10,"shrink_to_fit","","Shrinks the capacity of the vector as much as possible.",73],[10,"into_boxed_slice","","Convert the vector into Box<[T]>.",73],[10,"truncate","","Shorten a vector, dropping excess elements.",73],[10,"as_mut_slice","","Returns a mutable slice of the elements of `self`.",73],[10,"into_iter","","Creates a consuming iterator, that is, one that moves each value out of\nthe vector (from start to end). The vector cannot be used after calling\nthis.",73],[10,"set_len","","Sets the length of a vector.",73],[10,"swap_remove","","Removes an element from anywhere in the vector and return it, replacing\nit with the last element.",73],[10,"insert","","Inserts an element at position `index` within the vector, shifting all\nelements after position `i` one position to the right.",73],[10,"remove","","Removes and returns the element at position `index` within the vector,\nshifting all elements after position `index` one position to the left.",73],[10,"retain","","Retains only the elements specified by the predicate.",73],[10,"push","","Appends an element to the back of a collection.",73],[10,"pop","","Removes the last element from a vector and returns it, or `None` if it is empty.",73],[10,"append","","Moves all the elements of `other` into `Self`, leaving `other` empty.",73],[10,"drain","","Creates a draining iterator that clears the `Vec` and iterates over\nthe removed items from start to end.",73],[10,"clear","","Clears the vector, removing all values.",73],[10,"len","","Returns the number of elements in the vector.",73],[10,"is_empty","","Returns `true` if the vector contains no elements.",73],[10,"map_in_place","","Converts a `Vec<T>` to a `Vec<U>` where `T` and `U` have the same\nsize and in case they are not zero-sized the same minimal alignment.",73],[10,"resize","","Resizes the `Vec` in-place so that `len()` is equal to `new_len`.",73],[10,"push_all","","Appends all elements in a slice to the `Vec`.",73],[10,"dedup","","Removes consecutive repeated elements in the vector.",73],[10,"clone","","",73],[10,"clone_from","","",73],[10,"clone_from","","",73],[10,"hash","","",73],[10,"index","","",73],[10,"index_mut","","",73],[10,"index","","",73],[10,"index","","",73],[10,"index","","",73],[10,"index","","",73],[10,"index_mut","","",73],[10,"index_mut","","",73],[10,"index_mut","","",73],[10,"index_mut","","",73],[10,"deref","","",73],[10,"deref_mut","","",73],[10,"from_iter","","",73],[10,"extend","","",73],[10,"eq","","",73],[10,"ne","","",73],[10,"ne","","",73],[10,"eq","","",73],[10,"ne","","",73],[10,"ne","","",73],[10,"eq","","",73],[10,"ne","","",73],[10,"ne","","",73],[10,"eq","core::borrow","",342],[10,"ne","","",342],[10,"ne","","",342],[10,"eq","collections::vec","",73],[10,"ne","","",73],[10,"ne","","",73],[10,"eq","core::borrow","",342],[10,"ne","","",342],[10,"ne","","",342],[10,"eq","","",342],[10,"ne","","",342],[10,"ne","","",342],[10,"partial_cmp","collections::vec","",73],[10,"lt","","",73],[10,"le","","",73],[10,"gt","","",73],[10,"ge","","",73],[10,"assert_receiver_is_total_eq","","",73],[10,"cmp","","",73],[10,"as_slice","","Returns a slice into `self`.",73],[10,"add","","",73],[10,"drop","","",73],[10,"default","","",73],[10,"fmt","","",73],[10,"write_str","","",73],[10,"write_fmt","","",73],[10,"from_iter","core::borrow","",342],[10,"into_cow","collections::vec","",73],[10,"into_inner","","Drops all items that have not yet been moved and returns the empty vector.",343],[10,"next","","",343],[10,"size_hint","","",343],[10,"size_hint","","",343],[10,"next_back","","",343],[10,"len","","",343],[10,"drop","","",343],[10,"next","","",344],[10,"size_hint","","",344],[10,"size_hint","","",344],[10,"next_back","","",344],[10,"len","","",344],[10,"drop","","",344],[10,"deref","","",345],[10,"drop","","",345],[10,"drop","","",346],[10,"drop","","",347],[10,"hash","core::option","",348],[10,"fmt","","",348],[10,"cmp","","",348],[10,"assert_receiver_is_total_eq","","",348],[10,"partial_cmp","","",348],[10,"lt","","",348],[10,"le","","",348],[10,"gt","","",348],[10,"ge","","",348],[10,"lt","","",348],[10,"le","","",348],[10,"gt","","",348],[10,"ge","","",348],[10,"eq","","",348],[10,"ne","","",348],[10,"ne","","",348],[10,"clone","","",348],[10,"clone_from","","",348],[10,"is_some","","Returns `true` if the option is a `Some` value",348],[10,"is_none","","Returns `true` if the option is a `None` value",348],[10,"as_ref","","Convert from `Option<T>` to `Option<&T>`",348],[10,"as_mut","","Convert from `Option<T>` to `Option<&mut T>`",348],[10,"as_mut_slice","","Convert from `Option<T>` to `&mut [T]` (without copying)",348],[10,"expect","","Unwraps an option, yielding the content of a `Some`",348],[10,"unwrap","","Returns the inner `T` of a `Some(T)`.",348],[10,"unwrap_or","","Returns the contained value or a default.",348],[10,"unwrap_or_else","","Returns the contained value or computes it from a closure.",348],[10,"map","","Maps an `Option<T>` to `Option<U>` by applying a function to a contained value",348],[10,"map_or","","Applies a function to the contained value or returns a default.",348],[10,"map_or_else","","Applies a function to the contained value or computes a default.",348],[10,"ok_or","","Transforms the `Option<T>` into a `Result<T, E>`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err)`.",348],[10,"ok_or_else","","Transforms the `Option<T>` into a `Result<T, E>`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err())`.",348],[10,"iter","","Returns an iterator over the possibly contained value.",348],[10,"iter_mut","","Returns a mutable iterator over the possibly contained value.",348],[10,"into_iter","","Returns a consuming iterator over the possibly contained value.",348],[10,"and","","Returns `None` if the option is `None`, otherwise returns `optb`.",348],[10,"and_then","","Returns `None` if the option is `None`, otherwise calls `f` with the\nwrapped value and returns the result.",348],[10,"or","","Returns the option if it contains a value, otherwise returns `optb`.",348],[10,"or_else","","Returns the option if it contains a value, otherwise calls `f` and\nreturns the result.",348],[10,"take","","Takes the value out of the option, leaving a `None` in its place.",348],[10,"cloned","","Maps an Option<D> to an Option<T> by dereffing and cloning the contents of the Option.\nUseful for converting an Option<&T> to an Option<T>.",348],[10,"unwrap_or_default","","Returns the contained value or a default",348],[10,"as_slice","","Convert from `Option<T>` to `&[T]` (without copying)",348],[10,"default","","",348],[10,"clone","","",349],[10,"clone_from","","",349],[10,"next","","",349],[10,"size_hint","","",349],[10,"size_hint","","",349],[10,"next_back","","",349],[10,"len","","",349],[10,"next","","",350],[10,"size_hint","","",350],[10,"size_hint","","",350],[10,"next_back","","",350],[10,"len","","",350],[10,"clone","","",350],[10,"clone_from","","",350],[10,"next","","",351],[10,"size_hint","","",351],[10,"size_hint","","",351],[10,"next_back","","",351],[10,"len","","",351],[10,"next","","",352],[10,"size_hint","","",352],[10,"size_hint","","",352],[10,"next_back","","",352],[10,"len","","",352],[10,"from_iter","","Takes each element in the `Iterator`: if it is `None`, no further\nelements are taken, and the `None` is returned. Should no `None` occur, a\ncontainer with the values of each `Option` is returned.",348],[10,"new","core::hash::sip","Creates a new `SipHasher` with the two initial keys set to 0.",353],[10,"new_with_keys","","Creates a `SipHasher` that is keyed off the provided keys.",353],[10,"result","","Returns the computed hash.",353],[10,"write","","",353],[10,"reset","","",353],[10,"finish","","",353],[10,"clone","","",353],[10,"clone_from","","",353],[10,"default","","",353],[10,"hash","core::borrow","",342],[10,"cmp","collections::string","",27],[10,"assert_receiver_is_total_eq","","",27],[10,"partial_cmp","","",27],[10,"lt","","",27],[10,"le","","",27],[10,"gt","","",27],[10,"ge","","",27],[10,"lt","","",27],[10,"le","","",27],[10,"gt","","",27],[10,"ge","","",27],[10,"clone","","",27],[10,"clone_from","","",27],[10,"new","","Creates a new string buffer initialized with the empty string.",27],[10,"with_capacity","","Creates a new string buffer with the given capacity.\nThe string will be able to hold exactly `capacity` bytes without\nreallocating. If `capacity` is 0, the string will not allocate.",27],[10,"from_str","","Creates a new string buffer from the given string.",27],[10,"from_utf8","","Returns the vector as a string buffer, if possible, taking care not to\ncopy it.",27],[10,"from_utf8_lossy","","Converts a vector of bytes to a new UTF-8 string.\nAny invalid UTF-8 sequences are replaced with U+FFFD REPLACEMENT CHARACTER.",27],[10,"from_utf16","","Decode a UTF-16 encoded vector `v` into a `String`, returning `None`\nif `v` contains any invalid data.",27],[10,"from_utf16_lossy","","Decode a UTF-16 encoded vector `v` into a string, replacing\ninvalid data with the replacement character (U+FFFD).",27],[10,"from_raw_parts","","Creates a new `String` from a length, capacity, and pointer.",27],[10,"from_utf8_unchecked","","Converts a vector of bytes to a new `String` without checking if\nit contains valid UTF-8. This is unsafe because it assumes that\nthe UTF-8-ness of the vector has already been validated.",27],[10,"into_bytes","","Return the underlying byte buffer, encoded as UTF-8.",27],[10,"push_str","","Pushes the given string onto this string buffer.",27],[10,"capacity","","Returns the number of bytes that this string buffer can hold without\nreallocating.",27],[10,"reserve","","Reserves capacity for at least `additional` more bytes to be inserted\nin the given `String`. The collection may reserve more space to avoid\nfrequent reallocations.",27],[10,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more bytes to be\ninserted in the given `String`. Does nothing if the capacity is already\nsufficient.",27],[10,"shrink_to_fit","","Shrinks the capacity of this string buffer to match its length.",27],[10,"push","","Adds the given character to the end of the string.",27],[10,"as_bytes","","Works with the underlying buffer as a byte slice.",27],[10,"truncate","","Shortens a string to the specified length.",27],[10,"pop","","Removes the last character from the string buffer and returns it.\nReturns `None` if this string buffer is empty.",27],[10,"remove","","Removes the character from the string buffer at byte position `idx` and\nreturns it.",27],[10,"insert","","Insert a character into the string buffer at byte position `idx`.",27],[10,"as_mut_vec","","Views the string buffer as a mutable sequence of bytes.",27],[10,"len","","Return the number of bytes in this string.",27],[10,"is_empty","","Returns true if the string contains no bytes",27],[10,"clear","","Truncates the string, returning it to 0 length.",27],[10,"into_bytes","","Consume this error, returning the bytes that were attempted to make a\n`String` with.",76],[10,"utf8_error","","Access the underlying UTF8-error that was the cause of this error.",76],[10,"fmt","","",76],[10,"fmt","","",76],[10,"fmt","","",77],[10,"fmt","","",77],[10,"from_iter","","",27],[10,"from_iter","","",27],[10,"extend","","",27],[10,"extend","","",27],[10,"eq","","",27],[10,"ne","","",27],[10,"ne","","",27],[10,"eq","","",27],[10,"ne","","",27],[10,"ne","","",27],[10,"eq","core::borrow","",342],[10,"ne","","",342],[10,"ne","","",342],[10,"eq","collections::string","",27],[10,"ne","","",27],[10,"ne","","",27],[10,"eq","core::borrow","",342],[10,"ne","","",342],[10,"ne","","",342],[10,"as_slice","collections::string","",27],[10,"default","","",27],[10,"fmt","","",27],[10,"fmt","","",27],[10,"hash","","",27],[10,"add","","",27],[10,"index","","",27],[10,"index","","",27],[10,"index","","",27],[10,"index","","",27],[10,"deref","","",27],[10,"deref","","",354],[10,"from_str","","",27],[10,"into_cow","","",27],[10,"as_slice","core::borrow","",342],[10,"write_str","collections::string","",27],[10,"write_fmt","","",27],[10,"drop","core::finally","",355],[10,"hash","core::result","",95],[10,"fmt","","",95],[10,"cmp","","",95],[10,"assert_receiver_is_total_eq","","",95],[10,"partial_cmp","","",95],[10,"lt","","",95],[10,"le","","",95],[10,"gt","","",95],[10,"ge","","",95],[10,"lt","","",95],[10,"le","","",95],[10,"gt","","",95],[10,"ge","","",95],[10,"eq","","",95],[10,"ne","","",95],[10,"ne","","",95],[10,"clone","","",95],[10,"clone_from","","",95],[10,"is_ok","","Returns true if the result is `Ok`",95],[10,"is_err","","Returns true if the result is `Err`",95],[10,"ok","","Convert from `Result<T, E>` to `Option<T>`",95],[10,"err","","Convert from `Result<T, E>` to `Option<E>`",95],[10,"as_ref","","Convert from `Result<T, E>` to `Result<&T, &E>`",95],[10,"as_mut","","Convert from `Result<T, E>` to `Result<&mut T, &mut E>`",95],[10,"as_mut_slice","","Convert from `Result<T, E>` to `&mut [T]` (without copying)",95],[10,"map","","Maps a `Result<T, E>` to `Result<U, E>` by applying a function to an\ncontained `Ok` value, leaving an `Err` value untouched.",95],[10,"map_err","","Maps a `Result<T, E>` to `Result<T, F>` by applying a function to an\ncontained `Err` value, leaving an `Ok` value untouched.",95],[10,"iter","","Returns an iterator over the possibly contained value.",95],[10,"iter_mut","","Returns a mutable iterator over the possibly contained value.",95],[10,"into_iter","","Returns a consuming iterator over the possibly contained value.",95],[10,"and","","Returns `res` if the result is `Ok`, otherwise returns the `Err` value of `self`.",95],[10,"and_then","","Calls `op` if the result is `Ok`, otherwise returns the `Err` value of `self`.",95],[10,"or","","Returns `res` if the result is `Err`, otherwise returns the `Ok` value of `self`.",95],[10,"or_else","","Calls `op` if the result is `Err`, otherwise returns the `Ok` value of `self`.",95],[10,"unwrap_or","","Unwraps a result, yielding the content of an `Ok`.\nElse it returns `optb`.",95],[10,"unwrap_or_else","","Unwraps a result, yielding the content of an `Ok`.\nIf the value is an `Err` then it calls `op` with its value.",95],[10,"unwrap","","Unwraps a result, yielding the content of an `Ok`.",95],[10,"unwrap_err","","Unwraps a result, yielding the content of an `Err`.",95],[10,"as_slice","","Convert from `Result<T, E>` to `&[T]` (without copying)",95],[10,"next","","",356],[10,"size_hint","","",356],[10,"size_hint","","",356],[10,"next_back","","",356],[10,"len","","",356],[10,"clone","","",356],[10,"clone_from","","",356],[10,"next","","",357],[10,"size_hint","","",357],[10,"size_hint","","",357],[10,"next_back","","",357],[10,"len","","",357],[10,"next","","",358],[10,"size_hint","","",358],[10,"size_hint","","",358],[10,"next_back","","",358],[10,"len","","",358],[10,"from_iter","","Takes each element in the `Iterator`: if it is an `Err`, no further\nelements are taken, and the `Err` is returned. Should no `Err` occur, a\ncontainer with the values of each `Result` is returned.",95],[10,"new","core::cell","Creates a new `Cell` containing the given value.",359],[10,"get","","Returns a copy of the contained value.",359],[10,"set","","Sets the contained value.",359],[10,"as_unsafe_cell","","Get a reference to the underlying `UnsafeCell`.",359],[10,"clone","","",359],[10,"clone_from","","",359],[10,"default","","",359],[10,"eq","","",359],[10,"ne","","",359],[10,"new","","Create a new `RefCell` containing `value`",360],[10,"into_inner","","Consumes the `RefCell`, returning the wrapped value.",360],[10,"try_borrow","","Attempts to immutably borrow the wrapped value.",360],[10,"borrow","","Immutably borrows the wrapped value.",360],[10,"try_borrow_mut","","Mutably borrows the wrapped value.",360],[10,"borrow_mut","","Mutably borrows the wrapped value.",360],[10,"as_unsafe_cell","","Get a reference to the underlying `UnsafeCell`.",360],[10,"clone","","",360],[10,"clone_from","","",360],[10,"default","","",360],[10,"eq","","",360],[10,"ne","","",360],[10,"drop","","",361],[10,"clone","","",361],[10,"clone_from","","",361],[10,"deref","","",362],[10,"drop","","",363],[10,"deref","","",364],[10,"deref_mut","","",364],[10,"new","","Construct a new instance of `UnsafeCell` which will wrap the specified\nvalue.",365],[10,"get","","Gets a mutable pointer to the wrapped value.",365],[10,"into_inner","","Unwraps the value",365],[10,"fmt","core::simd","",366],[10,"fmt","","",367],[10,"fmt","","",368],[10,"fmt","","",369],[10,"fmt","","",370],[10,"fmt","","",371],[10,"fmt","","",372],[10,"fmt","","",373],[10,"fmt","","",374],[10,"fmt","","",375],[10,"into_cow","core::borrow","",342],[10,"fmt","","",342],[10,"clone","","",342],[10,"clone_from","","",342],[10,"to_mut","","Acquire a mutable reference to the owned form of the data.",342],[10,"into_owned","","Extract the owned data.",342],[10,"is_borrowed","","Returns true if this `Cow` wraps a borrowed value",342],[10,"is_owned","","Returns true if this `Cow` wraps an owned value",342],[10,"deref","","",342],[10,"assert_receiver_is_total_eq","","",342],[10,"cmp","","",342],[10,"eq","","",342],[10,"ne","","",342],[10,"partial_cmp","","",342],[10,"lt","","",342],[10,"le","","",342],[10,"gt","","",342],[10,"ge","","",342],[10,"fmt","","",342],[10,"null","core::ptr","Returns a null Unique.",376],[10,"offset","","Return an (unsafe) pointer into the memory owned by `self`.",376],[10,"cmp","core::marker","",377],[10,"partial_cmp","","",377],[10,"lt","","",377],[10,"le","","",377],[10,"gt","","",377],[10,"ge","","",377],[10,"lt","","",377],[10,"le","","",377],[10,"gt","","",377],[10,"ge","","",377],[10,"assert_receiver_is_total_eq","","",377],[10,"eq","","",377],[10,"ne","","",377],[10,"ne","","",377],[10,"clone","","",377],[10,"clone_from","","",377],[10,"cmp","","",378],[10,"partial_cmp","","",378],[10,"lt","","",378],[10,"le","","",378],[10,"gt","","",378],[10,"ge","","",378],[10,"lt","","",378],[10,"le","","",378],[10,"gt","","",378],[10,"ge","","",378],[10,"assert_receiver_is_total_eq","","",378],[10,"eq","","",378],[10,"ne","","",378],[10,"ne","","",378],[10,"clone","","",378],[10,"clone_from","","",378],[10,"cmp","","",379],[10,"partial_cmp","","",379],[10,"lt","","",379],[10,"le","","",379],[10,"gt","","",379],[10,"ge","","",379],[10,"lt","","",379],[10,"le","","",379],[10,"gt","","",379],[10,"ge","","",379],[10,"assert_receiver_is_total_eq","","",379],[10,"eq","","",379],[10,"ne","","",379],[10,"ne","","",379],[10,"clone","","",379],[10,"clone_from","","",379],[10,"cmp","","",380],[10,"partial_cmp","","",380],[10,"lt","","",380],[10,"le","","",380],[10,"gt","","",380],[10,"ge","","",380],[10,"lt","","",380],[10,"le","","",380],[10,"gt","","",380],[10,"ge","","",380],[10,"assert_receiver_is_total_eq","","",380],[10,"eq","","",380],[10,"ne","","",380],[10,"ne","","",380],[10,"clone","","",380],[10,"clone_from","","",380],[10,"cmp","","",381],[10,"partial_cmp","","",381],[10,"lt","","",381],[10,"le","","",381],[10,"gt","","",381],[10,"ge","","",381],[10,"lt","","",381],[10,"le","","",381],[10,"gt","","",381],[10,"ge","","",381],[10,"assert_receiver_is_total_eq","","",381],[10,"eq","","",381],[10,"ne","","",381],[10,"ne","","",381],[10,"clone","","",381],[10,"clone_from","","",381],[10,"cmp","","",382],[10,"partial_cmp","","",382],[10,"lt","","",382],[10,"le","","",382],[10,"gt","","",382],[10,"ge","","",382],[10,"lt","","",382],[10,"le","","",382],[10,"gt","","",382],[10,"ge","","",382],[10,"assert_receiver_is_total_eq","","",382],[10,"eq","","",382],[10,"ne","","",382],[10,"ne","","",382],[10,"clone","","",382],[10,"clone_from","","",382],[10,"cmp","","",383],[10,"partial_cmp","","",383],[10,"lt","","",383],[10,"le","","",383],[10,"gt","","",383],[10,"ge","","",383],[10,"lt","","",383],[10,"le","","",383],[10,"gt","","",383],[10,"ge","","",383],[10,"assert_receiver_is_total_eq","","",383],[10,"eq","","",383],[10,"ne","","",383],[10,"ne","","",383],[10,"clone","","",383],[10,"clone_from","","",383],[10,"cmp","","",384],[10,"partial_cmp","","",384],[10,"lt","","",384],[10,"le","","",384],[10,"gt","","",384],[10,"ge","","",384],[10,"lt","","",384],[10,"le","","",384],[10,"gt","","",384],[10,"ge","","",384],[10,"assert_receiver_is_total_eq","","",384],[10,"eq","","",384],[10,"ne","","",384],[10,"ne","","",384],[10,"clone","","",384],[10,"clone_from","","",384],[10,"is","","Returns true if the boxed type is the same as `T`",385],[10,"downcast_ref","","Returns some reference to the boxed value if it is of type `T`, or\n`None` if it isn't.",385],[10,"downcast_mut","","Returns some mutable reference to the boxed value if it is of type `T`, or\n`None` if it isn't.",385],[10,"hash","core::any","",386],[10,"fmt","","",386],[10,"assert_receiver_is_total_eq","","",386],[10,"eq","","",386],[10,"ne","","",386],[10,"ne","","",386],[10,"clone","","",386],[10,"clone_from","","",386],[10,"of","","Returns the `TypeId` of the type this generic function has been\ninstantiated with",386],[10,"fmt","core::cmp","",387],[10,"eq","","",387],[10,"ne","","",387],[10,"ne","","",387],[10,"clone","","",387],[10,"clone_from","","",387],[10,"reverse","","Reverse the `Ordering`, so that `Less` becomes `Greater` and\nvice versa.",387],[10,"assert_receiver_is_total_eq","","",387],[10,"cmp","","",387],[10,"partial_cmp","","",387],[10,"lt","","",387],[10,"le","","",387],[10,"gt","","",387],[10,"ge","","",387],[10,"clone","collections::str","",388],[10,"clone_from","","",388],[10,"clone","","",389],[10,"clone_from","","",389],[10,"next","","",389],[10,"size_hint","","",389],[10,"size_hint","","",389],[10,"clone","","",390],[10,"clone_from","","",390],[10,"clone","","",391],[10,"clone_from","","",391],[10,"next","","",391],[10,"size_hint","","",391],[10,"clone","","",392],[10,"clone_from","","",392],[10,"next","","",392],[10,"size_hint","","",392],[10,"size_hint","","",392],[10,"assert_receiver_is_total_eq","core::ops","",393],[10,"eq","","",393],[10,"ne","","",393],[10,"ne","","",393],[10,"clone","","",393],[10,"clone_from","","",393],[10,"fmt","","",393],[10,"assert_receiver_is_total_eq","","",394],[10,"eq","","",394],[10,"ne","","",394],[10,"ne","","",394],[10,"clone","","",394],[10,"clone_from","","",394],[10,"next","","",394],[10,"size_hint","","",394],[10,"size_hint","","",394],[10,"next_back","","",394],[10,"len","","",394],[10,"fmt","","",394],[10,"assert_receiver_is_total_eq","","",395],[10,"eq","","",395],[10,"ne","","",395],[10,"ne","","",395],[10,"clone","","",395],[10,"clone_from","","",395],[10,"next","","",395],[10,"size_hint","","",395],[10,"fmt","","",395],[10,"assert_receiver_is_total_eq","","",396],[10,"eq","","",396],[10,"ne","","",396],[10,"ne","","",396],[10,"clone","","",396],[10,"clone_from","","",396],[10,"fmt","","",396],[10,"new","alloc::boxed","Moves `x` into a freshly allocated box on the global exchange heap.",46],[10,"default","","",46],[10,"default","","",46],[10,"clone","","Returns a copy of the owned box.",46],[10,"clone_from","","Performs copy-assignment from `source` by reusing the existing allocation.",46],[10,"clone_from","","",46],[10,"eq","","",46],[10,"ne","","",46],[10,"ne","","",46],[10,"partial_cmp","","",46],[10,"lt","","",46],[10,"le","","",46],[10,"ge","","",46],[10,"gt","","",46],[10,"lt","","",46],[10,"le","","",46],[10,"gt","","",46],[10,"ge","","",46],[10,"cmp","","",46],[10,"assert_receiver_is_total_eq","","",46],[10,"hash","","",46],[10,"downcast","","",46],[10,"fmt","","",46],[10,"fmt","","",46],[10,"fmt","","",46],[10,"deref","","",46],[10,"deref_mut","","",46],[1,"SocketAddr","hyper",""],[11,"ip","","",111],[11,"port","","",111],[2,"IpAddr","",""],[12,"Ipv4Addr","","",110],[12,"Ipv6Addr","","",110],[4,"Port","",""],[0,"mime","",""],[10,"fmt","mime","",397],[10,"eq","","",397],[10,"ne","","",397],[10,"ne","","",397],[10,"clone","","",397],[10,"clone_from","","",397],[10,"fmt","","",398],[10,"clone","","",398],[10,"clone_from","","",398],[10,"eq","","",398],[10,"ne","","",398],[10,"fmt","","",398],[10,"from_str","","",398],[10,"fmt","","",399],[10,"clone","","",399],[10,"clone_from","","",399],[10,"eq","","",399],[10,"ne","","",399],[10,"fmt","","",399],[10,"from_str","","",399],[10,"fmt","","",400],[10,"clone","","",400],[10,"clone_from","","",400],[10,"eq","","",400],[10,"ne","","",400],[10,"fmt","","",400],[10,"from_str","","",400],[10,"fmt","","",401],[10,"clone","","",401],[10,"clone_from","","",401],[10,"eq","","",401],[10,"ne","","",401],[10,"fmt","","",401],[10,"from_str","","",401],[10,"fmt","","",397],[10,"from_str","","",397],[1,"Mime","hyper::mime","Mime, or Media Type. Encapsulates common registers types."],[2,"TopLevel","",""],[12,"Star","","",398],[12,"Text","","",398],[12,"Image","","",398],[12,"Audio","","",398],[12,"Video","","",398],[12,"Application","","",398],[12,"Multipart","","",398],[12,"Message","","",398],[12,"Model","","",398],[12,"Ext","","",398],[2,"SubLevel","",""],[12,"Star","","",399],[12,"Plain","","",399],[12,"Html","","",399],[12,"Xml","","",399],[12,"Javascript","","",399],[12,"Css","","",399],[12,"Json","","",399],[12,"WwwFormUrlEncoded","","",399],[12,"FormData","","",399],[12,"Png","","",399],[12,"Gif","","",399],[12,"Bmp","","",399],[12,"Jpeg","","",399],[12,"Ext","","",399],[2,"Attr","",""],[12,"Charset","","",400],[12,"Q","","",400],[12,"Ext","","",400],[2,"Value","",""],[12,"Utf8","","",401],[12,"Ext","","",401],[4,"Param","",""],[10,"parse","url","Parse an URL with the default `UrlParser` parameters.",9],[10,"from_file_path","","Convert a file name as `std::path::Path` into an URL in the `file` scheme.",9],[10,"from_directory_path","","Convert a directory name as `std::path::Path` into an URL in the `file` scheme.",9],[10,"to_file_path","","Assuming the URL is in the `file` scheme or similar,\nconvert its path to an absolute `std::path::Path`.",9],[10,"serialize","","Return the serialization of this URL as a string.",9],[10,"serialize_no_fragment","","Return the serialization of this URL, without the fragment identifier, as a string",9],[10,"non_relative_scheme_data","","If the URL is *non-relative*, return the string scheme data.",9],[10,"non_relative_scheme_data_mut","","If the URL is *non-relative*, return a mutable reference to the string scheme data.",9],[10,"relative_scheme_data","","If the URL is in a *relative scheme*, return the structured scheme data.",9],[10,"relative_scheme_data_mut","","If the URL is in a *relative scheme*,\nreturn a mutable reference to the structured scheme data.",9],[10,"username","","If the URL is in a *relative scheme*, return its username.",9],[10,"username_mut","","If the URL is in a *relative scheme*, return a mutable reference to its username.",9],[10,"lossy_percent_decode_username","","Percent-decode the URL’s username, if any.",9],[10,"password","","If the URL is in a *relative scheme*, return its password, if any.",9],[10,"password_mut","","If the URL is in a *relative scheme*, return a mutable reference to its password, if any.",9],[10,"lossy_percent_decode_password","","Percent-decode the URL’s password, if any.",9],[10,"serialize_userinfo","","Serialize the URL's username and password, if any.",9],[10,"host","","If the URL is in a *relative scheme*, return its structured host.",9],[10,"host_mut","","If the URL is in a *relative scheme*, return a mutable reference to its structured host.",9],[10,"domain","","If the URL is in a *relative scheme* and its host is a domain,\nreturn the domain as a string.",9],[10,"domain_mut","","If the URL is in a *relative scheme* and its host is a domain,\nreturn a mutable reference to the domain string.",9],[10,"serialize_host","","If the URL is in a *relative scheme*, serialize its host as a string.",9],[10,"port","","If the URL is in a *relative scheme* and has a port number, return it.",9],[10,"port_mut","","If the URL is in a *relative scheme*, return a mutable reference to its port.",9],[10,"port_or_default","","If the URL is in a *relative scheme* that is not a file-like,\nreturn its port number, even if it is the default.",9],[10,"path","","If the URL is in a *relative scheme*, return its path components.",9],[10,"path_mut","","If the URL is in a *relative scheme*, return a mutable reference to its path components.",9],[10,"serialize_path","","If the URL is in a *relative scheme*, serialize its path as a string.",9],[10,"query_pairs","","Parse the URL’s query string, if any, as `application/x-www-form-urlencoded`\nand return a vector of (key, value) pairs.",9],[10,"set_query_from_pairs","","Serialize an iterator of (key, value) pairs as `application/x-www-form-urlencoded`\nand set it as the URL’s query string.",9],[10,"lossy_percent_decode_query","","Percent-decode the URL’s query string, if any.",9],[10,"lossy_percent_decode_fragment","","Percent-decode the URL’s fragment identifier, if any.",9],[10,"utf8","url::encoding","",402],[10,"lookup","","",402],[10,"is_utf8","","",402],[10,"decode","","",402],[10,"encode","","",402],[10,"fmt","url::host","",403],[10,"clone","","",403],[10,"clone_from","","",403],[10,"assert_receiver_is_total_eq","","",403],[10,"eq","","",403],[10,"ne","","",403],[10,"ne","","",403],[10,"fmt","","",404],[10,"eq","","",404],[10,"ne","","",404],[10,"ne","","",404],[10,"assert_receiver_is_total_eq","","",404],[10,"clone","","",404],[10,"clone_from","","",404],[10,"parse","","Parse a host: either an IPv6 address in [] square brackets, or a domain.",403],[10,"serialize","","Serialize the host as a string.",403],[10,"fmt","","",403],[10,"parse","","Parse an IPv6 address, without the [] square brackets.",404],[10,"serialize","","Serialize the IPv6 address to a string.",404],[10,"fmt","","",404],[10,"fmt","url::parser","",405],[10,"clone","","",405],[10,"clone_from","","",405],[10,"assert_receiver_is_total_eq","","",405],[10,"eq","","",405],[10,"ne","","",405],[10,"ne","","",405],[10,"description","","",405],[10,"detail","","",405],[10,"cause","","",405],[10,"fmt","","",405],[10,"assert_receiver_is_total_eq","","",406],[10,"eq","","",406],[10,"ne","","",406],[10,"ne","","",406],[10,"next","","",407],[10,"size_hint","","",407],[10,"fmt","url::format","",408],[10,"fmt","","",409],[10,"fmt","","",410],[10,"fmt","url","",9],[10,"clone","","",9],[10,"clone_from","","",9],[10,"assert_receiver_is_total_eq","","",9],[10,"eq","","",9],[10,"ne","","",9],[10,"ne","","",9],[10,"fmt","","",411],[10,"clone","","",411],[10,"clone_from","","",411],[10,"assert_receiver_is_total_eq","","",411],[10,"eq","","",411],[10,"ne","","",411],[10,"ne","","",411],[10,"fmt","","",412],[10,"clone","","",412],[10,"clone_from","","",412],[10,"assert_receiver_is_total_eq","","",412],[10,"eq","","",412],[10,"ne","","",412],[10,"ne","","",412],[10,"hash","","",9],[10,"new","","Return a new UrlParser with default parameters.",413],[10,"base_url","","Set the base URL used for resolving relative URL references, and return the `UrlParser`.\nThe default is no base URL, so that relative URLs references fail to parse.",413],[10,"error_handler","","Set an error handler for non-fatal parse errors, and return the `UrlParser`.",413],[10,"scheme_type_mapper","","Set a *scheme type mapper*, and return the `UrlParser`.",413],[10,"parse","","Parse `input` as an URL, with all the parameters previously set in the `UrlParser`.",413],[10,"parse_path","","Parse `input` as a “standalone” URL path,\nwith an optional query string and fragment identifier.",413],[10,"fmt","","",414],[10,"assert_receiver_is_total_eq","","",414],[10,"eq","","",414],[10,"ne","","",414],[10,"ne","","",414],[10,"default_port","","",414],[10,"encode","","",9],[10,"decode","","",9],[10,"fmt","","",9],[10,"fmt","","",411],[10,"lossy_percent_decode_username","","Percent-decode the URL’s username.",412],[10,"lossy_percent_decode_password","","Percent-decode the URL’s password, if any.",412],[10,"to_file_path","","Assuming the URL is in the `file` scheme or similar,\nconvert its path to an absolute `std::path::Path`.",412],[10,"domain","","If the host is a domain, return the domain as a string.",412],[10,"domain_mut","","If the host is a domain, return a mutable reference to the domain string.",412],[10,"port_or_default","","Return the port number of the URL, even if it is the default.\nReturn `None` for file-like URLs.",412],[10,"serialize_path","","Serialize the path as a string.",412],[10,"serialize_userinfo","","Serialize the userinfo as a string.",412],[10,"fmt","","",412],[10,"to_url_path","std::path::posix","",100],[10,"to_url_path","std::path::windows","",151],[10,"from_url_path","std::path::posix","",100],[10,"from_url_path","std::path::windows","",151],[1,"Url","hyper","The parsed representation of an absolute URL."],[11,"scheme","","The scheme (a.k.a. protocol) of the URL, in ASCII lower case.",9],[11,"scheme_data","","The components of the URL whose representation depends on where the scheme is *relative*.",9],[11,"query","","The query string of the URL.",9],[11,"fragment","","The fragment identifier of the URL.",9],[15,"bench_header!","",""],[15,"deref!","",""],[15,"impl_list_header!","",""],[15,"impl_header!","",""]],"paths":[[2,"HttpError"],[2,"Body"],[2,"RedirectPolicy"],[1,"Request"],[1,"Response"],[6,"IntoBody"],[6,"IntoUrl"],[1,"Client"],[1,"RequestBuilder"],[1,"Url"],[2,"Method"],[1,"QualityItem"],[1,"Etag"],[1,"Host"],[2,"Encoding"],[2,"AccessControlAllowOrigin"],[2,"Vary"],[2,"ConnectionOption"],[1,"AccessControlAllowHeaders"],[1,"AccessControlAllowMethods"],[1,"AccessControlMaxAge"],[1,"AccessControlRequestHeaders"],[1,"AccessControlRequestMethod"],[1,"Accept"],[1,"AcceptEncoding"],[1,"Allow"],[1,"Authorization"],[1,"String"],[1,"CacheControl"],[1,"Cookies"],[1,"Connection"],[1,"ContentLength"],[1,"ContentType"],[1,"Date"],[1,"Expires"],[1,"LastModified"],[1,"IfModifiedSince"],[1,"Location"],[1,"Referer"],[1,"Server"],[1,"SetCookie"],[1,"TransferEncoding"],[1,"Upgrade"],[1,"UserAgent"],[6,"Header"],[6,"HeaderFormat"],[1,"Box"],[1,"Headers"],[1,"HeadersItems"],[1,"HeaderView"],[1,"HeaderFormatter"],[2,"HttpReader"],[2,"HttpWriter"],[1,"LineEnding"],[1,"RawStatus"],[2,"HttpListener"],[2,"HttpAcceptor"],[2,"HttpStream"],[6,"NetworkListener"],[6,"NetworkAcceptor"],[6,"NetworkStream"],[6,"NetworkConnector"],[1,"NetworkConnections"],[1,"HttpConnector"],[1,"Listening"],[1,"Request"],[1,"Response"],[6,"Handler"],[1,"Server"],[2,"StatusCode"],[2,"StatusClass"],[2,"RequestUri"],[2,"HttpVersion"],[1,"Vec"],[1,"Thunk"],[2,"Utf8Error"],[1,"FromUtf8Error"],[1,"FromUtf16Error"],[1,"Key"],[2,"State"],[1,"Key"],[1,"DynamicLibrary"],[1,"CString"],[2,"Alignment"],[1,"BufferedReader"],[1,"BufferedWriter"],[1,"LineBufferedWriter"],[1,"InternalBufferedWriter"],[1,"BufferedStream"],[1,"ChanReader"],[1,"ChanWriter"],[1,"MemWriter"],[1,"MemReader"],[1,"BufWriter"],[1,"BufReader"],[2,"Result"],[1,"TempDir"],[1,"Bytes"],[1,"File"],[1,"Directories"],[1,"Path"],[2,"SocketType"],[2,"Flag"],[2,"Protocol"],[1,"Hint"],[1,"Info"],[1,"TcpStream"],[1,"TcpListener"],[1,"TcpAcceptor"],[1,"UdpSocket"],[2,"IpAddr"],[1,"SocketAddr"],[1,"UnixStream"],[1,"UnixListener"],[1,"UnixAcceptor"],[1,"PipeStream"],[1,"EnvKey"],[1,"Command"],[1,"ProcessOutput"],[2,"StdioContainer"],[2,"ProcessExit"],[1,"Process"],[1,"StdinReader"],[1,"StdinReaderGuard"],[1,"StdReader"],[1,"StdWriter"],[1,"Timer"],[1,"TimerCallback"],[1,"LimitReader"],[1,"NullWriter"],[1,"ZeroReader"],[1,"NullReader"],[1,"MultiWriter"],[1,"ChainedReader"],[1,"TeeReader"],[1,"IterReader"],[1,"IoError"],[2,"IoErrorKind"],[1,"RefReader"],[1,"RefWriter"],[1,"Lines"],[1,"Chars"],[1,"IncomingConnections"],[2,"FileMode"],[2,"FileAccess"],[2,"FileType"],[1,"FileStat"],[1,"UnstableFileStat"],[1,"FilePermission"],[2,"MapError"],[1,"MemoryMap"],[1,"Path"],[2,"PathPrefix"],[1,"Display"],[1,"OsRng"],[1,"ReaderRng"],[1,"StdRng"],[1,"ThreadRngReseeder"],[1,"ThreadRng"],[1,"Range"],[1,"Gamma"],[1,"GammaSmallShape"],[1,"GammaLargeShape"],[1,"ChiSquared"],[1,"FisherF"],[1,"StudentT"],[1,"StandardNormal"],[1,"Normal"],[1,"LogNormal"],[1,"Exp1"],[1,"Exp"],[1,"RandSample"],[1,"WeightedChoice"],[1,"ReseedingRng"],[1,"ReseedWithDefault"],[1,"Duration"],[1,"SafeHash"],[1,"FullBucket"],[1,"EmptyBucket"],[1,"Bucket"],[2,"BucketState"],[1,"GapThenFull"],[1,"RawTable"],[1,"RawBuckets"],[1,"RevMoveBuckets"],[1,"Iter"],[1,"IterMut"],[1,"IntoIter"],[1,"Drain"],[1,"DefaultResizePolicy"],[1,"HashMap"],[1,"Iter"],[1,"Keys"],[1,"Values"],[1,"IterMut"],[1,"IntoIter"],[1,"Drain"],[2,"Entry"],[1,"OccupiedEntry"],[1,"VacantEntry"],[1,"RandomState"],[1,"Hasher"],[1,"HashSet"],[1,"Iter"],[1,"IntoIter"],[1,"Drain"],[1,"Intersection"],[1,"Difference"],[1,"SymmetricDifference"],[1,"Union"],[1,"DefaultState"],[1,"VecMap"],[1,"Iter"],[1,"IterMut"],[1,"Keys"],[1,"Values"],[1,"Drain"],[1,"IntoIter"],[1,"Iter"],[1,"IntoIter"],[1,"Rawlink"],[1,"DList"],[1,"IterMut"],[1,"BinaryHeap"],[1,"Iter"],[1,"IntoIter"],[1,"Drain"],[1,"RingBuf"],[1,"Iter"],[1,"IterMut"],[1,"IntoIter"],[1,"Drain"],[1,"Builder"],[1,"Thread"],[1,"JoinGuard"],[1,"SignalToken"],[1,"WaitToken"],[1,"Packet"],[2,"StartResult"],[1,"Select"],[1,"Handle"],[1,"Packets"],[1,"Packet"],[1,"Packet"],[2,"Failure"],[1,"Packet"],[1,"Queue"],[1,"Queue"],[1,"SendError"],[1,"RecvError"],[2,"TryRecvError"],[2,"TrySendError"],[1,"Sender"],[1,"SyncSender"],[1,"Receiver"],[1,"Iter"],[1,"Barrier"],[1,"BarrierWaitResult"],[1,"Condvar"],[1,"StaticCondvar"],[1,"Future"],[1,"Mutex"],[1,"StaticMutex"],[1,"MutexGuard"],[1,"Once"],[1,"Flag"],[1,"PoisonError"],[2,"TryLockError"],[1,"RwLock"],[1,"StaticRwLock"],[1,"RwLockReadGuard"],[1,"RwLockWriteGuard"],[1,"Semaphore"],[1,"SemaphoreGuard"],[1,"Sentinel"],[1,"TaskPool"],[1,"AtomicBool"],[1,"AtomicIsize"],[1,"AtomicUsize"],[1,"AtomicPtr"],[1,"AtomicInt"],[1,"AtomicUint"],[1,"Condvar"],[1,"FileDesc"],[1,"Mutex"],[1,"Inner"],[1,"UnixStream"],[1,"UnixListener"],[1,"UnixAcceptor"],[1,"Process"],[1,"RWLock"],[1,"Handler"],[1,"TcpListener"],[1,"TcpAcceptor"],[1,"SteadyTime"],[1,"Timer"],[1,"TTY"],[1,"Condvar"],[1,"Helper"],[1,"Mutex"],[2,"SocketStatus"],[1,"Inner"],[1,"Guard"],[1,"TcpStream"],[1,"UdpSocket"],[1,"RWLock"],[1,"StaticKey"],[1,"Key"],[1,"Stdio"],[1,"Rc"],[1,"Weak"],[1,"ElementSwaps"],[2,"Direction"],[1,"SizeDirection"],[1,"Permutations"],[1,"Enumerate"],[1,"Inspect"],[1,"Rev"],[1,"Map"],[1,"Zip"],[1,"ByRef"],[2,"MinMaxResult"],[1,"Cloned"],[1,"Cycle"],[1,"Chain"],[1,"Filter"],[1,"FilterMap"],[1,"Peekable"],[1,"SkipWhile"],[1,"TakeWhile"],[1,"Skip"],[1,"Take"],[1,"Scan"],[1,"FlatMap"],[1,"Fuse"],[1,"Unfold"],[1,"Counter"],[1,"Range"],[1,"RangeInclusive"],[1,"RangeStep"],[1,"RangeStepInclusive"],[1,"Repeat"],[2,"Cow"],[1,"IntoIter"],[1,"Drain"],[1,"DerefVec"],[1,"PartialVecNonZeroSized"],[1,"PartialVecZeroSized"],[2,"Option"],[1,"Item"],[1,"Iter"],[1,"IterMut"],[1,"IntoIter"],[1,"SipHasher"],[1,"DerefString"],[1,"Finallyalizer"],[1,"Iter"],[1,"IterMut"],[1,"IntoIter"],[1,"Cell"],[1,"RefCell"],[1,"BorrowRef"],[1,"Ref"],[1,"BorrowRefMut"],[1,"RefMut"],[1,"UnsafeCell"],[1,"i8x16"],[1,"i16x8"],[1,"i32x4"],[1,"i64x2"],[1,"u8x16"],[1,"u16x8"],[1,"u32x4"],[1,"u64x2"],[1,"f32x4"],[1,"f64x2"],[1,"Unique"],[1,"CovariantType"],[1,"ContravariantType"],[1,"InvariantType"],[1,"CovariantLifetime"],[1,"ContravariantLifetime"],[1,"InvariantLifetime"],[1,"NoCopy"],[1,"Managed"],[6,"Any"],[1,"TypeId"],[2,"Ordering"],[2,"DecompositionType"],[1,"Decompositions"],[2,"RecompositionState"],[1,"Recompositions"],[1,"Utf16Units"],[1,"FullRange"],[1,"Range"],[1,"RangeFrom"],[1,"RangeTo"],[1,"Mime"],[2,"TopLevel"],[2,"SubLevel"],[2,"Attr"],[2,"Value"],[1,"EncodingOverride"],[2,"Host"],[1,"Ipv6Address"],[2,"ParseError"],[2,"Context"],[1,"CharRanges"],[1,"PathFormatter"],[1,"UserInfoFormatter"],[1,"UrlNoFragmentFormatter"],[2,"SchemeData"],[1,"RelativeSchemeData"],[1,"UrlParser"],[2,"SchemeType"]]};
searchIndex['cookie'] = {"items":[[0,"","cookie",""],[1,"CookieJar","","A jar of cookies for managing a session"],[1,"Cookie","",""],[11,"name","","",0],[11,"value","","",0],[11,"expires","","",0],[11,"max_age","","",0],[11,"domain","","",0],[11,"path","","",0],[11,"secure","","",0],[11,"httponly","","",0],[11,"custom","","",0],[1,"AttrVal","",""],[10,"new","","Creates a new empty cookie jar with the given signing key.",1],[10,"add_original","","Adds an original cookie from a request.",1],[10,"add","","Adds a new cookie to this cookie jar.",1],[10,"remove","","Removes a cookie from this cookie jar.",1],[10,"find","","Finds a cookie inside of this cookie jar.",1],[10,"signed","","Creates a child signed cookie jar.",1],[10,"encrypted","","Creates a child encrypted cookie jar.",1],[10,"permanent","","Creates a child jar for permanent cookie storage.",1],[10,"delta","","Calculates the changes that have occurred to this cookie jar over time,\nreturning a vector of `Set-Cookie` headers.",1],[10,"iter","","Return an iterator over the cookies in this jar.",1],[10,"fmt","","",0],[10,"clone","","",0],[10,"eq","","",0],[10,"ne","","",0],[10,"new","","",0],[10,"parse","","",0],[10,"pair","","",0],[10,"fmt","","",2],[10,"fmt","","",0],[10,"from_str","","",0]],"paths":[[1,"Cookie"],[1,"CookieJar"],[1,"AttrVal"]]};

searchIndex['url'] = {"items":[[0,"","url","<a href=\"https://github.com/servo/rust-url\"><img style=\"position: absolute; top: 0; left: 0; border: 0;\" src=\"../github.png\" alt=\"Fork me on GitHub\"></a>\n<style>.sidebar { margin-top: 53px }</style>"],[1,"Ipv6Address","","A 128 bit IPv6 address"],[11,"pieces","","",0],[1,"Url","","The parsed representation of an absolute URL."],[11,"scheme","","The scheme (a.k.a. protocol) of the URL, in ASCII lower case.",1],[11,"scheme_data","","The components of the URL whose representation depends on where the scheme is *relative*.",1],[11,"query","","The query string of the URL.",1],[11,"fragment","","The fragment identifier of the URL.",1],[1,"RelativeSchemeData","","Components for URLs in a *relative* scheme such as HTTP."],[11,"username","","The username of the URL, as a possibly empty, pecent-encoded string.",2],[11,"password","","The password of the URL.",2],[11,"host","","The host of the URL, either a domain name or an IPv4 address",2],[11,"port","","The port number of the URL.\n`None` for file-like schemes, or to indicate the default port number.",2],[11,"default_port","","The default port number for the URL’s scheme.\n`None` for file-like schemes.",2],[11,"path","","The path of the URL, as vector of pecent-encoded strings.",2],[1,"UrlParser","","A set of optional parameters for URL parsing."],[2,"Host","","The host name of an URL."],[12,"Domain","","A (DNS) domain name or an IPv4 address.",3],[12,"Ipv6","","An IPv6 address, represented inside `[...]` square brackets\nso that `:` colon characters in the address are not ambiguous\nwith the port number delimiter.",3],[2,"ParseError","","Errors that can occur during parsing."],[12,"EmptyHost","","",4],[12,"InvalidScheme","","",4],[12,"InvalidPort","","",4],[12,"InvalidIpv6Address","","",4],[12,"InvalidDomainCharacter","","",4],[12,"InvalidCharacter","","",4],[12,"InvalidBackslash","","",4],[12,"InvalidPercentEncoded","","",4],[12,"InvalidAtSymbolInUser","","",4],[12,"ExpectedTwoSlashes","","",4],[12,"ExpectedInitialSlash","","",4],[12,"NonUrlCodePoint","","",4],[12,"RelativeUrlWithScheme","","",4],[12,"RelativeUrlWithoutBase","","",4],[12,"RelativeUrlWithNonRelativeBase","","",4],[12,"NonAsciiDomainsNotSupportedYet","","",4],[12,"CannotSetJavascriptFragment","","",4],[12,"CannotSetPortWithFileLikeScheme","","",4],[12,"CannotSetUsernameWithNonRelativeScheme","","",4],[12,"CannotSetPasswordWithNonRelativeScheme","","",4],[12,"CannotSetHostPortWithNonRelativeScheme","","",4],[12,"CannotSetHostWithNonRelativeScheme","","",4],[12,"CannotSetPortWithNonRelativeScheme","","",4],[12,"CannotSetPathWithNonRelativeScheme","","",4],[2,"SchemeData","","The components of the URL whose representation depends on where the scheme is *relative*."],[12,"Relative","","Components for URLs in a *relative* scheme such as HTTP.",5],[12,"NonRelative","","No further structure is assumed for *non-relative* schemes such as `data` and `mailto`.",5],[2,"SchemeType","","Determines the behavior of the URL parser for a given scheme."],[12,"NonRelative","","Indicate that the scheme is *non-relative*.",6],[12,"Relative","","Indicate that the scheme is *relative*, and what the default port number is.",6],[12,"FileLike","","Indicate a *relative* scheme similar to the *file* scheme.",6],[3,"parse_path","","Parse `input` as a “standalone” URL path,\nwith an optional query string and fragment identifier."],[3,"whatwg_scheme_type_mapper","","http://url.spec.whatwg.org/#relative-scheme"],[10,"fmt","","",3],[10,"clone","","",3],[10,"eq","","",3],[10,"ne","","",3],[10,"fmt","","",0],[10,"eq","","",0],[10,"ne","","",0],[10,"clone","","",0],[10,"parse","","Parse a host: either an IPv6 address in [] square brackets, or a domain.",3],[10,"serialize","","Serialize the host as a string.",3],[10,"fmt","","",3],[10,"parse","","Parse an IPv6 address, without the [] square brackets.",0],[10,"serialize","","Serialize the IPv6 address to a string.",0],[10,"fmt","","",0],[10,"fmt","","",4],[10,"clone","","",4],[10,"eq","","",4],[10,"ne","","",4],[10,"description","","",4],[10,"fmt","","",4],[0,"percent_encoding","",""],[1,"EncodeSet","url::percent_encoding","Represents a set of characters / bytes that should be percent-encoded."],[3,"percent_encode_to","","Percent-encode the given bytes, and push the result to `output`."],[3,"percent_encode","","Percent-encode the given bytes."],[3,"utf8_percent_encode_to","","Percent-encode the UTF-8 encoding of the given string, and push the result to `output`."],[3,"utf8_percent_encode","","Percent-encode the UTF-8 encoding of the given string."],[3,"percent_decode_to","","Percent-decode the given bytes, and push the result to `output`."],[3,"percent_decode","","Percent-decode the given bytes."],[3,"lossy_utf8_percent_decode","","Percent-decode the given bytes, and decode the result as UTF-8."],[3,"from_hex","",""],[5,"SIMPLE_ENCODE_SET","","This encode set is used for fragment identifier and non-relative scheme data."],[5,"QUERY_ENCODE_SET","","This encode set is used in the URL parser for query strings."],[5,"DEFAULT_ENCODE_SET","","This encode set is used for path components."],[5,"USERINFO_ENCODE_SET","","This encode set is used in the URL parser for usernames and passwords."],[5,"PASSWORD_ENCODE_SET","","This encode set should be used when setting the password field of a parsed URL."],[5,"USERNAME_ENCODE_SET","","This encode set should be used when setting the username field of a parsed URL."],[5,"FORM_URLENCODED_ENCODE_SET","","This encode set is used in `application/x-www-form-urlencoded` serialization."],[0,"form_urlencoded","url","Parser and serializer for the [`application/x-www-form-urlencoded` format](\nhttp://url.spec.whatwg.org/#application/x-www-form-urlencoded),\nas used by HTML forms."],[3,"parse","url::form_urlencoded","Convert a byte string in the `application/x-www-form-urlencoded` format\ninto a vector of (name, value) pairs."],[3,"serialize_owned","","Convert a slice of owned (name, value) pairs\ninto a string in the `application/x-www-form-urlencoded` format."],[3,"serialize","","Convert an iterator of (name, value) pairs\ninto a string in the `application/x-www-form-urlencoded` format."],[0,"punycode","url","Punycode ([RFC 3492](http://tools.ietf.org/html/rfc3492)) implementation."],[3,"decode_to_string","url::punycode","Convert Punycode to an Unicode `String`."],[3,"decode","","Convert Punycode to Unicode."],[3,"encode_str","","Convert an Unicode `str` to Punycode."],[3,"encode","","Convert Unicode to Punycode."],[0,"format","url","Formatting utilities for URLs."],[1,"PathFormatter","url::format","Formatter and serializer for URL path data."],[11,"path","","The path as a slice of string-like objects (String or &str).",7],[1,"UserInfoFormatter","","Formatter and serializer for URL username and password data."],[11,"username","","URL username as a string slice.",8],[11,"password","","URL password as an optional string slice.",8],[1,"UrlNoFragmentFormatter","","Formatter for URLs which ignores the fragment field."],[11,"url","","",9],[10,"fmt","","",7],[10,"fmt","","",8],[10,"fmt","","",9],[4,"ErrorHandler","url","This is called on non-fatal parse errors."],[4,"ParseResult","",""],[6,"ToUrlPath","",""],[9,"to_url_path","","",10],[6,"FromUrlPath","",""],[9,"from_url_path","","",11],[10,"fmt","","",1],[10,"clone","","",1],[10,"eq","","",1],[10,"ne","","",1],[10,"fmt","","",5],[10,"clone","","",5],[10,"eq","","",5],[10,"ne","","",5],[10,"fmt","","",2],[10,"clone","","",2],[10,"eq","","",2],[10,"ne","","",2],[10,"hash","","",1],[10,"new","","Return a new UrlParser with default parameters.",12],[10,"base_url","","Set the base URL used for resolving relative URL references, and return the `UrlParser`.\nThe default is no base URL, so that relative URLs references fail to parse.",12],[10,"error_handler","","Set an error handler for non-fatal parse errors, and return the `UrlParser`.",12],[10,"scheme_type_mapper","","Set a *scheme type mapper*, and return the `UrlParser`.",12],[10,"parse","","Parse `input` as an URL, with all the parameters previously set in the `UrlParser`.",12],[10,"parse_path","","Parse `input` as a “standalone” URL path,\nwith an optional query string and fragment identifier.",12],[10,"fmt","","",6],[10,"eq","","",6],[10,"ne","","",6],[10,"default_port","","",6],[10,"parse","","Parse an URL with the default `UrlParser` parameters.",1],[10,"from_file_path","","Convert a file name as `std::path::Path` into an URL in the `file` scheme.",1],[10,"from_directory_path","","Convert a directory name as `std::path::Path` into an URL in the `file` scheme.",1],[10,"to_file_path","","Assuming the URL is in the `file` scheme or similar,\nconvert its path to an absolute `std::path::Path`.",1],[10,"serialize","","Return the serialization of this URL as a string.",1],[10,"serialize_no_fragment","","Return the serialization of this URL, without the fragment identifier, as a string",1],[10,"non_relative_scheme_data","","If the URL is *non-relative*, return the string scheme data.",1],[10,"non_relative_scheme_data_mut","","If the URL is *non-relative*, return a mutable reference to the string scheme data.",1],[10,"relative_scheme_data","","If the URL is in a *relative scheme*, return the structured scheme data.",1],[10,"relative_scheme_data_mut","","If the URL is in a *relative scheme*,\nreturn a mutable reference to the structured scheme data.",1],[10,"username","","If the URL is in a *relative scheme*, return its username.",1],[10,"username_mut","","If the URL is in a *relative scheme*, return a mutable reference to its username.",1],[10,"lossy_percent_decode_username","","Percent-decode the URL’s username, if any.",1],[10,"password","","If the URL is in a *relative scheme*, return its password, if any.",1],[10,"password_mut","","If the URL is in a *relative scheme*, return a mutable reference to its password, if any.",1],[10,"lossy_percent_decode_password","","Percent-decode the URL’s password, if any.",1],[10,"serialize_userinfo","","Serialize the URL's username and password, if any.",1],[10,"host","","If the URL is in a *relative scheme*, return its structured host.",1],[10,"host_mut","","If the URL is in a *relative scheme*, return a mutable reference to its structured host.",1],[10,"domain","","If the URL is in a *relative scheme* and its host is a domain,\nreturn the domain as a string.",1],[10,"domain_mut","","If the URL is in a *relative scheme* and its host is a domain,\nreturn a mutable reference to the domain string.",1],[10,"serialize_host","","If the URL is in a *relative scheme*, serialize its host as a string.",1],[10,"port","","If the URL is in a *relative scheme* and has a port number, return it.",1],[10,"port_mut","","If the URL is in a *relative scheme*, return a mutable reference to its port.",1],[10,"port_or_default","","If the URL is in a *relative scheme* that is not a file-like,\nreturn its port number, even if it is the default.",1],[10,"path","","If the URL is in a *relative scheme*, return its path components.",1],[10,"path_mut","","If the URL is in a *relative scheme*, return a mutable reference to its path components.",1],[10,"serialize_path","","If the URL is in a *relative scheme*, serialize its path as a string.",1],[10,"query_pairs","","Parse the URL’s query string, if any, as `application/x-www-form-urlencoded`\nand return a vector of (key, value) pairs.",1],[10,"set_query_from_pairs","","Serialize an iterator of (key, value) pairs as `application/x-www-form-urlencoded`\nand set it as the URL’s query string.",1],[10,"lossy_percent_decode_query","","Percent-decode the URL’s query string, if any.",1],[10,"lossy_percent_decode_fragment","","Percent-decode the URL’s fragment identifier, if any.",1],[10,"encode","","",1],[10,"decode","","",1],[10,"fmt","","",1],[10,"fmt","","",5],[10,"lossy_percent_decode_username","","Percent-decode the URL’s username.",2],[10,"lossy_percent_decode_password","","Percent-decode the URL’s password, if any.",2],[10,"to_file_path","","Assuming the URL is in the `file` scheme or similar,\nconvert its path to an absolute `std::path::Path`.",2],[10,"domain","","If the host is a domain, return the domain as a string.",2],[10,"domain_mut","","If the host is a domain, return a mutable reference to the domain string.",2],[10,"port_or_default","","Return the port number of the URL, even if it is the default.\nReturn `None` for file-like URLs.",2],[10,"serialize_path","","Serialize the path as a string.",2],[10,"serialize_userinfo","","Serialize the userinfo as a string.",2],[10,"fmt","","",2],[10,"to_url_path","std::path::posix","",13],[10,"to_url_path","std::path::windows","",14],[10,"from_url_path","std::path::posix","",13],[10,"from_url_path","std::path::windows","",14]],"paths":[[1,"Ipv6Address"],[1,"Url"],[1,"RelativeSchemeData"],[2,"Host"],[2,"ParseError"],[2,"SchemeData"],[2,"SchemeType"],[1,"PathFormatter"],[1,"UserInfoFormatter"],[1,"UrlNoFragmentFormatter"],[6,"ToUrlPath"],[6,"FromUrlPath"],[1,"UrlParser"],[1,"Path"],[1,"Path"]]};

searchIndex['rustc-serialize'] = {"items":[[0,"","rustc-serialize","Support code for encoding and decoding types."],[10,"encode","collections::string","",0],[10,"decode","","",0],[10,"encode","alloc::boxed","",1],[10,"decode","","",1],[10,"decode","","",1],[10,"encode","alloc::rc","",2],[10,"decode","","",2],[10,"encode","collections::vec","",3],[10,"decode","","",3],[10,"encode","core::option","",4],[10,"decode","","",4],[10,"encode","std::path::posix","",5],[10,"decode","","",5],[10,"encode","std::path::windows","",6],[10,"decode","","",6],[10,"encode","core::cell","",7],[10,"decode","","",7],[10,"encode","","",8],[10,"decode","","",8],[10,"encode","alloc::arc","",9],[10,"decode","","",9],[10,"encode","collections::dlist","",10],[10,"decode","","",10],[10,"encode","collections::ring_buf","",11],[10,"decode","","",11],[10,"encode","collections::btree::map","",12],[10,"decode","","",12],[10,"encode","collections::btree::set","",13],[10,"decode","","",13],[10,"encode","std::collections::hash::map","",14],[10,"decode","","",14],[10,"encode","std::collections::hash::set","",15],[10,"decode","","",15],[10,"encode","collections::vec_map","",16],[10,"decode","","",16],[0,"base64","rustc-serialize","Base64 binary-to-text encoding"],[1,"Config","rustc-serialize::base64","Contains configuration parameters for `to_base64`."],[11,"char_set","","Character set to use",17],[11,"newline","","Newline to use",17],[11,"pad","","True to pad output with `=` characters",17],[11,"line_length","","`Some(len)` to wrap lines at `len`, `None` to disable line wrapping",17],[2,"CharacterSet","","Available encoding character sets"],[12,"Standard","","The standard character set (uses `+` and `/`)",18],[12,"UrlSafe","","The URL safe character set (uses `-` and `_`)",18],[2,"Newline","","Available newline types"],[12,"LF","","A linefeed (i.e. Unix-style newline)",19],[12,"CRLF","","A carriage return and a linefeed (i.e. Windows-style newline)",19],[2,"FromBase64Error","","Errors that can occur when decoding a base64 encoded string"],[12,"InvalidBase64Byte","","The input contained a character not part of the base64 format",20],[12,"InvalidBase64Length","","The input had an invalid length",20],[5,"STANDARD","","Configuration for RFC 4648 standard base64 encoding"],[5,"URL_SAFE","","Configuration for RFC 4648 base64url encoding"],[5,"MIME","","Configuration for RFC 2045 MIME base64 encoding"],[6,"ToBase64","","A trait for converting a value to base64 encoding."],[9,"to_base64","","Converts the value of `self` to a base64 value following the specified\nformat configuration, returning the owned string.",21],[6,"FromBase64","","A trait for converting from base64 encoded values."],[9,"from_base64","","Converts the value of `self`, interpreted as base64 encoded data, into\nan owned vector of bytes, returning the vector.",22],[10,"fmt","","",20],[10,"description","","",20],[10,"detail","","",20],[0,"hex","rustc-serialize","Hex binary-to-text encoding"],[2,"FromHexError","rustc-serialize::hex","Errors that can occur when decoding a hex encoded string"],[12,"InvalidHexCharacter","","The input contained a character not part of the hex format",23],[12,"InvalidHexLength","","The input had an invalid length",23],[6,"ToHex","","A trait for converting a value to hexadecimal encoding"],[9,"to_hex","","Converts the value of `self` to a hex value, returning the owned\nstring.",24],[6,"FromHex","","A trait for converting hexadecimal encoded values"],[9,"from_hex","","Converts the value of `self`, interpreted as hexadecimal encoded data,\ninto an owned vector of bytes, returning the vector.",25],[10,"fmt","","",23],[10,"description","","",23],[10,"detail","","",23],[0,"json","rustc-serialize","JSON parsing and serialization"],[1,"PrettyJson","rustc-serialize::json",""],[1,"AsJson","",""],[1,"AsPrettyJson","",""],[1,"Encoder","","A structure for implementing serialization to JSON."],[1,"PrettyEncoder","","Another encoder for JSON, but prints out human-readable JSON instead of\ncompact data"],[1,"Stack","","A Stack represents the current position of the parser in the logical\nstructure of the JSON stream.\nFor example foo.bar[3].x"],[1,"Parser","","A streaming JSON parser implemented as an iterator of JsonEvent, consuming\nan iterator of char."],[1,"Builder","","A Builder consumes a json::Parser to create a generic Json structure."],[1,"Decoder","","A structure to decode JSON to values in rust."],[2,"Json","","Represents a json value"],[12,"I64","","",26],[12,"U64","","",26],[12,"F64","","",26],[12,"String","","",26],[12,"Boolean","","",26],[12,"Array","","",26],[12,"Object","","",26],[12,"Null","","",26],[2,"ErrorCode","","The errors that can arise while parsing a JSON stream."],[12,"InvalidSyntax","","",27],[12,"InvalidNumber","","",27],[12,"EOFWhileParsingObject","","",27],[12,"EOFWhileParsingArray","","",27],[12,"EOFWhileParsingValue","","",27],[12,"EOFWhileParsingString","","",27],[12,"KeyMustBeAString","","",27],[12,"ExpectedColon","","",27],[12,"TrailingCharacters","","",27],[12,"TrailingComma","","",27],[12,"InvalidEscape","","",27],[12,"InvalidUnicodeCodePoint","","",27],[12,"LoneLeadingSurrogateInHexEscape","","",27],[12,"UnexpectedEndOfHexEscape","","",27],[12,"UnrecognizedHex","","",27],[12,"NotFourDigit","","",27],[12,"NotUtf8","","",27],[2,"ParserError","",""],[12,"SyntaxError","","msg, line, col",28],[12,"IoError","","",28],[2,"DecoderError","",""],[12,"ParseError","","",29],[12,"ExpectedError","","",29],[12,"MissingFieldError","","",29],[12,"UnknownVariantError","","",29],[12,"ApplicationError","","",29],[2,"JsonEvent","","The output of the streaming parser."],[12,"ObjectStart","","",30],[12,"ObjectEnd","","",30],[12,"ArrayStart","","",30],[12,"ArrayEnd","","",30],[12,"BooleanValue","","",30],[12,"I64Value","","",30],[12,"U64Value","","",30],[12,"F64Value","","",30],[12,"StringValue","","",30],[12,"NullValue","","",30],[12,"Error","","",30],[2,"StackElement","","StackElements compose a Stack.\nFor example, Key(\"foo\"), Key(\"bar\"), Index(3) and Key(\"x\") are the\nStackElements compositing the stack that represents foo.bar[3].x"],[12,"Index","","",31],[12,"Key","","",31],[3,"error_str","","Returns a readable error string for a given error code."],[3,"decode","","Shortcut function to decode a JSON `&str` into an object"],[3,"encode","","Shortcut function to encode a `T` into a JSON `String`"],[3,"as_json","","Create an `AsJson` wrapper which can be used to print a value as JSON\non-the-fly via `write!`"],[3,"as_pretty_json","","Create an `AsPrettyJson` wrapper which can be used to print a value as JSON\non-the-fly via `write!`"],[4,"Array","",""],[4,"Object","",""],[4,"BuilderError","",""],[4,"EncodeResult","",""],[4,"DecodeResult","",""],[6,"ToJson","","A trait for converting values to JSON"],[9,"to_json","","Converts the value of `self` to an instance of JSON",32],[10,"fmt","","",26],[10,"partial_cmp","","",26],[10,"lt","","",26],[10,"le","","",26],[10,"gt","","",26],[10,"ge","","",26],[10,"eq","","",26],[10,"ne","","",26],[10,"clone","","",26],[10,"eq","","",27],[10,"ne","","",27],[10,"clone","","",27],[10,"fmt","","",28],[10,"eq","","",28],[10,"ne","","",28],[10,"clone","","",28],[10,"fmt","","",29],[10,"eq","","",29],[10,"ne","","",29],[10,"clone","","",29],[10,"fmt","","",27],[10,"description","","",29],[10,"detail","","",29],[10,"cause","","",29],[10,"description","","",28],[10,"detail","","",28],[10,"new","","Creates a new JSON encoder whose output will be written to the writer\nspecified.",33],[4,"Error","",""],[10,"emit_nil","","",33],[10,"emit_usize","","",33],[10,"emit_u64","","",33],[10,"emit_u32","","",33],[10,"emit_u16","","",33],[10,"emit_u8","","",33],[10,"emit_isize","","",33],[10,"emit_i64","","",33],[10,"emit_i32","","",33],[10,"emit_i16","","",33],[10,"emit_i8","","",33],[10,"emit_bool","","",33],[10,"emit_f64","","",33],[10,"emit_f32","","",33],[10,"emit_char","","",33],[10,"emit_str","","",33],[10,"emit_enum","","",33],[10,"emit_enum_variant","","",33],[10,"emit_enum_variant_arg","","",33],[10,"emit_enum_struct_variant","","",33],[10,"emit_enum_struct_variant_field","","",33],[10,"emit_struct","","",33],[10,"emit_struct_field","","",33],[10,"emit_tuple","","",33],[10,"emit_tuple_arg","","",33],[10,"emit_tuple_struct","","",33],[10,"emit_tuple_struct_arg","","",33],[10,"emit_option","","",33],[10,"emit_option_none","","",33],[10,"emit_option_some","","",33],[10,"emit_seq","","",33],[10,"emit_seq_elt","","",33],[10,"emit_map","","",33],[10,"emit_map_elt_key","","",33],[10,"emit_map_elt_val","","",33],[10,"new","","Creates a new encoder whose output will be written to the specified writer",34],[10,"set_indent","","Set the number of spaces to indent for each level.\nThis is safe to set during encoding.",34],[4,"Error","",""],[10,"emit_nil","","",34],[10,"emit_usize","","",34],[10,"emit_u64","","",34],[10,"emit_u32","","",34],[10,"emit_u16","","",34],[10,"emit_u8","","",34],[10,"emit_isize","","",34],[10,"emit_i64","","",34],[10,"emit_i32","","",34],[10,"emit_i16","","",34],[10,"emit_i8","","",34],[10,"emit_bool","","",34],[10,"emit_f64","","",34],[10,"emit_f32","","",34],[10,"emit_char","","",34],[10,"emit_str","","",34],[10,"emit_enum","","",34],[10,"emit_enum_variant","","",34],[10,"emit_enum_variant_arg","","",34],[10,"emit_enum_struct_variant","","",34],[10,"emit_enum_struct_variant_field","","",34],[10,"emit_struct","","",34],[10,"emit_struct_field","","",34],[10,"emit_tuple","","",34],[10,"emit_tuple_arg","","",34],[10,"emit_tuple_struct","","",34],[10,"emit_tuple_struct_arg","","",34],[10,"emit_option","","",34],[10,"emit_option_none","","",34],[10,"emit_option_some","","",34],[10,"emit_seq","","",34],[10,"emit_seq_elt","","",34],[10,"emit_map","","",34],[10,"emit_map_elt_key","","",34],[10,"emit_map_elt_val","","",34],[10,"encode","","",26],[10,"from_reader","","Decodes a json value from an `&mut io::Reader`",26],[10,"from_str","","Decodes a json value from a string",26],[10,"pretty","","Borrow this json object as a pretty object to generate a pretty\nrepresentation for it via `Show`.",26],[10,"find","","If the Json value is an Object, returns the value associated with the provided key.\nOtherwise, returns None.",26],[10,"find_path","","Attempts to get a nested Json Object for each key in `keys`.\nIf any key is found not to exist, find_path will return None.\nOtherwise, it will return the Json value associated with the final key.",26],[10,"search","","If the Json value is an Object, performs a depth-first search until\na value associated with the provided key is found. If no value is found\nor the Json value is not an Object, returns None.",26],[10,"is_object","","Returns true if the Json value is an Object. Returns false otherwise.",26],[10,"as_object","","If the Json value is an Object, returns the associated BTreeMap.\nReturns None otherwise.",26],[10,"is_array","","Returns true if the Json value is an Array. Returns false otherwise.",26],[10,"as_array","","If the Json value is an Array, returns the associated vector.\nReturns None otherwise.",26],[10,"is_string","","Returns true if the Json value is a String. Returns false otherwise.",26],[10,"as_string","","If the Json value is a String, returns the associated str.\nReturns None otherwise.",26],[10,"is_number","","Returns true if the Json value is a Number. Returns false otherwise.",26],[10,"is_i64","","Returns true if the Json value is a i64. Returns false otherwise.",26],[10,"is_u64","","Returns true if the Json value is a u64. Returns false otherwise.",26],[10,"is_f64","","Returns true if the Json value is a f64. Returns false otherwise.",26],[10,"as_i64","","If the Json value is a number, return or cast it to a i64.\nReturns None otherwise.",26],[10,"as_u64","","If the Json value is a number, return or cast it to a u64.\nReturns None otherwise.",26],[10,"as_f64","","If the Json value is a number, return or cast it to a f64.\nReturns None otherwise.",26],[10,"is_boolean","","Returns true if the Json value is a Boolean. Returns false otherwise.",26],[10,"as_boolean","","If the Json value is a Boolean, returns the associated bool.\nReturns None otherwise.",26],[10,"is_null","","Returns true if the Json value is a Null. Returns false otherwise.",26],[10,"as_null","","If the Json value is a Null, returns ().\nReturns None otherwise.",26],[4,"Output","",""],[10,"index","","",26],[4,"Output","",""],[10,"index","","",26],[10,"fmt","","",30],[10,"clone","","",30],[10,"eq","","",30],[10,"ne","","",30],[10,"fmt","","",31],[10,"clone","","",31],[10,"eq","","",31],[10,"ne","","",31],[10,"new","","",35],[10,"len","","Returns The number of elements in the Stack.",35],[10,"is_empty","","Returns true if the stack is empty.",35],[10,"get","","Provides access to the StackElement at a given index.\nlower indices are at the bottom of the stack while higher indices are\nat the top.",35],[10,"is_equal_to","","Compares this stack with an array of StackElements.",35],[10,"starts_with","","Returns true if the bottom-most elements of this stack are the same as\nthe ones passed as parameter.",35],[10,"ends_with","","Returns true if the top-most elements of this stack are the same as\nthe ones passed as parameter.",35],[10,"top","","Returns the top-most element (if any).",35],[4,"Item","",""],[10,"next","","",36],[10,"new","","Creates the JSON parser.",36],[10,"stack","","Provides access to the current position in the logical structure of the\nJSON stream.",36],[10,"new","","Create a JSON Builder.",37],[10,"build","","",37],[10,"new","","Creates a new decoder instance for decoding the specified JSON value.",38],[4,"Error","",""],[10,"read_nil","","",38],[10,"read_usize","","",38],[10,"read_u8","","",38],[10,"read_u16","","",38],[10,"read_u32","","",38],[10,"read_u64","","",38],[10,"read_isize","","",38],[10,"read_i8","","",38],[10,"read_i16","","",38],[10,"read_i32","","",38],[10,"read_i64","","",38],[10,"read_f32","","",38],[10,"read_f64","","",38],[10,"read_bool","","",38],[10,"read_char","","",38],[10,"read_str","","",38],[10,"read_enum","","",38],[10,"read_enum_variant","","",38],[10,"read_enum_variant_arg","","",38],[10,"read_enum_struct_variant","","",38],[10,"read_enum_struct_variant_field","","",38],[10,"read_struct","","",38],[10,"read_struct_field","","",38],[10,"read_tuple","","",38],[10,"read_tuple_arg","","",38],[10,"read_tuple_struct","","",38],[10,"read_tuple_struct_arg","","",38],[10,"read_option","","",38],[10,"read_seq","","",38],[10,"read_seq_elt","","",38],[10,"read_map","","",38],[10,"read_map_elt_key","","",38],[10,"read_map_elt_val","","",38],[10,"error","","",38],[10,"to_json","","",26],[10,"to_json","collections::string","",0],[10,"to_json","collections::vec","",3],[10,"to_json","collections::btree::map","",12],[10,"to_json","std::collections::hash::map","",14],[10,"to_json","core::option","",4],[10,"fmt","rustc-serialize::json","Encodes a json value into a string",26],[10,"fmt","","Encodes a json value into a string",39],[10,"fmt","","Encodes a json value into a string",40],[10,"indent","","Set the indentation level for the emitted JSON",41],[10,"fmt","","Encodes a json value into a string",41],[10,"from_str","","",26],[10,"encode","collections::string","",0],[10,"decode","","",0],[10,"encode","alloc::boxed","",1],[10,"decode","","",1],[10,"decode","","",1],[10,"encode","alloc::rc","",2],[10,"decode","","",2],[10,"encode","collections::vec","",3],[10,"decode","","",3],[10,"encode","core::option","",4],[10,"decode","","",4],[10,"encode","std::path::posix","",5],[10,"decode","","",5],[10,"encode","std::path::windows","",6],[10,"decode","","",6],[10,"encode","core::cell","",7],[10,"decode","","",7],[10,"encode","","",8],[10,"decode","","",8],[10,"encode","alloc::arc","",9],[10,"decode","","",9],[6,"Decoder","rustc-serialize",""],[17,"Error","rustc-serialize::Decoder",""],[9,"read_nil","rustc-serialize","",42],[9,"read_usize","","",42],[9,"read_u64","","",42],[9,"read_u32","","",42],[9,"read_u16","","",42],[9,"read_u8","","",42],[9,"read_isize","","",42],[9,"read_i64","","",42],[9,"read_i32","","",42],[9,"read_i16","","",42],[9,"read_i8","","",42],[9,"read_bool","","",42],[9,"read_f64","","",42],[9,"read_f32","","",42],[9,"read_char","","",42],[9,"read_str","","",42],[9,"read_enum","","",42],[9,"read_enum_variant","","",42],[9,"read_enum_variant_arg","","",42],[9,"read_enum_struct_variant","","",42],[9,"read_enum_struct_variant_field","","",42],[9,"read_struct","","",42],[9,"read_struct_field","","",42],[9,"read_tuple","","",42],[9,"read_tuple_arg","","",42],[9,"read_tuple_struct","","",42],[9,"read_tuple_struct_arg","","",42],[9,"read_option","","",42],[9,"read_seq","","",42],[9,"read_seq_elt","","",42],[9,"read_map","","",42],[9,"read_map_elt_key","","",42],[9,"read_map_elt_val","","",42],[9,"error","","",42],[6,"Encoder","",""],[17,"Error","rustc-serialize::Encoder",""],[9,"emit_nil","rustc-serialize","",43],[9,"emit_usize","","",43],[9,"emit_u64","","",43],[9,"emit_u32","","",43],[9,"emit_u16","","",43],[9,"emit_u8","","",43],[9,"emit_isize","","",43],[9,"emit_i64","","",43],[9,"emit_i32","","",43],[9,"emit_i16","","",43],[9,"emit_i8","","",43],[9,"emit_bool","","",43],[9,"emit_f64","","",43],[9,"emit_f32","","",43],[9,"emit_char","","",43],[9,"emit_str","","",43],[9,"emit_enum","","",43],[9,"emit_enum_variant","","",43],[9,"emit_enum_variant_arg","","",43],[9,"emit_enum_struct_variant","","",43],[9,"emit_enum_struct_variant_field","","",43],[9,"emit_struct","","",43],[9,"emit_struct_field","","",43],[9,"emit_tuple","","",43],[9,"emit_tuple_arg","","",43],[9,"emit_tuple_struct","","",43],[9,"emit_tuple_struct_arg","","",43],[9,"emit_option","","",43],[9,"emit_option_none","","",43],[9,"emit_option_some","","",43],[9,"emit_seq","","",43],[9,"emit_seq_elt","","",43],[9,"emit_map","","",43],[9,"emit_map_elt_key","","",43],[9,"emit_map_elt_val","","",43],[6,"Decodable","",""],[9,"decode","","",44],[6,"Encodable","",""],[9,"encode","","",45],[6,"DecoderHelpers","",""],[9,"read_to_vec","","",46],[6,"EncoderHelpers","",""],[9,"emit_from_vec","","",47]],"paths":[[1,"String"],[1,"Box"],[1,"Rc"],[1,"Vec"],[2,"Option"],[1,"Path"],[1,"Path"],[1,"Cell"],[1,"RefCell"],[1,"Arc"],[1,"DList"],[1,"RingBuf"],[1,"BTreeMap"],[1,"BTreeSet"],[1,"HashMap"],[1,"HashSet"],[1,"VecMap"],[1,"Config"],[2,"CharacterSet"],[2,"Newline"],[2,"FromBase64Error"],[6,"ToBase64"],[6,"FromBase64"],[2,"FromHexError"],[6,"ToHex"],[6,"FromHex"],[2,"Json"],[2,"ErrorCode"],[2,"ParserError"],[2,"DecoderError"],[2,"JsonEvent"],[2,"StackElement"],[6,"ToJson"],[1,"Encoder"],[1,"PrettyEncoder"],[1,"Stack"],[1,"Parser"],[1,"Builder"],[1,"Decoder"],[1,"PrettyJson"],[1,"AsJson"],[1,"AsPrettyJson"],[6,"Decoder"],[6,"Encoder"],[6,"Decodable"],[6,"Encodable"],[6,"DecoderHelpers"],[6,"EncoderHelpers"]]};

searchIndex['openssl'] = {"items":[[0,"","openssl",""],[0,"asn1","",""],[1,"Asn1Time","openssl::asn1",""],[10,"new","","Wraps existing ASN1_TIME and takes ownership",0],[10,"days_from_now","","Creates a new time on specified interval in days from now",0],[10,"get_handle","","Returns raw handle",0],[10,"drop","","",0],[0,"bn","openssl",""],[1,"BigNum","openssl::bn",""],[2,"RNGProperty","",""],[12,"MsbMaybeZero","","",1],[12,"MsbOne","","",1],[12,"TwoMsbOne","","",1],[0,"unchecked","",""],[4,"Output","openssl::bn::unchecked",""],[4,"Output","",""],[4,"Output","",""],[4,"Output","",""],[4,"Output","",""],[4,"Output","",""],[4,"Output","",""],[10,"clone","openssl::bn","",2],[4,"Output","openssl::bn::unchecked",""],[10,"neg","openssl::bn","",2],[10,"new","","",2],[10,"new_from","","",2],[10,"from_dec_str","","",2],[10,"from_hex_str","","",2],[10,"new_from_slice","","",2],[10,"checked_sqr","","",2],[10,"checked_nnmod","","",2],[10,"checked_mod_add","","",2],[10,"checked_mod_sub","","",2],[10,"checked_mod_mul","","",2],[10,"checked_mod_sqr","","",2],[10,"checked_exp","","",2],[10,"checked_mod_exp","","",2],[10,"checked_mod_inv","","",2],[10,"add_word","","",2],[10,"sub_word","","",2],[10,"mul_word","","",2],[10,"div_word","","",2],[10,"mod_word","","",2],[10,"checked_gcd","","",2],[10,"checked_generate_prime","","",2],[10,"is_prime","","",2],[10,"is_prime_fast","","",2],[10,"checked_new_random","","",2],[10,"checked_new_pseudo_random","","",2],[10,"checked_rand_in_range","","",2],[10,"checked_pseudo_rand_in_range","","",2],[10,"set_bit","","",2],[10,"clear_bit","","",2],[10,"is_bit_set","","",2],[10,"mask_bits","","",2],[10,"checked_shl1","","",2],[10,"checked_shr1","","",2],[10,"checked_add","","",2],[10,"checked_sub","","",2],[10,"checked_mul","","",2],[10,"checked_div","","",2],[10,"checked_mod","","",2],[10,"checked_shl","","",2],[10,"checked_shr","","",2],[10,"negate","","",2],[10,"abs_cmp","","",2],[10,"is_negative","","",2],[10,"num_bits","","",2],[10,"num_bytes","","",2],[10,"to_vec","","",2],[10,"to_dec_str","","",2],[10,"to_hex_str","","",2],[10,"fmt","","",2],[10,"eq","","",2],[10,"cmp","","",2],[10,"partial_cmp","","",2],[10,"drop","","",2],[0,"bio","openssl",""],[1,"MemBio","openssl::bio",""],[10,"drop","","",3],[10,"new","","Creates a new owned memory based BIO",3],[10,"borrowed","","Returns a \"borrow\", i.e. it has no ownership",3],[10,"unwrap","","Consumes current bio and returns wrapped value\nNote that data ownership is lost and\nshould be managed manually",3],[10,"get_handle","","Temporarily gets wrapped value",3],[10,"read","","",3],[10,"write","","",3],[0,"crypto","openssl",""],[0,"hash","openssl::crypto",""],[1,"HasherContext","openssl::crypto::hash",""],[1,"Hasher","",""],[2,"HashType","",""],[12,"MD5","","",4],[12,"SHA1","","",4],[12,"SHA224","","",4],[12,"SHA256","","",4],[12,"SHA384","","",4],[12,"SHA512","","",4],[12,"RIPEMD160","","",4],[3,"evpmd","",""],[3,"hash","","Hashes the supplied input data using hash t, returning the resulting hash\nvalue"],[10,"new","","",5],[10,"drop","","",5],[10,"write","","",6],[10,"new","","",6],[10,"with_context","","",6],[10,"update","","Update this hasher with more input bytes",6],[10,"finalize","","Return the digest of all bytes added to this hasher since its last\ninitialization",6],[10,"finalize_reuse","","Return the digest of all bytes added to this hasher since its last\ninitialization and its context for reuse",6],[0,"hmac","openssl::crypto",""],[1,"HMAC","openssl::crypto::hmac",""],[3,"HMAC","",""],[10,"update","","",7],[10,"finalize","","",7],[10,"drop","","",7],[0,"pkcs5","openssl::crypto",""],[3,"pbkdf2_hmac_sha1","openssl::crypto::pkcs5","Derives a key from a password and salt using the PBKDF2-HMAC-SHA1 algorithm."],[0,"pkey","openssl::crypto",""],[1,"PKey","openssl::crypto::pkey",""],[2,"Role","","Represents a role an asymmetric key might be appropriate for."],[12,"Encrypt","","",8],[12,"Decrypt","","",8],[12,"Sign","","",8],[12,"Verify","","",8],[2,"EncryptionPadding","","Type of encryption padding to use."],[12,"OAEP","","",9],[12,"PKCS1v15","","",9],[10,"new","","",10],[10,"gen","","",10],[10,"save_pub","","Returns a serialized form of the public key, suitable for load_pub().",10],[10,"load_pub","","Loads a serialized form of the public key, as produced by save_pub().",10],[10,"save_priv","","Returns a serialized form of the public and private keys, suitable for\nload_priv().",10],[10,"load_priv","","Loads a serialized form of the public and private keys, as produced by\nsave_priv().",10],[10,"write_pem","","Stores private key as a PEM",10],[10,"size","","Returns the size of the public key modulus.",10],[10,"can","","Returns whether this pkey object can perform the specified role.",10],[10,"max_data","","Returns the maximum amount of data that can be encrypted by an encrypt()\ncall.",10],[10,"encrypt_with_padding","","",10],[10,"decrypt_with_padding","","",10],[10,"encrypt","","Encrypts data using OAEP padding, returning the encrypted data. The\nsupplied data must not be larger than max_data().",10],[10,"decrypt","","Decrypts data, expecting OAEP padding, returning the decrypted data.",10],[10,"sign","","Signs data, using OpenSSL's default scheme and sha256. Unlike encrypt(),\ncan process an arbitrary amount of data; returns the signature.",10],[10,"verify","","Verifies a signature s (using OpenSSL's default scheme and sha256) on a\nmessage m. Returns true if the signature is valid, and false otherwise.",10],[10,"sign_with_hash","","",10],[10,"verify_with_hash","","",10],[10,"get_handle","","",10],[10,"drop","","",10],[0,"rand","openssl::crypto",""],[3,"rand_bytes","openssl::crypto::rand",""],[0,"symm","openssl::crypto",""],[1,"Crypter","openssl::crypto::symm","Represents a symmetric cipher context."],[2,"Mode","",""],[12,"Encrypt","","",11],[12,"Decrypt","","",11],[2,"Type","",""],[12,"AES_128_ECB","","",12],[12,"AES_128_CBC","","",12],[12,"AES_256_ECB","","",12],[12,"AES_256_CBC","","",12],[12,"RC4_128","","",12],[3,"encrypt","","Encrypts data, using the specified crypter type in encrypt mode with the\nspecified key and iv; returns the resulting (encrypted) data."],[3,"decrypt","","Decrypts data, using the specified crypter type in decrypt mode with the\nspecified key and iv; returns the resulting (decrypted) data."],[10,"new","","",13],[10,"pad","","Enables or disables padding. If padding is disabled, total amount of\ndata encrypted must be a multiple of block size.",13],[10,"init","","Initializes this crypter.",13],[10,"update","","Update this crypter with more data to encrypt or decrypt. Returns\nencrypted or decrypted bytes.",13],[10,"finalize","","Finish crypting. Returns the remaining partial block of output, if any.",13],[10,"drop","","",13],[0,"memcmp","openssl::crypto",""],[3,"eq","openssl::crypto::memcmp","Returns `true` iff `a` and `b` contain the same bytes."],[0,"ssl","openssl",""],[1,"SslContext","openssl::ssl","An SSL context object"],[1,"Ssl","",""],[1,"SslStream","","A stream wrapper which handles SSL encryption for an underlying stream."],[2,"SslMethod","","Determines the SSL method supported"],[12,"Sslv23","","Support the SSLv2, SSLv3 and TLSv1 protocols",14],[12,"Sslv3","","Only support the SSLv3 protocol",14],[12,"Tlsv1","","Only support the TLSv1 protocol",14],[2,"SslVerifyMode","","Determines the type of certificate verification used"],[12,"SslVerifyPeer","","Verify that the server's certificate is trusted",15],[12,"SslVerifyNone","","Do not verify the server's certificate",15],[2,"MaybeSslStream","","A utility type to help in cases where the use of SSL is decided at runtime."],[12,"Ssl","","A connection using SSL",16],[12,"Normal","","A connection not using SSL",16],[0,"error","",""],[2,"SslError","openssl::ssl::error","An SSL error"],[12,"StreamError","","The underlying stream reported an error",17],[12,"SslSessionClosed","","The SSL session has been closed by the other end",17],[12,"OpenSslErrors","","An error in the OpenSSL library",17],[2,"OpensslError","","An error from the OpenSSL library"],[12,"UnknownError","","An unknown error",18],[11,"library","openssl::ssl::error::OpensslError","The library reporting the error",18],[11,"function","","The function reporting the error",18],[11,"reason","","The reason for the error",18],[10,"eq","openssl::ssl::error","",17],[10,"ne","","",17],[10,"clone","","",17],[10,"fmt","","",17],[10,"description","","",17],[10,"cause","","",17],[10,"eq","","",18],[10,"ne","","",18],[10,"clone","","",18],[10,"fmt","","",18],[10,"get","","Creates a new `OpenSslErrors` with the current contents of the error\nstack.",17],[10,"from_error","","Creates an `SslError` from the raw numeric error code.",17],[4,"VerifyCallback","openssl::ssl","The signature of functions that can be used to manually verify certificates"],[4,"VerifyCallbackData","","The signature of functions that can be used to manually verify certificates\nwhen user-data should be carried for all verification process"],[10,"eq","","",14],[10,"ne","","",14],[10,"hash","","",14],[10,"fmt","","",14],[10,"clone","","",14],[10,"fmt","","",15],[10,"clone","","",15],[10,"fmt","","",19],[10,"drop","","",19],[10,"new","","Creates a new SSL context.",19],[10,"set_verify","","Configures the certificate verification method for new connections.",19],[10,"set_verify_with_data","","Configures the certificate verification method for new connections also\ncarrying supplied data.",19],[10,"set_verify_depth","","Sets verification depth",19],[10,"set_CA_file","","Specifies the file that contains trusted CA certificates.",19],[10,"set_certificate_file","","Specifies the file that contains certificate",19],[10,"set_private_key_file","","Specifies the file that contains private key",19],[10,"set_cipher_list","","",19],[10,"fmt","","",20],[10,"drop","","",20],[10,"new","","",20],[10,"set_hostname","","Set the host name to be used with SNI (Server Name Indication).",20],[10,"get_peer_certificate","","",20],[10,"clone","","",21],[10,"fmt","","",21],[10,"new_server_from","","",21],[10,"new_from","","Attempts to create a new SSL stream from a given `Ssl` instance.",21],[10,"new","","Creates a new SSL stream",21],[10,"new_server","","Creates a new SSL server stream",21],[10,"get_inner","","Returns a mutable reference to the underlying stream.",21],[10,"get_ref","","Returns a reference to the underlying stream.",21],[10,"get_mut","","Returns a mutable reference to the underlying stream.",21],[10,"get_compression","","Get the compression currently in use.  The result will be\neither None, indicating no compression is in use, or a string\nwith the compression name.",21],[10,"read","","",21],[10,"write","","",21],[10,"flush","","",21],[10,"fmt","","",16],[10,"read","","",16],[10,"write","","",16],[10,"flush","","",16],[10,"get_ref","","Returns a reference to the underlying stream.",16],[10,"get_mut","","Returns a mutable reference to the underlying stream.",16],[0,"x509","openssl",""],[1,"X509StoreContext","openssl::x509",""],[1,"X509Generator","","Generator of private key/certificate pairs"],[1,"X509","","A public key certificate"],[1,"X509Name","",""],[2,"X509FileType","",""],[12,"PEM","","",22],[12,"ASN1","","",22],[12,"Default","","",22],[2,"KeyUsage","",""],[12,"DigitalSignature","","",23],[12,"NonRepudiation","","",23],[12,"KeyEncipherment","","",23],[12,"DataEncipherment","","",23],[12,"KeyAgreement","","",23],[12,"KeyCertSign","","",23],[12,"CRLSign","","",23],[12,"EncipherOnly","","",23],[12,"DecipherOnly","","",23],[2,"ExtKeyUsage","",""],[12,"ServerAuth","","",24],[12,"ClientAuth","","",24],[12,"CodeSigning","","",24],[12,"EmailProtection","","",24],[12,"TimeStamping","","",24],[12,"MsCodeInd","","",24],[12,"MsCodeCom","","",24],[12,"MsCtlSign","","",24],[12,"MsSgc","","",24],[12,"MsEfs","","",24],[12,"NsSgc","","",24],[2,"X509ValidationError","",""],[12,"X509UnableToGetIssuerCert","","",25],[12,"X509UnableToGetCrl","","",25],[12,"X509UnableToDecryptCertSignature","","",25],[12,"X509UnableToDecryptCrlSignature","","",25],[12,"X509UnableToDecodeIssuerPublicKey","","",25],[12,"X509CertSignatureFailure","","",25],[12,"X509CrlSignatureFailure","","",25],[12,"X509CertNotYetValid","","",25],[12,"X509CertHasExpired","","",25],[12,"X509CrlNotYetValid","","",25],[12,"X509CrlHasExpired","","",25],[12,"X509ErrorInCertNotBeforeField","","",25],[12,"X509ErrorInCertNotAfterField","","",25],[12,"X509ErrorInCrlLastUpdateField","","",25],[12,"X509ErrorInCrlNextUpdateField","","",25],[12,"X509OutOfMem","","",25],[12,"X509DepthZeroSelfSignedCert","","",25],[12,"X509SelfSignedCertInChain","","",25],[12,"X509UnableToGetIssuerCertLocally","","",25],[12,"X509UnableToVerifyLeafSignature","","",25],[12,"X509CertChainTooLong","","",25],[12,"X509CertRevoked","","",25],[12,"X509InvalidCA","","",25],[12,"X509PathLengthExceeded","","",25],[12,"X509InvalidPurpose","","",25],[12,"X509CertUntrusted","","",25],[12,"X509CertRejected","","",25],[12,"X509SubjectIssuerMismatch","","",25],[12,"X509AkidSkidMismatch","","",25],[12,"X509AkidIssuerSerialMismatch","","",25],[12,"X509KeyusageNoCertsign","","",25],[12,"X509UnableToGetCrlIssuer","","",25],[12,"X509UnhandledCriticalExtension","","",25],[12,"X509KeyusageNoCrlSign","","",25],[12,"X509UnhandledCriticalCrlExtension","","",25],[12,"X509InvalidNonCA","","",25],[12,"X509ProxyPathLengthExceeded","","",25],[12,"X509KeyusageNoDigitalSignature","","",25],[12,"X509ProxyCertificatesNotAllowed","","",25],[12,"X509InvalidExtension","","",25],[12,"X509InavlidPolicyExtension","","",25],[12,"X509NoExplicitPolicy","","",25],[12,"X509DifferentCrlScope","","",25],[12,"X509UnsupportedExtensionFeature","","",25],[12,"X509UnnestedResource","","",25],[12,"X509PermittedVolation","","",25],[12,"X509ExcludedViolation","","",25],[12,"X509SubtreeMinmax","","",25],[12,"X509UnsupportedConstraintType","","",25],[12,"X509UnsupportedConstraintSyntax","","",25],[12,"X509UnsupportedNameSyntax","","",25],[12,"X509CrlPathValidationError","","",25],[12,"X509ApplicationVerification","","",25],[12,"X509UnknownError","","",25],[10,"new","","",26],[10,"get_error","","",26],[10,"get_current_cert","","",26],[10,"clone","","",23],[10,"clone","","",24],[10,"new","","Creates a new generator with the following defaults:",27],[10,"set_bitlength","","Sets desired bit length",27],[10,"set_valid_period","","Sets certificate validity period in days since today",27],[10,"set_CN","","Sets Common Name of certificate",27],[10,"set_usage","","Sets what for certificate could be used",27],[10,"set_ext_usage","","Sets allowed extended usage of certificate",27],[10,"set_sign_hash","","",27],[10,"generate","","Generates a private key and a signed certificate and returns them",27],[10,"new","","Creates new from handle with desired ownership.",28],[10,"new_in_ctx","","Creates a new certificate from context. Doesn't take ownership\nof handle.",28],[10,"from_pem","","Reads certificate from PEM, takes ownership of handle",28],[10,"subject_name","","",28],[10,"fingerprint","","Returns certificate fingerprint calculated using provided hash",28],[10,"write_pem","","Writes certificate as PEM",28],[10,"drop","","",28]],"paths":[[1,"Asn1Time"],[2,"RNGProperty"],[1,"BigNum"],[1,"MemBio"],[2,"HashType"],[1,"HasherContext"],[1,"Hasher"],[1,"HMAC"],[2,"Role"],[2,"EncryptionPadding"],[1,"PKey"],[2,"Mode"],[2,"Type"],[1,"Crypter"],[2,"SslMethod"],[2,"SslVerifyMode"],[2,"MaybeSslStream"],[2,"SslError"],[2,"OpensslError"],[1,"SslContext"],[1,"Ssl"],[1,"SslStream"],[2,"X509FileType"],[2,"KeyUsage"],[2,"ExtKeyUsage"],[2,"X509ValidationError"],[1,"X509StoreContext"],[1,"X509Generator"],[1,"X509"]]};

searchIndex['mime'] = {"items":[[0,"","mime","# Mime"],[1,"Mime","","Mime, or Media Type. Encapsulates common registers types."],[2,"TopLevel","",""],[12,"Star","","",0],[12,"Text","","",0],[12,"Image","","",0],[12,"Audio","","",0],[12,"Video","","",0],[12,"Application","","",0],[12,"Multipart","","",0],[12,"Message","","",0],[12,"Model","","",0],[12,"Ext","","",0],[2,"SubLevel","",""],[12,"Star","","",1],[12,"Plain","","",1],[12,"Html","","",1],[12,"Xml","","",1],[12,"Javascript","","",1],[12,"Css","","",1],[12,"Json","","",1],[12,"WwwFormUrlEncoded","","",1],[12,"FormData","","",1],[12,"Png","","",1],[12,"Gif","","",1],[12,"Bmp","","",1],[12,"Jpeg","","",1],[12,"Ext","","",1],[2,"Attr","",""],[12,"Charset","","",2],[12,"Q","","",2],[12,"Ext","","",2],[2,"Value","",""],[12,"Utf8","","",3],[12,"Ext","","",3],[4,"Param","",""],[10,"fmt","","",4],[10,"eq","","",4],[10,"ne","","",4],[10,"clone","","",4],[10,"fmt","","",0],[10,"clone","","",0],[10,"eq","","",0],[10,"fmt","","",0],[10,"from_str","","",0],[10,"fmt","","",1],[10,"clone","","",1],[10,"eq","","",1],[10,"fmt","","",1],[10,"from_str","","",1],[10,"fmt","","",2],[10,"clone","","",2],[10,"eq","","",2],[10,"fmt","","",2],[10,"from_str","","",2],[10,"fmt","","",3],[10,"clone","","",3],[10,"eq","","",3],[10,"fmt","","",3],[10,"from_str","","",3],[10,"fmt","","",4],[10,"from_str","","",4]],"paths":[[2,"TopLevel"],[2,"SubLevel"],[2,"Attr"],[2,"Value"],[1,"Mime"]]};

searchIndex['log'] = {"items":[[0,"","log","Utilities for program-wide and customizable logging"],[1,"LogLevel","","Wraps the log level with fmt implementations."],[1,"LogRecord","","A LogRecord is created by the logging macros, and passed as the only\nargument to Loggers."],[11,"module_path","","The module path of where the LogRecord originated.",0],[11,"level","","The LogLevel of this record.",0],[11,"args","","The arguments from the log line.",0],[11,"file","","The file of where the LogRecord originated.",0],[11,"line","","The line number of where the LogRecord originated.",0],[3,"set_logger","","Replaces the task-local logger with the specified logger, returning the old\nlogger."],[0,"macros","","Logging macros"],[18,"MAX_LOG_LEVEL","","Maximum logging level of a module that can be specified. Common logging\nlevels are found in the DEBUG/INFO/WARN/ERROR constants."],[18,"DEBUG","","Debug log level"],[18,"INFO","","Info log level"],[18,"WARN","","Warn log level"],[18,"ERROR","","Error log level"],[6,"Logger","","A trait used to represent an interface to a task-local logger. Each task\ncan have its own custom logger which can respond to logging messages\nhowever it likes."],[9,"log","","Logs a single message described by the `record`.",1],[10,"fmt","","",2],[10,"partial_cmp","","",2],[10,"lt","","",2],[10,"le","","",2],[10,"gt","","",2],[10,"ge","","",2],[10,"eq","","",2],[10,"ne","","",2],[10,"fmt","","",2],[10,"fmt","","",0],[15,"log!","","The standard logging macro"],[15,"error!","","A convenience macro for logging at the error log level."],[15,"warn!","","A convenience macro for logging at the warning log level."],[15,"info!","","A convenience macro for logging at the info log level."],[15,"debug!","","A convenience macro for logging at the debug log level. This macro can also\nbe omitted at compile time by passing `--cfg ndebug` to the compiler. If\nthis option is not passed, then debug statements will be compiled."],[15,"log_enabled!","","A macro to test whether a log level is enabled for the current module."]],"paths":[[1,"LogRecord"],[6,"Logger"],[1,"LogLevel"]]};

searchIndex['time'] = {"items":[[0,"","time","Simple time handling."],[1,"Timespec","","A record specifying a time value in seconds and nanoseconds."],[11,"sec","","",0],[11,"nsec","","",0],[1,"PreciseTime","","An opaque structure representing a moment in time."],[1,"Tm","","Holds a calendar date and time broken down into its components (year, month, day, and so on),\nalso called a broken-down time value."],[11,"tm_sec","","Seconds after the minute - [0, 60]",1],[11,"tm_min","","Minutes after the hour - [0, 59]",1],[11,"tm_hour","","Hours after midnight - [0, 23]",1],[11,"tm_mday","","Day of the month - [1, 31]",1],[11,"tm_mon","","Months since January - [0, 11]",1],[11,"tm_year","","Years since 1900",1],[11,"tm_wday","","Days since Sunday - [0, 6]. 0 = Sunday, 1 = Monday, ..., 6 = Saturday.",1],[11,"tm_yday","","Days since January 1 - [0, 365]",1],[11,"tm_isdst","","Daylight Saving Time flag.",1],[11,"tm_utcoff","","Identifies the time zone that was used to compute this broken-down time value, including any\nadjustment for Daylight Saving Time. This is the number of seconds east of UTC. For example,\nfor U.S. Pacific Daylight Time, the value is -7*60*60 = -25200.",1],[11,"tm_nsec","","Nanoseconds after the second - [0, 10<sup>9</sup> - 1]",1],[1,"TmFmt","","A wrapper around a `Tm` and format string that implements Show."],[2,"ParseError","",""],[12,"InvalidSecond","","",2],[12,"InvalidMinute","","",2],[12,"InvalidHour","","",2],[12,"InvalidDay","","",2],[12,"InvalidMonth","","",2],[12,"InvalidYear","","",2],[12,"InvalidDayOfWeek","","",2],[12,"InvalidDayOfMonth","","",2],[12,"InvalidDayOfYear","","",2],[12,"InvalidZoneOffset","","",2],[12,"InvalidTime","","",2],[12,"MissingFormatConverter","","",2],[12,"InvalidFormatSpecifier","","",2],[12,"UnexpectedCharacter","","",2],[3,"get_time","","Returns the current time as a `timespec` containing the seconds and\nnanoseconds since 1970-01-01T00:00:00Z."],[3,"precise_time_ns","","Returns the current value of a high-resolution performance counter\nin nanoseconds since an unspecified epoch."],[3,"precise_time_s","","Returns the current value of a high-resolution performance counter\nin seconds since an unspecified epoch."],[3,"tzset","",""],[3,"empty_tm","",""],[3,"at_utc","","Returns the specified time in UTC"],[3,"now_utc","","Returns the current time in UTC"],[3,"at","","Returns the specified time in the local timezone"],[3,"now","","Returns the current time in the local timezone"],[3,"strptime","","Parses the time from the string according to the format string."],[3,"strftime","","Formats the time according to the format string."],[10,"fmt","","",0],[10,"cmp","","",0],[10,"partial_cmp","","",0],[10,"lt","","",0],[10,"le","","",0],[10,"gt","","",0],[10,"ge","","",0],[10,"eq","","",0],[10,"ne","","",0],[10,"clone","","",0],[10,"new","","",0],[4,"Output","",""],[10,"add","","",0],[4,"Output","",""],[10,"sub","","",0],[4,"Output","",""],[10,"sub","","",0],[10,"clone","","",3],[10,"now","","Returns a `PreciseTime` representing the current moment in time.",3],[10,"to","","Returns a `Duration` representing the span of time from the value of\n`self` to the value of `later`.",3],[10,"fmt","","",1],[10,"eq","","",1],[10,"ne","","",1],[10,"clone","","",1],[4,"Output","",""],[10,"add","","The resulting Tm is in UTC.",1],[4,"Output","",""],[10,"sub","","The resulting Tm is in UTC.",1],[10,"partial_cmp","","",1],[10,"cmp","","",1],[10,"to_timespec","","Convert time to the seconds from January 1, 1970",1],[10,"to_local","","Convert time to the local timezone",1],[10,"to_utc","","Convert time to the UTC",1],[10,"ctime","","Returns a TmFmt that outputs according to the `asctime` format in ISO\nC, in the local timezone.",1],[10,"asctime","","Returns a TmFmt that outputs according to the `asctime` format in ISO\nC.",1],[10,"strftime","","Formats the time according to the format string.",1],[10,"rfc822","","Returns a TmFmt that outputs according to RFC 822.",1],[10,"rfc822z","","Returns a TmFmt that outputs according to RFC 822 with Zulu time.",1],[10,"rfc3339","","Returns a TmFmt that outputs according to RFC 3339. RFC 3339 is\ncompatible with ISO 8601.",1],[10,"fmt","","",2],[10,"eq","","",2],[10,"ne","","",2],[10,"fmt","","",2],[10,"fmt","","",4],[10,"fmt","","",4]],"paths":[[1,"Timespec"],[1,"Tm"],[2,"ParseError"],[1,"PreciseTime"],[1,"TmFmt"]]};

searchIndex['regex'] = {"items":[[0,"","regex","This crate provides a native implementation of regular expressions that is\nheavily based on RE2 both in syntax and in implementation. Notably,\nbackreferences and arbitrary lookahead/lookbehind assertions are not\nprovided. In return, regular expression searching provided by this package\nhas excellent worst case performance. The specific syntax supported is\ndocumented further down."],[1,"Error","","Error corresponds to something that can go wrong while parsing\na regular expression."],[11,"pos","","The *approximate* character index of where the error occurred.",0],[11,"msg","","A message describing the error.",0],[1,"Captures","","Captures represents a group of captured strings for a single match."],[1,"SubCaptures","","An iterator over capture groups for a particular match of a regular\nexpression."],[1,"SubCapturesPos","","An iterator over capture group positions for a particular match of a\nregular expression."],[1,"FindCaptures","","An iterator that yields all non-overlapping capture groups matching a\nparticular regular expression."],[1,"FindMatches","","An iterator over all non-overlapping matches for a particular string."],[1,"NoExpand","","NoExpand indicates literal string replacement."],[1,"RegexSplits","","Yields all substrings delimited by a regular expression match."],[1,"RegexSplitsN","","Yields at most `N` substrings delimited by a regular expression match."],[2,"Regex","","A compiled regular expression"],[3,"quote","","Escapes all regular expression meta characters in `text`."],[3,"is_match","","Tests if the given regular expression matches somewhere in the text given."],[10,"fmt","","",0],[10,"fmt","","",0],[10,"clone","","",1],[10,"fmt","","Shows the original regular expression.",1],[10,"fmt","","Shows the original regular expression.",1],[10,"new","","Compiles a dynamic regular expression. Once compiled, it can be\nused repeatedly to search, split or replace text in a string.",1],[10,"is_match","","Returns true if and only if the regex matches the string given.",1],[10,"find","","Returns the start and end byte range of the leftmost-first match in\n`text`. If no match exists, then `None` is returned.",1],[10,"find_iter","","Returns an iterator for each successive non-overlapping match in\n`text`, returning the start and end byte indices with respect to\n`text`.",1],[10,"captures","","Returns the capture groups corresponding to the leftmost-first\nmatch in `text`. Capture group `0` always corresponds to the entire\nmatch. If no match is found, then `None` is returned.",1],[10,"captures_iter","","Returns an iterator over all the non-overlapping capture groups matched\nin `text`. This is operationally the same as `find_iter` (except it\nyields information about submatches).",1],[10,"split","","Returns an iterator of substrings of `text` delimited by a match\nof the regular expression.\nNamely, each element of the iterator corresponds to text that *isn't*\nmatched by the regular expression.",1],[10,"splitn","","Returns an iterator of at most `limit` substrings of `text` delimited\nby a match of the regular expression. (A `limit` of `0` will return no\nsubstrings.)\nNamely, each element of the iterator corresponds to text that *isn't*\nmatched by the regular expression.\nThe remainder of the string that is not split will be the last element\nin the iterator.",1],[10,"replace","","Replaces the leftmost-first match with the replacement provided.\nThe replacement can be a regular string (where `$N` and `$name` are\nexpanded to match capture groups) or a function that takes the matches'\n`Captures` and returns the replaced string.",1],[10,"replace_all","","Replaces all non-overlapping matches in `text` with the\nreplacement provided. This is the same as calling `replacen` with\n`limit` set to `0`.",1],[10,"replacen","","Replaces at most `limit` non-overlapping matches in `text` with the\nreplacement provided. If `limit` is 0, then all non-overlapping matches\nare replaced.",1],[10,"as_str","","Returns the original string of this regex.",1],[10,"reg_replace","","",2],[10,"next","","",3],[10,"next","","",4],[10,"pos","","Returns the start and end positions of the Nth capture group.\nReturns `None` if `i` is not a valid capture group or if the capture\ngroup did not match anything.\nThe positions returned are *always* byte indices with respect to the\noriginal string matched.",5],[10,"at","","Returns the matched string for the capture group `i`.  If `i` isn't\na valid capture group or didn't match anything, then `None` is\nreturned.",5],[10,"name","","Returns the matched string for the capture group named `name`.  If\n`name` isn't a valid capture group or didn't match anything, then\n`None` is returned.",5],[10,"iter","","Creates an iterator of all the capture groups in order of appearance\nin the regular expression.",5],[10,"iter_pos","","Creates an iterator of all the capture group positions in order of\nappearance in the regular expression. Positions are byte indices\nin terms of the original string matched.",5],[10,"expand","","Expands all instances of `$name` in `text` to the corresponding capture\ngroup `name`.",5],[10,"len","","Returns the number of captured groups.",5],[10,"is_empty","","Returns if there are no captured groups.",5],[10,"next","","",6],[10,"next","","",7],[10,"next","","",8],[10,"next","","",9],[6,"Replacer","","Replacer describes types that can be used to replace matches in a string."],[9,"reg_replace","","Returns a possibly owned string that is used to replace the match\ncorresponding to the `caps` capture group.",10]],"paths":[[1,"Error"],[2,"Regex"],[1,"NoExpand"],[1,"RegexSplits"],[1,"RegexSplitsN"],[1,"Captures"],[1,"SubCaptures"],[1,"SubCapturesPos"],[1,"FindCaptures"],[1,"FindMatches"],[6,"Replacer"]]};

searchIndex['openssl-sys'] = {"items":[[0,"","openssl-sys",""],[1,"EVP_MD_CTX","",""],[1,"HMAC_CTX","",""],[1,"X509V3_CTX","",""],[1,"BIGNUM","",""],[11,"d","","",0],[11,"top","","",0],[11,"dmax","","",0],[11,"neg","","",0],[11,"flags","","",0],[3,"init","",""],[3,"BIO_eof","",""],[3,"ASN1_INTEGER_set","",""],[3,"ASN1_STRING_type_new","",""],[3,"ASN1_TIME_free","",""],[3,"BIO_ctrl","",""],[3,"BIO_free_all","",""],[3,"BIO_new","",""],[3,"BIO_read","",""],[3,"BIO_write","",""],[3,"BIO_s_mem","",""],[3,"BN_new","",""],[3,"BN_dup","",""],[3,"BN_clear_free","",""],[3,"BN_CTX_new","",""],[3,"BN_CTX_free","",""],[3,"BN_num_bits","",""],[3,"BN_set_negative","",""],[3,"BN_set_word","",""],[3,"BN_add","",""],[3,"BN_div","",""],[3,"BN_exp","",""],[3,"BN_gcd","",""],[3,"BN_mod_add","",""],[3,"BN_mod_exp","",""],[3,"BN_mod_inverse","",""],[3,"BN_mod_mul","",""],[3,"BN_mod_sqr","",""],[3,"BN_mod_sub","",""],[3,"BN_mul","",""],[3,"BN_nnmod","",""],[3,"BN_add_word","",""],[3,"BN_sub_word","",""],[3,"BN_mul_word","",""],[3,"BN_div_word","",""],[3,"BN_mod_word","",""],[3,"BN_sqr","",""],[3,"BN_sub","",""],[3,"BN_clear_bit","",""],[3,"BN_is_bit_set","",""],[3,"BN_lshift","",""],[3,"BN_lshift1","",""],[3,"BN_mask_bits","",""],[3,"BN_rshift","",""],[3,"BN_set_bit","",""],[3,"BN_rshift1","",""],[3,"BN_cmp","",""],[3,"BN_ucmp","",""],[3,"BN_generate_prime_ex","",""],[3,"BN_is_prime_ex","",""],[3,"BN_is_prime_fasttest_ex","",""],[3,"BN_rand","",""],[3,"BN_pseudo_rand","",""],[3,"BN_rand_range","",""],[3,"BN_pseudo_rand_range","",""],[3,"BN_bin2bn","",""],[3,"BN_bn2bin","",""],[3,"BN_dec2bn","",""],[3,"BN_bn2dec","",""],[3,"BN_hex2bn","",""],[3,"BN_bn2hex","",""],[3,"CRYPTO_num_locks","",""],[3,"CRYPTO_set_locking_callback","",""],[3,"CRYPTO_free","",""],[3,"CRYPTO_memcmp","",""],[3,"ERR_get_error","",""],[3,"ERR_lib_error_string","",""],[3,"ERR_func_error_string","",""],[3,"ERR_reason_error_string","",""],[3,"ERR_load_crypto_strings","",""],[3,"EVP_md5","",""],[3,"EVP_ripemd160","",""],[3,"EVP_sha1","",""],[3,"EVP_sha224","",""],[3,"EVP_sha256","",""],[3,"EVP_sha384","",""],[3,"EVP_sha512","",""],[3,"EVP_aes_128_cbc","",""],[3,"EVP_aes_128_ecb","",""],[3,"EVP_aes_256_cbc","",""],[3,"EVP_aes_256_ecb","",""],[3,"EVP_rc4","",""],[3,"EVP_CIPHER_CTX_new","",""],[3,"EVP_CIPHER_CTX_set_padding","",""],[3,"EVP_CIPHER_CTX_free","",""],[3,"EVP_CipherInit","",""],[3,"EVP_CipherUpdate","",""],[3,"EVP_CipherFinal","",""],[3,"EVP_DigestInit","",""],[3,"EVP_DigestInit_ex","",""],[3,"EVP_DigestUpdate","",""],[3,"EVP_DigestFinal","",""],[3,"EVP_DigestFinal_ex","",""],[3,"EVP_MD_CTX_create","",""],[3,"EVP_MD_CTX_destroy","",""],[3,"EVP_PKEY_new","",""],[3,"EVP_PKEY_free","",""],[3,"EVP_PKEY_assign","",""],[3,"EVP_PKEY_get1_RSA","",""],[3,"EVP_PKEY_set1_RSA","",""],[3,"HMAC_CTX_init","",""],[3,"HMAC_Init_ex","",""],[3,"HMAC_Final","",""],[3,"HMAC_Update","",""],[3,"HMAC_CTX_cleanup","",""],[3,"PEM_read_bio_X509","",""],[3,"PEM_write_bio_PrivateKey","",""],[3,"PEM_write_bio_X509","",""],[3,"PKCS5_PBKDF2_HMAC_SHA1","",""],[3,"RAND_bytes","",""],[3,"RSA_generate_key","",""],[3,"RSA_private_decrypt","",""],[3,"RSA_public_encrypt","",""],[3,"RSA_sign","",""],[3,"RSA_size","",""],[3,"RSA_verify","",""],[3,"SSL_library_init","",""],[3,"SSL_load_error_strings","",""],[3,"SSLv3_method","",""],[3,"TLSv1_method","",""],[3,"SSLv23_method","",""],[3,"SSL_new","",""],[3,"SSL_free","",""],[3,"SSL_set_bio","",""],[3,"SSL_get_rbio","",""],[3,"SSL_get_wbio","",""],[3,"SSL_accept","",""],[3,"SSL_connect","",""],[3,"SSL_ctrl","",""],[3,"SSL_get_error","",""],[3,"SSL_read","",""],[3,"SSL_write","",""],[3,"SSL_get_ex_data_X509_STORE_CTX_idx","",""],[3,"SSL_get_SSL_CTX","",""],[3,"SSL_get_current_compression","",""],[3,"SSL_get_peer_certificate","",""],[3,"SSL_COMP_get_name","",""],[3,"SSL_CTX_new","",""],[3,"SSL_CTX_free","",""],[3,"SSL_CTX_set_verify","",""],[3,"SSL_CTX_set_verify_depth","",""],[3,"SSL_CTX_load_verify_locations","",""],[3,"SSL_CTX_get_ex_new_index","",""],[3,"SSL_CTX_set_ex_data","",""],[3,"SSL_CTX_get_ex_data","",""],[3,"SSL_CTX_use_certificate_file","",""],[3,"SSL_CTX_use_PrivateKey_file","",""],[3,"SSL_CTX_set_cipher_list","",""],[3,"X509_add_ext","",""],[3,"X509_digest","",""],[3,"X509_free","",""],[3,"X509_get_serialNumber","",""],[3,"X509_get_subject_name","",""],[3,"X509_gmtime_adj","",""],[3,"X509_new","",""],[3,"X509_set_issuer_name","",""],[3,"X509_set_notAfter","",""],[3,"X509_set_notBefore","",""],[3,"X509_set_version","",""],[3,"X509_set_pubkey","",""],[3,"X509_sign","",""],[3,"X509_EXTENSION_free","",""],[3,"X509_NAME_add_entry_by_txt","",""],[3,"X509_NAME_get_index_by_NID","",""],[3,"X509_NAME_get_entry","",""],[3,"X509_NAME_ENTRY_get_data","",""],[3,"ASN1_STRING_to_UTF8","",""],[3,"X509_STORE_CTX_get_current_cert","",""],[3,"X509_STORE_CTX_get_error","",""],[3,"X509_STORE_CTX_get_ex_data","",""],[3,"X509V3_EXT_conf_nid","",""],[3,"X509V3_set_ctx","",""],[3,"i2d_RSA_PUBKEY","",""],[3,"d2i_RSA_PUBKEY","",""],[3,"i2d_RSAPrivateKey","",""],[3,"d2i_RSAPrivateKey","",""],[0,"probe","",""],[1,"ProbeResult","openssl-sys::probe",""],[11,"cert_file","","",1],[11,"cert_dir","","",1],[3,"find_certs_dirs","","Probe the system for the directory in which CA certificates should likely be\nfound."],[3,"init_ssl_cert_env_vars","",""],[3,"probe","",""],[4,"ASN1_INTEGER","openssl-sys",""],[4,"ASN1_STRING","",""],[4,"ASN1_TIME","",""],[4,"BIO","",""],[4,"BIO_METHOD","",""],[4,"BN_CTX","",""],[4,"COMP_METHOD","",""],[4,"CRYPTO_EX_DATA","",""],[4,"ENGINE","",""],[4,"EVP_CIPHER","",""],[4,"EVP_CIPHER_CTX","",""],[4,"EVP_MD","",""],[4,"EVP_PKEY","",""],[4,"EVP_PKEY_CTX","",""],[4,"RSA","",""],[4,"SSL","",""],[4,"SSL_CTX","",""],[4,"SSL_METHOD","",""],[4,"X509","",""],[4,"X509_CRL","",""],[4,"X509_EXTENSION","",""],[4,"X509_NAME","",""],[4,"X509_NAME_ENTRY","",""],[4,"X509_REQ","",""],[4,"X509_STORE_CTX","",""],[4,"CRYPTO_EX_new","",""],[4,"CRYPTO_EX_dup","",""],[4,"CRYPTO_EX_free","",""],[4,"PasswordCallback","",""],[18,"BIO_CTRL_EOF","",""],[18,"CRYPTO_LOCK","",""],[18,"MBSTRING_ASC","",""],[18,"MBSTRING_BMP","",""],[18,"MBSTRING_FLAG","",""],[18,"MBSTRING_UNIV","",""],[18,"MBSTRING_UTF8","",""],[18,"NID_ext_key_usage","",""],[18,"NID_key_usage","",""],[18,"SSL_CTRL_SET_TLSEXT_HOSTNAME","",""],[18,"SSL_ERROR_NONE","",""],[18,"SSL_ERROR_SSL","",""],[18,"SSL_ERROR_SYSCALL","",""],[18,"SSL_ERROR_WANT_ACCEPT","",""],[18,"SSL_ERROR_WANT_CONNECT","",""],[18,"SSL_ERROR_WANT_READ","",""],[18,"SSL_ERROR_WANT_WRITE","",""],[18,"SSL_ERROR_WANT_X509_LOOKUP","",""],[18,"SSL_ERROR_ZERO_RETURN","",""],[18,"SSL_VERIFY_NONE","",""],[18,"SSL_VERIFY_PEER","",""],[18,"TLSEXT_NAMETYPE_host_name","",""],[18,"V_ASN1_GENERALIZEDTIME","",""],[18,"V_ASN1_UTCTIME","",""],[18,"X509_FILETYPE_ASN1","",""],[18,"X509_FILETYPE_DEFAULT","",""],[18,"X509_FILETYPE_PEM","",""],[18,"X509_V_ERR_AKID_ISSUER_SERIAL_MISMATCH","",""],[18,"X509_V_ERR_AKID_SKID_MISMATCH","",""],[18,"X509_V_ERR_APPLICATION_VERIFICATION","",""],[18,"X509_V_ERR_CERT_CHAIN_TOO_LONG","",""],[18,"X509_V_ERR_CERT_HAS_EXPIRED","",""],[18,"X509_V_ERR_CERT_NOT_YET_VALID","",""],[18,"X509_V_ERR_CERT_REJECTED","",""],[18,"X509_V_ERR_CERT_REVOKED","",""],[18,"X509_V_ERR_CERT_SIGNATURE_FAILURE","",""],[18,"X509_V_ERR_CERT_UNTRUSTED","",""],[18,"X509_V_ERR_CRL_HAS_EXPIRED","",""],[18,"X509_V_ERR_CRL_NOT_YET_VALID","",""],[18,"X509_V_ERR_CRL_PATH_VALIDATION_ERROR","",""],[18,"X509_V_ERR_CRL_SIGNATURE_FAILURE","",""],[18,"X509_V_ERR_DEPTH_ZERO_SELF_SIGNED_CERT","",""],[18,"X509_V_ERR_DIFFERENT_CRL_SCOPE","",""],[18,"X509_V_ERR_ERROR_IN_CERT_NOT_AFTER_FIELD","",""],[18,"X509_V_ERR_ERROR_IN_CERT_NOT_BEFORE_FIELD","",""],[18,"X509_V_ERR_ERROR_IN_CRL_LAST_UPDATE_FIELD","",""],[18,"X509_V_ERR_ERROR_IN_CRL_NEXT_UPDATE_FIELD","",""],[18,"X509_V_ERR_EXCLUDED_VIOLATION","",""],[18,"X509_V_ERR_INVALID_CA","",""],[18,"X509_V_ERR_INVALID_EXTENSION","",""],[18,"X509_V_ERR_INVALID_NON_CA","",""],[18,"X509_V_ERR_INVALID_POLICY_EXTENSION","",""],[18,"X509_V_ERR_INVALID_PURPOSE","",""],[18,"X509_V_ERR_KEYUSAGE_NO_CERTSIGN","",""],[18,"X509_V_ERR_KEYUSAGE_NO_CRL_SIGN","",""],[18,"X509_V_ERR_KEYUSAGE_NO_DIGITAL_SIGNATURE","",""],[18,"X509_V_ERR_NO_EXPLICIT_POLICY","",""],[18,"X509_V_ERR_OUT_OF_MEM","",""],[18,"X509_V_ERR_PATH_LENGTH_EXCEEDED","",""],[18,"X509_V_ERR_PERMITTED_VIOLATION","",""],[18,"X509_V_ERR_PROXY_CERTIFICATES_NOT_ALLOWED","",""],[18,"X509_V_ERR_PROXY_PATH_LENGTH_EXCEEDED","",""],[18,"X509_V_ERR_SELF_SIGNED_CERT_IN_CHAIN","",""],[18,"X509_V_ERR_SUBJECT_ISSUER_MISMATCH","",""],[18,"X509_V_ERR_SUBTREE_MINMAX","",""],[18,"X509_V_ERR_UNABLE_TO_DECODE_ISSUER_PUBLIC_KEY","",""],[18,"X509_V_ERR_UNABLE_TO_DECRYPT_CERT_SIGNATURE","",""],[18,"X509_V_ERR_UNABLE_TO_DECRYPT_CRL_SIGNATURE","",""],[18,"X509_V_ERR_UNABLE_TO_GET_CRL","",""],[18,"X509_V_ERR_UNABLE_TO_GET_CRL_ISSUER","",""],[18,"X509_V_ERR_UNABLE_TO_GET_ISSUER_CERT","",""],[18,"X509_V_ERR_UNABLE_TO_GET_ISSUER_CERT_LOCALLY","",""],[18,"X509_V_ERR_UNABLE_TO_VERIFY_LEAF_SIGNATURE","",""],[18,"X509_V_ERR_UNHANDLED_CRITICAL_CRL_EXTENSION","",""],[18,"X509_V_ERR_UNHANDLED_CRITICAL_EXTENSION","",""],[18,"X509_V_ERR_UNNESTED_RESOURCE","",""],[18,"X509_V_ERR_UNSUPPORTED_CONSTRAINT_SYNTAX","",""],[18,"X509_V_ERR_UNSUPPORTED_CONSTRAINT_TYPE","",""],[18,"X509_V_ERR_UNSUPPORTED_EXTENSION_FEATURE","",""],[18,"X509_V_ERR_UNSUPPORTED_NAME_SYNTAX","",""],[18,"X509_V_OK","",""]],"paths":[[1,"BIGNUM"],[1,"ProbeResult"]]};

searchIndex['gcc'] = {"items":[[0,"","gcc",""],[1,"Config","","Extra configuration to pass to gcc."],[11,"include_directories","","Directories where gcc will look for header files.",0],[11,"definitions","","Additional definitions (`-DKEY` or `-DKEY=VALUE`).",0],[11,"objects","","Additional object files to link into the final archive",0],[11,"flags","","Additional flags and parameter to pass to the compiler",0],[3,"compile_library","","Compile a library from the given set of input C files."],[10,"default","","",0]],"paths":[[1,"Config"]]};

searchIndex['pkg-config'] = {"items":[[0,"","pkg-config",""],[1,"Options","",""],[11,"statik","","",0],[11,"atleast_version","","",0],[3,"target_supported","",""],[3,"find_library","",""],[3,"find_library_opts","",""],[3,"default_options","",""]],"paths":[[1,"Options"]]};

searchIndex['unicase'] = {"items":[[0,"","unicase","# Case"],[1,"UniCase","","Case Insensitive wrapper of strings."],[10,"fmt","","",0],[10,"clone","","",0],[4,"Target","",""],[10,"deref","","",0],[10,"deref_mut","","",0],[10,"as_slice","","",0],[10,"fmt","","",0],[10,"eq","","",0],[10,"eq","","",0],[10,"from_str","","",0],[10,"hash","","",0]],"paths":[[1,"UniCase"]]};

searchIndex['mucell'] = {"items":[[0,"","mucell","A cell with the ability to mutate the value through an immutable reference when safe."],[1,"MuCell","","A cell with the ability to mutate the value through an immutable reference when safe"],[1,"Ref","","An immutable reference to a `MuCell`. Dereference to get at the object."],[10,"new","","Construct a new cell containing the given value",0],[10,"borrow_mut","","Borrow the contained object mutably.",0],[10,"borrow","","Borrow the contained object immutably.",0],[10,"try_mutate","","Mutate the contained object if possible.",0],[10,"drop","","",1],[4,"Target","",""],[10,"deref","","",1],[10,"eq","","",0],[10,"partial_cmp","","",0],[10,"cmp","","",0],[10,"default","","",0],[10,"clone","","",0],[10,"fmt","","",0],[10,"fmt","","",0],[10,"fmt","","",0],[10,"fmt","","",0],[10,"fmt","","",0],[10,"fmt","","",0],[10,"fmt","","",0],[10,"fmt","","",0],[10,"rand","","",0],[10,"hash","","",0],[15,"mucell_ref_type!","","Create a new reference type to something inside the cell."]],"paths":[[1,"MuCell"],[1,"Ref"]]};

searchIndex['matches'] = {"items":[[0,"","matches",""],[15,"matches!","",""],[15,"_tt_as_expr_hack!","","Work around \"error: unexpected token: `an interpolated tt`\", whatever that means."]],"paths":[]};

searchIndex['unsafe-any'] = {"items":[[0,"","unsafe-any","Traits for unsafe downcasting from trait objects to & or &mut references of\nconcrete types. These should only be used if you are absolutely certain of the\ntype of the data in said trait object - there be dragons etc."],[6,"UnsafeAny","","A trait providing unchecked downcasting to its contents when stored\nin a trait object."],[6,"UnsafeAnyExt","","An extension trait for unchecked downcasting of trait objects."],[9,"downcast_ref_unchecked","","Returns a reference to the contained value, assuming that it is of type `T`.",0],[9,"downcast_mut_unchecked","","Returns a mutable reference to the contained value, assuming that it is of type `T`.",0],[9,"downcast_unchecked","","Returns a the contained value, assuming that it is of type `T`.",0],[10,"downcast_ref_unchecked","","Returns a reference to the contained value, assuming that it is of type `T`.",1],[10,"downcast_mut_unchecked","","Returns a mutable reference to the contained value, assuming that it is of type `T`.",1],[10,"downcast_unchecked","","Returns a the contained value, assuming that it is of type `T`.",1],[10,"downcast_ref_unchecked","","",2],[10,"downcast_mut_unchecked","","",2],[10,"downcast_unchecked","","",2]],"paths":[[6,"UnsafeAnyExt"],[6,"UnsafeAny"],[6,"Any"]]};

initSearch(searchIndex);
